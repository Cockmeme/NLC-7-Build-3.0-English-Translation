-------------------------------------------------------------------------------------------------------
-- —€ковы диалоги
-------------------------------------------------------------------------------------------------------
init_xvars()

table_food={
  "bread",
  "kolbasa",
  "green_kolbasa",
  "vodka",
  "energy_drink",
  "conserva"}
table_container={
  "arc_art_box_1basic",
  "arc_art_box_basic",
  "arc_art_box_8basic"}
table_aart={
  "af_medusa",
  "af_vyvert",
  "af_blood",
  "af_electra_sparkler",
  "af_drops",
  "af_ameba_slime",
  "af_rusty_thorn"}
table_bart={
  "af_cristal_flower",
  "af_gravi",
  "af_mincer_meat",
  "af_electra_flash",
  "af_fireball",
  "af_ameba_slug",
  "af_rusty_kristall"}
table_semart={
  "af_medusa",
  "af_vyvert",
  "af_blood",
  "af_electra_sparkler",
  "af_drops",
  "af_ameba_slime",
  "af_rusty_thorn",
  "af_cristal_flower",
  "af_gravi",
  "af_mincer_meat",
  "af_electra_flash",
  "af_fireball",
  "af_ameba_slug",
  "af_rusty_kristall"}
table_cart={
  "af_cristall",
  "af_night_star",
  "af_ameba_mica",
  "af_gold_fish",
  "af_rusty_sea-urchin",
  "af_soul",
  "af_electra_moonlight", 
  "af_crist_new",
  "af_flower_new",
  "af_star_new",
  "af_glass_new",
  "af_dummy_green_medusa",
  "af_dummy_green_vyvert",
  "af_dummy_green_blood"
}
table_dart={
  "af_dummy_spring",
  "af_dummy_dummy",
  "af_dummy_battery",
  "af_dummy_pellicle",
  "af_dummy_glassbeads",
  "af_dummy_fire",
  "af_red_dummy_spring",
  "af_red_dummy_battery",
  "af_red_dummy_pellicle",
  "af_battery",
  "af_sul_new",
  "af_eye",
  "af_compass",
  "af_ice",
  "af_dummy_sparkler",
  "af_dummy_kolobok"}
table_red_art={
  "af_red_dummy_spring",
  "af_red_dummy_battery",
  "af_red_dummy_pellicle"}
table_capsule={
  "af_night_star_capsule",
  "af_gold_fish_capsule",
  "af_cristall_capsule",
  "af_soul_capsule",
  "af_electra_moonlight_capsule",
  "af_rusty_sea-urchin_capsule",
  "af_ameba_mica_capsule",
  "af_dummy_spring_capsule",
  "af_dummy_dummy_capsule",
  "af_dummy_battery_capsule",
  "af_dummy_pellicle_capsule",
  "af_dummy_kolobok_capsule",
  "af_dummy_glassbeads_capsule"}
table_mayatniks={
  "af_mayatnik_tuman_new",
  "af_mayatnik_les_new",
  "af_mayatnik_radar_new",
  "af_mayatnik_tesla_new",
  "af_mayatnik_stadion_new",
  "af_mayatnik_chaes_new"
  }

table_sakboxes={
  "inventory_sakbox_05",
  "inventory_sakbox_gar_flame",
  "inventory_sakbox_borov",
  "inventory_sakbox_rad",
  "inventory_sakbox_repair_box",
  "inventory_sakbox_mil_svoboda",
  "inventory_sakbox_dolg_petrenko",
  "inventory_sakbox_yan_kruglov",
  "inventory_sakbox_mil_skraga"
  }

nagrad = {
  level_7 = {
  "grenade_f1",
  "ammo_9x39_ap",
  "ammo_5.45x39_ap",
  "ammo_5.56x45_ap",
  "ammo_7.62x39_ap",
  "ammo_7.62x54_7h14",
  "ammo_vog-25",
  "antirad",
  "medkit_scientic"},
  level_6 = {
  "conserva",
  "vodka",
  "antirad",
  "medkit"},
  level_5 = {
  "grenade_f1",
  "ammo_9x39_ap",
  "ammo_5.45x39_ap",
  "ammo_5.56x45_ap",
  "ammo_7.62x39_ap",
  "ammo_7.62x54_7h14",
  "ammo_vog-25",
  "antirad",
  "medkit_scientic"},
  level_4 = {
  "grenade_f1",
  "grenade_rgd5",
  "ammo_9x19_pbp",
  "ammo_9x39_pab9",
  "ammo_9x39_ap",
  "ammo_5.45x39_ap",
  "ammo_5.56x45_ap",
  "ammo_7.62x39_ap",
  "ammo_7.62x54_7h14",
  "ammo_m209",
  "ammo_vog-25",
  "medkit_army",
  "medkit_scientic",
  "antirad"},
  level_3 = {
  "grenade_rgd5",
  "ammo_9x19_pbp",
  "ammo_9x18_fmj",
  "ammo_11.43x23_fmj",
  "ammo_5.45x39_ap",
  "ammo_5.56x45_ap",
  "ammo_5.56x45_ss190",
  "ammo_5.45x39_fmj",
  "ammo_7.62x39_fmj",
  "ammo_7.62x39_ap",
  "ammo_og-7b",
  "ammo_m209",
  "vodka",
  "medkit_army",
  "antirad"},
  level_2 = {
  "grenade_rgd5",
  "ammo_9x18_pmm",
  "ammo_5.45x39_fmj",
  "ammo_9x19_fmj",
  "ammo_12x70_buck",
  "ammo_7.62x39_fmj",
  "ammo_vog-25p",
  "vodka",
  "conserva",
  "medkit_army",
  "bandage",
  "antirad",
  "medkit"},
  level_1 = {
  "grenade_rgd5",
  "ammo_9x18_pmm",
  "bandage",
  "ammo_12x70_buck",
  "vodka",
  "bandage",
  "conserva",
  "bandage",
  "medkit"}}

local has_kozel={
 "trader_task_failed",
 "barman_task_failed",
 "ecolog_task_failed",
 "dolg_task_failed",
 "borov_task_failed",
 "freedom_task_failed",
 "prapor_task_failed",
 "cherep_task_failed",
 "povar_task_failed",
 "engineer_task_failed",
 "capten_task_failed",
 "skraga_task_failed",
 "wolf_task_failed",
 "shustriy_task_failed",
 "drunk_dolg_task_failed",
 "hunter_task_failed",
 "zastava_commander_task_failed",
 "petrenko_task_failed",
 "lisiy_task_failed",
 "voron_task_failed",
 "pahom_task_failed",
 "lim_trader_task_failed",
 "volkodav_task_failed",
 "lesnik_task_failed",
 "mercenary_task_failed",
 "borzyi_task_failed",
 "green_glavn_task_failed",
 "boryan_task_failed"
}

function actor_active_item(n)
 return db.actor:item_in_slot(n)
end


function need_zub_repa_up()
	for a=1, #has_kozel do
		if has_alife_info(has_kozel[a]) then return true end
	end
	return false
end
function add_good_rand_aart()
  local m_h = level:get_time_hours()+1
  while m_h>7 do
    m_h=m_h-7
  end
  local section=table_aart[m_h]
  section=section.."_dyn5d"
  sak.create_items(db.actor,section,1)
end
function add_good_rand_bart()
  local m_h = level:get_time_hours()+1
  while m_h>7 do
    m_h=m_h-7
  end
  local section=table_bart[m_h]
  section=section.."_dyn5d"
  sak.create_items(db.actor,section,1)
end
function add_good_rand_cart()
  local m_h = level:get_time_hours()+1
  while m_h>7 do
    m_h=m_h-7
  end
  local section=table_cart[m_h]
  section=section.."_dyn5d"
  sak.create_items(db.actor,section,1)
end
function rand_aart()
  local section=table_aart[lua_random(1,#table_aart)]
  return section.."_dyn"..lua_random(2,4).."d"
end
function rand_bart()
  local section=table_bart[lua_random(1,#table_bart)]
  return section.."_dyn"..lua_random(2,4).."d"
end
function rand_semart()
  local section=table_semart[lua_random(1,#table_semart)]
  return section.."_dyn"..lua_random(2,4).."d"
end
function gg_2_aart_have()
  return gg_n_aart_have(2)
end
function give_2_aart()
  give_n_aart(2)
end
function gg_2_bart_have()
  return gg_n_bart_have(2)
end
function give_2_bart()
  give_n_bart(2)
end
function gg_2_cart_have()
  return gg_n_cart_have(2)
end
function give_2_cart()
  give_n_cart(2)
end
function gg_3_aart_have()
  return gg_n_aart_have(3)
end
function give_3_aart()
  give_n_aart(3)
end
function gg_3_bart_have()
  return gg_n_bart_have(3)
end
function give_3_bart()
  give_n_bart(3)
end
function gg_3_cart_have()
  return gg_n_cart_have(3)
end
function give_3_cart()
  give_n_cart(3)
end
function gg_4_aart_have()
  return gg_n_aart_have(4)
end
function give_4_aart()
  give_n_aart(4)
end
function gg_4_bart_have()
  return gg_n_bart_have(4)
end
function give_4_bart()
  give_n_bart(4)
end
function gg_4_cart_have()
  return gg_n_cart_have(4)
end
function give_4_cart()
  give_n_cart(4)
end
function gg_5_aart_have()
  return gg_n_aart_have(5)
end
function give_5_aart()
  give_n_aart(5)
end
function gg_5_dart_have()
  return gg_n_dart_have(5)
end
function give_5_dart()
  give_n_dart(5)
end

function gg_n_aart_have(n)
  local amount=0
  for a=1, #table_aart do
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_aart[a],1,true) then
        local count = #k
        amount=amount+count
      end
    end
  end
  if amount>=n then return true end
end
function give_n_aart(n)
  local amount
  local art_kol=n
  for a=1, #table_aart do
  amount=0
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_aart[a],1,true) then
        local count = #k
        for m=1,count do
          if art_kol>0 then
          local obj=g_sim:object(k[m])
          if obj then
          g_sim:release(obj, true)
          end
          amount=amount+1
          art_kol=art_kol-1
          end
        end
      end
    end
    if amount~=0 then
    sak.relocate_item(db.actor, "out", table_aart[a], amount)
    end
  end
end
function gg_n_bart_have(n)
  local amount=0
  for a=1, #table_bart do
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_bart[a],1,true) and not strpos(i, "_new",1,true) then
        local count = #k
        amount=amount+count
      end
    end
  end
  if amount>=n then return true end
end
function give_n_bart(n)
  local amount
  local art_kol=n
  for a=1, #table_bart do
  amount=0
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_bart[a],1,true) and not strpos(i, "_new",1,true) then
        local count = #k
        for m=1,count do
          if art_kol>0 then
          local obj=g_sim:object(k[m])
          if obj then
          g_sim:release(obj, true)
          end
          amount=amount+1
          art_kol=art_kol-1
          end
        end
      end
    end
    if amount~=0 then
    sak.relocate_item(db.actor, "out", table_bart[a], amount)
    end
  end
end
function gg_n_cart_have(n)
  local amount=0
  for a=1, #table_cart do
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_cart[a],1,true) and not strpos(i, "_capsule",1,true) then
        local count = #k
        amount=amount+count
      end
    end
  end
  if amount>=n then return true end
end
function give_n_cart(n)
  local amount
  local art_kol=n
  for a=1, #table_cart do
  amount=0
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_cart[a],1,true) and not strpos(i, "_capsule",1,true)  then
        local count = #k
        for m=1,count do
          if art_kol>0 then
          local obj=g_sim:object(k[m])
          if obj then
          g_sim:release(obj, true)
          end
          amount=amount+1
          art_kol=art_kol-1
          end
        end
      end
    end
    if amount~=0 then
    sak.relocate_item(db.actor, "out", table_cart[a], amount)
    end
  end
end
function gg_n_dart_have(n)
  local amount=0
  for a=1, #table_dart do
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_dart[a],1,true) and not strpos(i, "_capsule",1,true) then
        local count = #k
        amount=amount+count
      end
    end
  end
  if amount>=n then return true end
end
function give_n_dart(n)
  local amount
  local art_kol=n
  for a=1, #table_dart do
  amount=0
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_dart[a],1,true) and not strpos(i, "_capsule",1,true) then
        local count = #k
        for m=1,count do
          if art_kol>0 then
          local obj=g_sim:object(k[m])
          if obj then
          g_sim:release(obj, true)
          end
          amount=amount+1
          art_kol=art_kol-1
          end
        end
      end
    end
    if amount~=0 then
    sak.relocate_item(db.actor, "out", table_dart[a], amount)
    end
  end
end
  local add_art_plus=""
function gg_2_aart_identic_have()
  return gg_n_aart_identic_have(2)
end
function give_2_aart_identic()
  give_n_aart_identic(2)
end
function gg_n_aart_identic_have(n)
  for a=1, #table_aart do
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_aart[a],1,true) and strpos(i, "_dyn",-6,true) and (tonumber(string.sub(i,-2,-2))<5) and #k>=n then
        return true
      end
    end
  end
end
function give_n_aart_identic(n)
  local section
  local num=1
  for a=1, #table_aart do
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_aart[a],1,true) and strpos(i, "_dyn",-6,true) and (tonumber(string.sub(i,-2,-2))<5) and #k>=n then
      section=tostring(table_aart[a])
      num=tonumber(string.sub(i,-2,-2))+1
        if num>5 then num=5 end
        for m=1,n do
          local obj=g_sim:object(k[m])
          if obj then
          g_sim:release(obj, true)
          end
        end
        sak.relocate_item(db.actor, "out", table_aart[a], n)
        add_art_plus=section.."_dyn"..num.."d"
        return
      end
    end
  end
end
function gg_2_bart_identic_have()
  return gg_n_bart_identic_have(2)
end
function give_2_bart_identic()
  give_n_bart_identic(2)
end
function gg_n_bart_identic_have(n)
  for a=1, #table_bart do
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_bart[a],1,true) and strpos(i, "_dyn",-6,true) and (tonumber(string.sub(i,-2,-2))<5) and #k>=n then
        return true
      end
    end
  end
end
function give_n_bart_identic(n)
  local section
  local num=1
  for a=1, #table_bart do
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_bart[a],1,true) and strpos(i, "_dyn",-6,true) and (tonumber(string.sub(i,-2,-2))<5) and #k>=n then
      section=tostring(table_bart[a])
      num=tonumber(string.sub(i,-2,-2))+1
        if num>5 then num=5 end
        for m=1,n do
          local obj=g_sim:object(k[m])
          if obj then
          g_sim:release(obj, true)
          end
        end
        sak.relocate_item(db.actor, "out", table_bart[a], n)
        add_art_plus=section.."_dyn"..num.."d"
        return
      end
    end
  end
end
function gg_2_cart_identic_have()
  return gg_n_cart_identic_have(2)
end
function give_2_cart_identic()
  give_n_cart_identic(2)
end
function gg_n_cart_identic_have(n)
  for a=1, #table_cart do
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_cart[a],1,true) and strpos(i, "_dyn",-6,true) and (tonumber(string.sub(i,-2,-2))<5) and #k>=n then
        return true
      end
    end
  end
end
function give_n_cart_identic(n)
  local section
  local num=1
  for a=1, #table_cart do
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_cart[a],1,true) and strpos(i, "_dyn",-6,true) and (tonumber(string.sub(i,-2,-2))<5) and #k>=n then
      section=tostring(table_cart[a])
      num=tonumber(string.sub(i,-2,-2))+1
      if num>5 then num=5 end
        for m=1,n do
          local obj=g_sim:object(k[m])
          if obj then
          g_sim:release(obj, true)
          end
        end
        sak.relocate_item(db.actor, "out", table_cart[a], n)
        add_art_plus=section.."_dyn"..num.."d"
        return
      end
    end
  end
end
function add_art_identic_plus()
  if add_art_plus~="" then
  sak.create_items(db.actor,add_art_plus,1)
  add_art_plus=""
  end
end
--- hidden from here
function spawn_arts_cont(obj_sp)
  local rand_kol=lua_random(3)
  local arts=""
  for a=1,rand_kol do
    if arts=="" then
    arts=table_aart[lua_random(7)].."_dyn5d_"..(lua_random(80,98))
    else
    arts=arts..","..table_aart[lua_random(7)].."_dyn5d_"..(lua_random(50,98))
    end
  end
  local pk = get_netpk(obj_sp)
  local data = pk:get()
  data.custom_data = arts
  pk:set(data)
end
function add_red_rjaboi_kontainer()
  local obj=g_sim:story_object(story_ids.red_stalker_rjaboy)
  local sobj
  if obj then
    sobj = g_sim:create("arc_art_box_1basic",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  end
  if obj.online then
     g_sim:set_switch_online(obj.id, false)
     g_sim:set_switch_offline(obj.id, true)
     amk.convert_npc[obj.id]=1
  end
  local pk = get_netpk(sobj)
  local data = pk:get()
  data.custom_data = "af_compass_dyn2d_50"
  pk:set(data)
  obj=g_sim:story_object(story_ids.mil_rjaboi)
  if obj then
      local pk = get_netpk(obj)
      local data = pk:get()
      data.health     = 0
      data.upd.health = 0
      pk:set(data)
    g_sim:create("mil_rjaboi_letter",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  end
end

function have_many_arts() -- many - много?! ѕохоже подразумеваетс€ money
  local cost = 0
  local ini = system_ini()
  -- for i, ids in pairs(sak_inventory.rucksack) do
  for id, rec in arc_arts.inv_arts:pairs() do
    if not strposx(rec.section, black_tip.section)  then
      local sect = rec.section or rec.x_section
      local cond = rec.condition or 1.0
      wprintf(" testing~C0A %25s~C07, condition =~C0D %.3f~C07", sect, cond)

      if sect ~= "?" and ini:section_exist(sect) then
         sys_cost    = ini:r_float(sect, "cost")
         cost = cost + sys_cost * cond
      end -- if exist artefact

    end
  end

  if cost >= 45000 then
     nlc_vars.price_arts = nil
     return true
  else
     return false
  end
end

have_many_arts = have_many_arts

function give_spec_arts(list)
 local amount = 0
 for i, sect in ipairs(list) do
    amount=0
    for i, ids in pairs(sak_inventory.rucksack) do
      if i and strposx(i, sect) then
        for n, id in ipairs(ids) do
          misc.release_obj(id, true)
          amount = amount + 1
        end
      end
    end
    if amount ~= 0 then
       sak.relocate_item(db.actor, "out", sect, amount)
    end
  end
end


function give_many_arts() -- вообще забрать все известные артефакты!
  give_spec_arts(table_capsule)
  give_spec_arts(table_dart)
  give_spec_arts(table_cart)
  give_spec_arts(table_bart)
  give_spec_arts(table_aart)
end
function val_x18_exit_base_empty()
  return xr_conditions.gulag_empty(nil, nil, {"val_x18_exit_base"})
end
function val_x18_exit_base_no_empty()
  return not val_x18_exit_base_empty()
end
function is_scaf()
  local armor = actor_active_item(6)
  if armor and (strpos(armor:section(),"scientific",1,true) or strpos(armor:section(),"ecolog",1,true)) then
    return true
  else
    return false
  end
end
function is_not_scaf()
  return not is_scaf()
end
function shurup_charge_pda_time()
  start_time("shurup_charge_pda_time")
end
function nps_have_lr300_m1(first_speaker, second_speaker)
  local obj=first_speaker:object("wpn_lr300_m1")
  if obj then
  return true
  else return false
  end
end
function nps_have_gungauss(first_speaker, second_speaker)
  local obj=first_speaker:object("wpn_gungauss")
  if obj then
  return true
  else return false
  end
end
function nps_not_have_gungauss(first_speaker, second_speaker)
  return not nps_have_gungauss(first_speaker, second_speaker)
end
function nps_take_gungauss(first_speaker, second_speaker)
  local obj=first_speaker:object("wpn_gungauss")
  if obj then
  first_speaker:transfer_item(obj, db.actor)
  sak.relocate_item(second_speaker, "in", "wpn_gungauss", 1)
  end
end
function actor_have_ak()
  for i,k in pairs(sak_inventory.rucksack) do
    if strpos(i, "wpn_ak",1,true) then
      return true
    end
  end
  local ak_in_slot=actor_active_item(2)
  if ak_in_slot and strpos(ak_in_slot:section(), "wpn_ak",1,true) then return true end
end
function give_ak(first_speaker, second_speaker)
  for i,k in pairs(sak_inventory.rucksack) do
    if strpos(i, "wpn_ak",1,true) then
      local obj=client_obj(k[1])
      second_speaker:transfer_item(obj, first_speaker)
      dialogs.relocate_item_section(second_speaker, i, "out")
      return
    end
  end
  local ak_in_slot=actor_active_item(2)
  if ak_in_slot and strpos(ak_in_slot:section(), "wpn_ak",1,true) then
  local obj=client_obj(ak_in_slot:id())
  second_speaker:transfer_item(obj, first_speaker)
  dialogs.relocate_item_section(second_speaker, obj:section_name(), "out") return end
end
function nps_not_have_lr300_m1(first_speaker, second_speaker)
  return not nps_have_lr300_m1(first_speaker, second_speaker)
end
function nps_take_lr300_m1(first_speaker, second_speaker)
  local obj=first_speaker:object("wpn_lr300_m1")
  if obj then
  first_speaker:transfer_item(obj, db.actor)
  sak.relocate_item(second_speaker, "in", "wpn_lr300_m1", 1)
  end
end
function add_gift_docent()

end
function add_ak_for_ivan(first_speaker, second_speaker)
  local ivan = 38
  local obj = g_sim:story_object(ivan)
  g_sim:create("wpn_ak74u", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("ammo_5.45x39_ap", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
end
function is_ready_time_shurup_charge_pda()
  return is_ready_time("shurup_charge_pda_time",30)==true
end
function not_ready_time_shurup_charge_pda()
  return not_ready_time("shurup_charge_pda_time",30)==true
end
function clear_ready_time_shurup_charge_pda()
  clear_ready_time("shurup_charge_pda_time")
end
function give_shurup_uncharge_pda(first_speaker, second_speaker)
  if not has_alife_info("shurup_charge_pda_not_ready") then
  dialogs.relocate_item_section(second_speaker, "device_pda_npc", "out")
  end
end

-- плата за возможность поиска у ƒоцента в Ѕаре
function bar_docent_npc_search_available_payment_have()
	return sak.have_items_count("device_pda_npc",20)~=false
end
function bar_docent_npc_search_available_payment()
	sak_inventory.release_actor_items("device_pda_npc",20)
end

-- плата за поиск людей у ƒоцента в Ѕаре
function bar_docent_npc_search_text_money()
	local summ = 500+math.ceil(math.sqrt(sak.day_money))*100
	db.actor:give_talk_message("%c[255,216,186,140]ѕлата "..summ.." рубликов. ≈сли имеешь - диктуй им€.","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function bar_docent_npc_search_money_have()
	local summ = 500+math.ceil(math.sqrt(sak.day_money))*100
	return db.actor:money()>=summ
end
function bar_docent_npc_search_give_money(t1,t2)
	local summ = 500+math.ceil(math.sqrt(sak.day_money))*100
	local npc=t1
	if npc:id()==db.actor:id() then npc=t2 end
	relocate_money(npc,summ,1)
end

function docent_pda_krysyka_start_time()
  start_time("docent_pda_krysyka_time")
end
function is_ready_time_docent_pda_krysyka()
  return is_ready_time("docent_pda_krysyka_time",24*59)==true
end
function not_ready_time_docent_pda_krysyka()
  return not_ready_time("docent_pda_krysyka_time",24*59)==true
end
function clear_ready_time_docent_pda_krysyka()
  clear_ready_time("docent_pda_krysyka_time")
end
function osvedomitel_pda_krysyka_start_time()
  start_time("osvedomitel_pda_krysyka_time")
end
function is_ready_time_osvedomitel_pda_krysyka()
  return is_ready_time("osvedomitel_pda_krysyka_time",3*59)==true
end
function not_ready_time_osvedomitel_pda_krysyka()
  return not_ready_time("osvedomitel_pda_krysyka_time",3*59)==true
end
function clear_ready_time_osvedomitel_pda_krysyka()
  clear_ready_time("osvedomitel_pda_krysyka_time")
end
function fanat_teleport_start_time()
  start_time("fanat_teleport_time")
end
function is_ready_time_fanat_teleport()
  return is_ready_time("fanat_teleport_time",10)==true
end
function not_ready_time_fanat_teleport()
  return not_ready_time("fanat_teleport_time",10)==true
end
function clear_ready_time_fanat_teleport()
  clear_ready_time("fanat_teleport_time")
end
function saharov_teleport_start_time()
  start_time("saharov_teleport_time")
end
function is_ready_time_saharov_teleport()
  return is_ready_time("saharov_teleport_time",10)==true
end
function not_ready_time_saharov_teleport()
  return not_ready_time("saharov_teleport_time",10)==true
end
function clear_ready_time_saharov_teleport()
  clear_ready_time("saharov_teleport_time")
end
function skraga_teleport_start_time()
  start_time("skraga_teleport_time")
end
function is_ready_time_skraga_teleport()
  return is_ready_time("skraga_teleport_time",15)==true
end
function not_ready_time_skraga_teleport()
  return not_ready_time("skraga_teleport_time",15)==true
end
function clear_ready_time_skraga_teleport()
  clear_ready_time("skraga_teleport_time")
end
function max_teleport_start_time()
  start_time("max_teleport_time")
end
function is_ready_time_max_teleport()
  return is_ready_time("max_teleport_time",12)==true
end
function not_ready_time_max_teleport()
  return not_ready_time("max_teleport_time",12)==true
end
function clear_ready_time_max_teleport()
  clear_ready_time("max_teleport_time")
end
function povar_teleport_start_time()
  start_time("povar_teleport_time")
end
function is_ready_time_povar_teleport()
  return is_ready_time("povar_teleport_time",22)==true
end
function not_ready_time_povar_teleport()
  return not_ready_time("povar_teleport_time",22)==true
end
function clear_ready_time_povar_teleport()
  clear_ready_time("povar_teleport_time")
end
function saharov_charge_pda_time()
  start_time("saharov_charge_pda_time")
end
function is_ready_time_saharov_charge_pda()
  return is_ready_time("saharov_charge_pda_time",30)==true
end
function not_ready_time_saharov_charge_pda()
  return not_ready_time("saharov_charge_pda_time",30)==true
end
function clear_ready_time_saharov_charge_pda()
  clear_ready_time("saharov_charge_pda_time")
end
function tesla_provodnik_drunk_time()
  start_time("tesla_provodnik_drunk_time")
end
function is_ready_time_tesla_provodnik_drunk()
  return is_ready_time("tesla_provodnik_drunk_time",130)==true
end
function not_ready_time_tesla_provodnik_drunk()
  return not_ready_time("tesla_provodnik_drunk_time",130)==true
end
function clear_ready_time_tesla_provodnik_drunk()
  clear_ready_time("tesla_provodnik_drunk_time")
end
function start_time_fanat_teleport_04()
  start_time("fanat_teleport_04_time")
end
function is_ready_time_fanat_teleport_04()
  return is_ready_time("fanat_teleport_04_time",1100)==true
end
function not_ready_time_fanat_teleport_04()
  return not_ready_time("fanat_teleport_04_time",1100)==true
end
function clear_ready_time_fanat_teleport_04()
  clear_ready_time("fanat_teleport_04_time")
end
function marsh_baze_x16_time()
  start_time("marsh_baze_x16_time")
end
function is_ready_time_marsh_baze_x16()
  return is_ready_time("marsh_baze_x16_time",125)==true
end
function not_ready_time_marsh_baze_x16()
  return not_ready_time("marsh_baze_x16_time",125)==true
end
function clear_ready_time_marsh_baze_x16()
  clear_ready_time("marsh_baze_x16_time")
end
function voronin_add_prize()
  sak.create_items(db.actor, "bandage",10)
  sak.create_items(db.actor, "antirad",2)
  sak.create_items(db.actor, "medkit_army",3)
  sak.create_items(db.actor, "ammo_5.45x39_ap",5)
  --dialogs.relocate_money(db.actor,30000,"in")
  relocate_money(db.actor, 30000, "in")
end
function voronin_prot_time()
  start_time("voronin_prot_time")
end
function is_ready_time_voronin_prot()
  return is_ready_time("voronin_prot_time",60*24*6)==true
end
function not_ready_time_voronin_prot()
  return not_ready_time("voronin_prot_time",60*24*6)==true
end
function clear_ready_time_voronin_prot()
  clear_ready_time("voronin_prot_time")
end
function saharov_teleport_start_time()
  start_time("saharov_teleport_time")
end
function is_ready_time_saharov_teleport()
  return is_ready_time("saharov_teleport_time",60*25*3)==true
end
function not_ready_time_saharov_teleport()
  return not_ready_time("saharov_teleport_time",60*25*3)==true
end
function clear_ready_time_saharov_teleport()
  clear_ready_time("saharov_teleport_time")
end
function saharov_entry_x16_time()
  start_time("saharov_entry_x16_time")
end
function is_ready_time_saharov_entry_x16()
  return is_ready_time("saharov_entry_x16_time",96)==true
end
function not_ready_time_saharov_entry_x16()
  return not_ready_time("saharov_entry_x16_time",96)==true
end
function clear_ready_time_saharov_entry_x16()
  clear_ready_time("saharov_entry_x16_time")
end
function give_saharov_uncharge_pda(first_speaker, second_speaker)
  if not has_alife_info("saharov_charge_pda_not_ready") then
  dialogs.relocate_item_section(second_speaker, "device_pda_npc", "out")
  end
end
function lisaped_charge_pda_time()
  start_time("lisaped_charge_pda_time")
end
function is_ready_time_lisaped_charge_pda()
  return is_ready_time("lisaped_charge_pda_time",30)==true
end
function not_ready_time_lisaped_charge_pda()
  return not_ready_time("lisaped_charge_pda_time",30)==true
end
function clear_ready_time_lisaped_charge_pda()
  clear_ready_time("lisaped_charge_pda_time")
end
function give_lisaped_uncharge_pda(first_speaker, second_speaker)
  if not has_alife_info("lisaped_charge_pda_not_ready") then
  dialogs.relocate_item_section(second_speaker, "device_pda_npc", "out")
  end
end
function vergas_charge_pda_time()
  start_time("vergas_charge_pda_time")
end
function is_ready_time_vergas_charge_pda()
  return is_ready_time("vergas_charge_pda_time",30)==true
end
function not_ready_time_vergas_charge_pda()
  return not_ready_time("vergas_charge_pda_time",30)==true
end
function clear_ready_time_vergas_charge_pda()
  clear_ready_time("vergas_charge_pda_time")
end
function kuznezov_shkura_time()
  start_time("kuznezov_shkura_time")
end
function is_ready_time_kuznezov_shkura()
  return is_ready_time("kuznezov_shkura_time",160)==true
end
function not_ready_time_kuznezov_shkura()
  return not_ready_time("kuznezov_shkura_time",160)==true
end
function clear_ready_time_kuznezov_shkura()
  clear_ready_time("kuznezov_shkura_time")
end

function clear_ready_time_sherstyk_shkura()
  clear_ready_time("sherstyk_shkura_time")
end

function give_vergas_uncharge_pda(first_speaker, second_speaker)
  if not has_alife_info("vergas_charge_pda_not_ready") then
  local ids,cnt = registry.inv_objects(second_speaker:id(), true)
    for n = 1,cnt do
    local id = ids[n]
    local sobj = client_obj(id)
    if sobj then
      if sobj:section()=="device_pda_npc" then
        misc.release_obj(id)
      end
    end
    end
  dialogs.relocate_item_section(second_speaker, "device_pda_npc", "out")
  end
end
function give_uncharge_pda(first_speaker, second_speaker)
  local ids,cnt = registry.inv_objects(second_speaker:id(), true)
    for n = 1,cnt do
    local id = ids[n]
    local sobj = client_obj(id)
    if sobj then
      if sobj:section()=="device_pda_npc" then
        misc.release_obj(id)
      end
    end
    end
  dialogs.relocate_item_section(second_speaker, "device_pda_npc", "out")
end
function take_uncharge_pda(first_speaker, second_speaker)
  first_speaker:transfer_item(first_speaker:object("device_pda_npc"), second_speaker)
  sak.relocate_item(second_speaker, "in", "device_pda_npc", 1)
end
function charging_pda(first_speaker, second_speaker)
  local obj=first_speaker:object("device_pda_npc")
  if obj then
  local pda_id=obj:id()
  vergas_pda.charge_pda(pda_id)
  end
end
function good_charge_pda(first_speaker, second_speaker)
  local obj=first_speaker:object("device_pda_npc")
  if obj then
  local pda_id=obj:id()
  return vergas_pda.charge_pda(pda_id)
  end
end
function is_good_pda_have(first_speaker, second_speaker)
  local obj=first_speaker:object("device_pda_npc")
  if obj then
  local pda_id=obj:id()
  return vergas_pda.good_pda_have(pda_id)
  end
end
function bad_charge_pda(first_speaker, second_speaker)
  return not good_charge_pda(first_speaker, second_speaker)
end
function charge_pda_have()
  return sak.have_items_count("device_pda_npc",1)~=false
end
function take_bino(first_speaker, second_speaker)
  first_speaker:transfer_item(first_speaker:object("wpn_binoc"), second_speaker)
  sak.relocate_item(second_speaker, "in", "wpn_binoc", 1)
end
function blow_time()
  if ((amk_vars.blowout or -1) > -1 and (amk_vars.blowout or -1) < 5) then return true end
end
function no_blow_time()
  return not blow_time()
end
function bar_dolg_debt_show()
  stalker_show("bar_dolg_debt_1")
end
function bar_dolg_debt_remove()
  remove_npc_from_npc_targets("bar_dolg_debt_1")
end
function bar_red_x16_remove()
  remove_npc_from_npc_targets("bar_red_x16")
end
function add_botans_report_dialog()
 if search_npc("yan_Ecolog","botans_report_ecolog_dialog","botans_report_1") then return else
    search_npc("sim_Ecolog","botans_report_ecolog_dialog","botans_report_1")
 end
end
function botans_report_show()
  stalker_show("botans_report_1")
end
function botans_report_remove()
  remove_npc_from_npc_targets("botans_report_1")
end
function add_personal_things_2_dialog()
  search_npc("mil_Svoboda_regular","personal_things_third_dialog","drug_2")
end
function personal_things_2_show()
  stalker_show("drug_2")
end
function personal_things_2_remove()
  remove_npc_from_npc_targets("drug_2")
end
function add_personal_things_prize()
  --local count = lua_random(8,15)
  --for i=1,count do
  --item = nagrad.level_6[lua_random(table.getn(nagrad.level_6))]
    sak.create_items(db.actor, "af_full_akkum",2)
    sak.create_items(db.actor, "ammo_7.62x39_ap",5)
  --end
end
function add_personal_things_1_dialog()
  search_npc("sim_stalker_general","personal_things_second_dialog","drug_1")
end
function personal_things_1_show()
  stalker_show("drug_1")
end
function personal_things_1_remove()
  remove_npc_from_npc_targets("drug_1")
end
function add_scarman_1_dialog()
  search_npc("sim_stalker_general","scarman_dialog","tomber")
end
function scarman_1_show()
  stalker_show("tomber")
end
function scarman_1_remove()
  remove_npc_from_npc_targets("tomber")
end
function add_scarman_2_dialog()
  search_npc("mil_Svoboda_regular","tomber_scarman_dialog","tomber2")
end
function scarman_2_show()
  stalker_show("tomber2")
end
function scarman_2_remove()
  remove_npc_from_npc_targets("tomber2")
end
function add_dolgman_postmens()
  search_npc("gar_dolg_blokpost","dolgman_postmens_dialog","postmen")
end
function dolgman_postmens_show()
  stalker_show("postmen")
end
function dolgman_postmens_remove()
  remove_npc_from_npc_targets("postmen")
end
function add_hunters_toz_stalker()
  search_npc("sim_green_general","hunters_toz_stalker_dialog","hunters_toz")
end
function hunters_toz_stalker_show()
  stalker_show("hunters_toz")
end
function hunters_toz_stalker_remove()
  remove_npc_from_npc_targets("hunters_toz")
end

function vergas_klava_time()
  start_time("time_start_vergas_klava")
end
function is_ready_time_vergas_klava()
  return is_ready_time("time_start_vergas_klava",26)==true
end
function not_ready_time_vergas_klava()
  return not_ready_time("time_start_vergas_klava",26)==true
end
function clear_ready_time_vergas_klava()
  clear_ready_time("time_start_vergas_klava")
end
function sidor_klava_rep_time()
  start_time("time_start_sidor_klava_rep")
end
function is_ready_time_sidor_klava_rep()
  return is_ready_time("time_start_sidor_klava_rep",9*60)==true
end
function not_ready_time_sidor_klava_rep()
  return not_ready_time("time_start_sidor_klava_rep",9*60)==true
end
function clear_ready_time_sidor_klava_rep()
  clear_ready_time("time_start_sidor_klava_rep")
end
function not_have_big_akkum()
  return not have_big_akkum()
end
function not_have_akkum()
  return not have_akkum()
end
function is_ready_time_kulinar_voron_box()
  return is_ready_time("start_kulinar_voron_time",123)
end
function not_ready_time_kulinar_voron_box()
  return not_ready_time("start_kulinar_voron_time",123)
end
function clear_ready_time_kulinar_voron_box()
  clear_ready_time("start_kulinar_voron_time")
end
function is_ready_time_to_game()
  return is_ready_time("start_antichit_time",25)
end
function not_ready_time_to_game()
  return not_ready_time("start_antichit_time",25)
end
function is_ready_time_to_treasure()
  return is_ready_time("start_treasure_time",20)
end
function not_ready_time_to_treasure()
  return not_ready_time("start_treasure_time",20)
end
function starts_treasure_time()
  start_time("start_treasure_time")
end
function actor_on_bar()
  local loka = level.name()
  if db.actor and loka=="l05_bar" then
  return true
  else
  return false
  end
end
function actor_on_marsh()
  local loka = level.name()
  return loka=="marsh"
end
function actor_not_on_marsh()
  return not actor_on_marsh()
end
function serafm_1_scaner_time()
  start_time("time_start_serafm_1_scaner")
end
function is_ready_time_serafm_1_scaner()
  return is_ready_time("time_start_serafm_1_scaner",120*60)==true
end
function not_ready_time_serafm_1_scaner()
  return not_ready_time("time_start_serafm_1_scaner",120*60)==true
end
function clear_ready_time_serafm_1_scaner()
  clear_ready_time("time_start_serafm_1_scaner")
end
function actor_punch(actor,npc)
  if db.actor:position():distance_to_sqr(npc:position()) > 4 then
  return
  end
  dialogs.break_dialog(npc,actor, 0)
  --set_sleep_relocate(patrol("mil_actor_path"):point(0), patrol("mil_actor_path"):point(1), 60)
  local active_item = db.actor:active_item()
  if active_item and active_item:section()~= "bolt" and active_item:section()~= "wpn_knife" then
    db.actor:drop_item(active_item)
  end
  set_inactivate_input_time(30)
  local snd_obj = xr_sound.get_safe_sound_object([[affects\\hit_fist]])
  snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)

  level.add_cam_effector("camera_effects\\fusker.anm", 999, false, "")
  level.add_pp_effector("amk_shoot.ppe", 2011, false)
end

function podsumok_have()
  return sak.have_items_count("podsumok",1)
end

function podsumok_not_have()
  return not podsumok_have()
end
function have_razgruzka()
  return sak.have_items_count("razgruzka",1)~= false
end
function not_have_razgruzka()
  return not have_razgruzka()
end
function sidor_capsule_time()
  start_time("time_start_sidor_capsule")
end
function is_ready_time_sidor_capsule()
  return is_ready_time("time_start_sidor_capsule",65)==true
end
function not_ready_time_sidor_capsule()
  return not_ready_time("time_start_sidor_capsule",65)==true
end
function clear_ready_time_sidor_capsule()
  clear_ready_time("time_start_sidor_capsule")
end
function sidor_opt_food_time()
  start_time("time_start_sidor_opt_food")
end
function is_ready_time_sidor_opt_food()
  return is_ready_time("time_start_sidor_opt_food",1400)==true
end
function not_ready_time_sidor_opt_food()
  return not_ready_time("time_start_sidor_opt_food",1400)==true
end
function clear_ready_time_sidor_opt_food()
  clear_ready_time("time_start_sidor_opt_food")
end
function stalker_disel_time()
  start_time("time_start_stalker_disel")
end
function is_ready_time_stalker_disel()
  return is_ready_time("time_start_stalker_disel",1260)==true
end
function not_ready_time_stalker_disel()
  return not_ready_time("time_start_stalker_disel",1260)==true
end
function clear_ready_time_stalker_disel()
  clear_ready_time("time_start_stalker_disel")
end
function barman_capsule_time()
  start_time("time_start_barman_capsule")
end
function is_ready_time_barman_capsule()
  return is_ready_time("time_start_barman_capsule",50)==true
end
function not_ready_time_barman_capsule()
  return not_ready_time("time_start_barman_capsule",50)==true
end
function clear_ready_time_barman_capsule()
  clear_ready_time("time_start_barman_capsule")
end
function sakharov_capsule_time()
  start_time("time_start_sakharov_capsule")
end
function is_ready_time_sakharov_capsule()
  return is_ready_time("time_start_sakharov_capsule",15)==true
end
function not_ready_time_sakharov_capsule()
  return not_ready_time("time_start_sakharov_capsule",15)==true
end
function clear_ready_time_sakharov_capsule()
  clear_ready_time("time_start_sakharov_capsule")
end
function shersh()
  db.actor:give_info_portion("shersh")
  start_time("time_start_shersh")
end
function is_ready_time_shersh()
  return is_ready_time("time_start_shersh",60*12)==true
end
function not_ready_time_shersh()
  return not_ready_time("time_start_shersh",60*12)==true
end
function clear_ready_time_shersh()
  clear_ready_time("time_start_shersh")
end
function add_marsh_treasure()
  local obj1=amk.spawn_item("marsh_inventory_box",vector():set(486.28311157227,3.3924994468689,416.65158081055),3564,469516)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","marsh_treasure")
  if obj1 then
     fill_marsh_treasure1(obj1.id)
  end
  start_time("time_start_provodnik")
end
function add_lost_treasure()
  local obj1=amk.spawn_item("rukzak_inventory_box",vector():set(19.7,9.73,29.95),3330,19297)
  if obj1 then
     fill_lost_treasure1(obj1.id)
  end
end
function is_ready_time_provodnik()
  return is_ready_time("time_start_provodnik",60*6)==true
end
function not_ready_time_provodnik()
  return not_ready_time("time_start_provodnik",60*6)==true
end
function clear_ready_time_provodnik()
  clear_ready_time("time_start_provodnik")
end
function fill_hos_treasure()
  local obj1 = g_sim:story_object(story_ids.hos_treasure_1)
  local rand = lua_random(10,20)
  for a=1,rand do
  g_sim:create("mixture",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  g_sim:create("im_chain",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end

function fill_marsh_treasure1(obj)
  local obj1=g_sim:object(tonumber(obj))
  g_sim:create("wpn_m16a4",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("cs_light_outfit", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  --g_sim:create("cs_heavy_outfit", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_5.56x45_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_5.56x45_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("amk_zapiska_sak",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
function fill_lost_treasure1(obj)
  local obj1=g_sim:object(tonumber(obj))  
  for a=1,1 do
  g_sim:create("af_medus_new",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("wpn_saiga12c_m2",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
function add_nagrad_pahon()
  local nagrad_pahon={
  "conserva",
  "medkit_scientic",
  "antirad",
  "bread"  
  }
  local item = ""
  local count = lua_random(3,5)
  for i=1,count do
  item = nagrad_pahon[lua_random(table.getn(nagrad_pahon))]
    sak.create_items(db.actor,item,1)
  end
end
function add_bridge_leader_art()
  sak.create_items(db.actor, "af_dummy_dummy_new",1)
end
function neumeha_container_spot()
  local ct = lua_random(1,4)
  local a=(nlc_vars.kontainer or 0)
  if a==0 then return end
  local obj = g_sim:object(a)
  if obj then
    level.map_add_object_spot(obj.id, "crlc_big_treasure"..ct, "neumeha_container_spot")
  end
end
function off_kontainer()
  local a=(nlc_vars.kontainer or 0)
  if a==0 then return end
  local obj = g_sim:object(a)
  if obj then
  g_sim:release(obj, true)
  end
  nlc_vars.kontainer = nil
end
function add_red_sos_spot()
level_tasks.add_location(9801, "crlc_big", "red_sos_spot")
end
function del_red_sos_spot()
  local obj = g_sim:story_object(story_ids.red_smart_sos_die)
if obj then
level.map_remove_object_spot(obj.id, "crlc_big")
end
end
function add_val_escort_PDA_spot()
level_tasks.add_location(9802, "crlc_big", "val_escort_PDA_spot")
end
function add_ryaboi_PDA_spot()
level_tasks.add_location(9564, "crlc_big", "ryaboi_PDA_spot")
end
function have_amk_kanistra()
  return sak.have_items_count("amk_kanistra",1)~=false
end
function take_kanistra()
  sak.create_items(db.actor, "kanistra",1)
end
function add_kanistra()
  sak.create_items(db.actor, "amk_kanistra",1)
end
function tm_find_item_1()
  return task_manager.Clua_randomTask:active_id_task("tm_find_item_1")~=false
end
function is_time_to_game()
  local minut=level.get_time_minutes()
  local hour=level.get_time_hours()
  local t_g=minut+hour
  if t_g >= 26 and t_g < 49 then
  return true
  else
  return false
  end
end
function is_no_time_to_game()
  return not is_time_to_game()
end
function is_day()
  if level.get_time_hours() >= 6 and level.get_time_hours() < 21 then
  return true
  else
  return false
  end
end
function no_day()
  return not is_day()
end
function is_holiday_prosha()
  local holidays=level.get_time_days()
  local shift=5
  for  i=1,7 do
    if holidays==(shift*i) then return true end
  end
  return false
end
function no_holiday_prosha()
  return not is_holiday_prosha()
end
function is_holiday_sidor()
  local holidays=level.get_time_days()
  local shift=7
  for  i=1,5 do
    if (holidays>=(shift*i-1) and holidays <(shift*i+1)) then return true end
  end
  return false
end
function no_holiday_sidor()
  return not is_holiday_sidor()
end
function is_holiday_kuznezov()
  local shift=3
  local holidays=level.get_time_days()
  for i=1,10 do
  if (holidays >= shift*(i*2-1) and holidays < shift*(i*2)) then return true end
  end
  return false
end
function no_holiday_kuznezov()
  return not is_holiday_kuznezov()
end
function is_holiday_petrenko()
  local shift=2
  local holidays=level.get_time_days()
  for i=1,10 do
    if (holidays >= shift*(i*2-1) and holidays < shift*(i*2)) then return true end
  end
  return false
end
function pesh_botan_start_time()
  start_time("time_start_pesh_botan")
end
function is_ready_time_pesh_botan()
  return is_ready_time("time_start_pesh_botan",3000)==true
end
function not_ready_time_pesh_botan()
  return not_ready_time("time_start_pesh_botan",3000)==true
end
function clear_ready_time_pesh_botan()
  clear_ready_time("time_start_pesh_botan")
end
function stepanych_1plash_start_time()
  start_time("time_start_stepanych_1plash")
end
function is_ready_time_stepanych_1plash()
  return is_ready_time("time_start_stepanych_1plash",1430)==true
end
function not_ready_time_stepanych_1plash()
  return not_ready_time("time_start_stepanych_1plash",1430)==true
end
function clear_ready_time_stepanych_1plash()
  clear_ready_time("time_start_stepanych_1plash")
end
function stepanych_2plash_start_time()
  start_time("time_start_stepanych_2plash")
end
function is_ready_time_stepanych_2plash()
  return is_ready_time("time_start_stepanych_2plash",2800)==true
end
function not_ready_time_stepanych_2plash()
  return not_ready_time("time_start_stepanych_2plash",2800)==true
end
function clear_ready_time_stepanych_2plash()
  clear_ready_time("time_start_stepanych_2plash")
end
function sidor_dinamit_find_start_time()
  start_time("time_start_sidor_dinamit_find")
end
function is_ready_time_sidor_dinamit_find()
  return is_ready_time("time_start_sidor_dinamit_find",1500)==true
end
function not_ready_time_sidor_dinamit_find()
  return not_ready_time("time_start_sidor_dinamit_find",1500)==true
end
function clear_ready_time_sidor_dinamit_find()
  clear_ready_time("time_start_sidor_dinamit_find")
end
function docent_start_time()
  start_time("time_start_docent")
end
function is_ready_time_docent()
  return is_ready_time("time_start_docent",60)==true
end
function not_ready_time_docent()
  return not_ready_time("time_start_docent",60)==true
end
function clear_ready_time_docent()
  clear_ready_time("time_start_docent")
end
function docent_start_time2()
  start_time("time_start_docent2")
end
function is_ready_time_docent2()
  return is_ready_time("time_start_docent2",120)==true
end
function not_ready_time_docent2()
  return not_ready_time("time_start_docent2",120)==true
end
function clear_ready_time_docent2()
  clear_ready_time("time_start_docent2")
end
function docent_uncoder_start_time()
  start_time("time_start_docent_uncoder")
end
function is_ready_time_docent_uncoder()
  return is_ready_time("time_start_docent_uncoder",23*61)==true
end
function not_ready_time_docent_uncoder()
  return not_ready_time("time_start_docent_uncoder",23*61)==true  --23*61
end

function clear_ready_time_docent_uncoder()
  clear_ready_time("time_start_docent_uncoder")
end
function docent_pda_start_time()
  start_time("time_start_docent_pda")
end
function is_ready_time_docent_pda()
  return is_ready_time("time_start_docent_pda",1*61)==true
end
function not_ready_time_docent_pda()
  return not_ready_time("time_start_docent_pda",1*61)==true  --1*61
end

function clear_ready_time_docent_pda()
  clear_ready_time("time_start_docent_pda")
end
function time_yan_psy()
    local rand = (amk_vars.r_task_reward or 1)-1
  nlc_vars.psy_antenna_good_time = rand
  if rand==0 then
  db.actor:give_talk_message("в полночь...","ui\\ui_iconsTotal",Frect():set(0,0,0,0), "simple_answer_item")
  elseif rand==1 then
  db.actor:give_talk_message("в час ночи...","ui\\ui_iconsTotal",Frect():set(0,0,0,0), "simple_answer_item")
  else
  db.actor:give_talk_message("в "..rand.." часа ночи...","ui\\ui_iconsTotal",Frect():set(0,0,0,0), "simple_answer_item")
  end
end
function del_time_yan_psy()
  nlc_vars.psy_antenna_good_time = nil
end
function start_time_psy()
  start_time("time_start_psy")
end
function is_ready_time_psy()
  return is_ready_time("time_start_psy",120)==true
end
function not_ready_time_psy()
  return not_ready_time("time_start_psy",120)==true
end
function clear_ready_time_psy()
  clear_ready_time("time_start_psy")
end
function start_time_matveev()
  start_time("time_start_matveev")
end
function is_ready_time_matveev()
  return is_ready_time("time_start_matveev",7*24*60)==true
end
function not_ready_time_matveev()
  return not_ready_time("time_start_matveev",7*24*60)==true
end
function clear_ready_time_matveev()
  clear_ready_time("time_start_matveev")
end
function start_time_shurup()
  start_time("time_start_shurup")
end
function is_ready_time_shurup()
  return is_ready_time("time_start_shurup",3*60)==true
end
function not_ready_time_shurup()
  return not_ready_time("time_start_shurup",3*60)==true
end
function clear_ready_time_shurup()
  clear_ready_time("time_start_shurup")
end
function start_time_yan_psy()
  start_time("time_start_yan_psy")
end
function is_ready_time_yan_psy()
  return is_ready_time("time_start_yan_psy",120)==true
end
function not_ready_time_yan_psy()
  return not_ready_time("time_start_yan_psy",120)==true
end
function clear_ready_time_yan_psy()
  clear_ready_time("time_start_yan_psy")
end
function start_time_rad_psy()
  start_time("time_start_rad_psy")
end
function is_ready_time_rad_psy()
  return is_ready_time("time_start_rad_psy",240)==true
end
function not_ready_time_rad_psy()
  return not_ready_time("time_start_rad_psy",240)==true
end
function clear_ready_time_rad_psy()
  clear_ready_time("time_start_rad_psy")
end
function start_time_yan_find_vasilyev()
  start_time("time_yan_find_vasilyev")
end
function is_ready_time_yan_find_vasilyev()
  return is_ready_time("time_yan_find_vasilyev",360)==true
end
function not_ready_time_yan_find_vasilyev()
  return not_ready_time("time_yan_find_vasilyev",360)==true
end
function clear_ready_time_yan_find_vasilyev()
  clear_ready_time("time_yan_find_vasilyev")
end
function start_time_docent_rad_psy()
  start_time("time_docent_start_rad_psy")
end
function is_ready_time_docent_rad_psy()
  return is_ready_time("time_docent_start_rad_psy",180)==true
end
function not_ready_time_docent_rad_psy()
  return not_ready_time("time_docent_start_rad_psy",180)==true
end
function clear_ready_time_docent_rad_psy()
  clear_ready_time("time_docent_start_rad_psy")
end
function start_time_marsh_rad_psy()
  start_time("time_marsh_start_rad_psy")
end
function is_ready_time_marsh_rad_psy()
  return is_ready_time("time_marsh_start_rad_psy",18)==true
end
function not_ready_time_marsh_rad_psy()
  return not_ready_time("time_marsh_start_rad_psy",18)==true
end
function clear_ready_time_marsh_rad_psy()
  clear_ready_time("time_marsh_start_rad_psy")
end
function start_time_yan_comp_repair()
  start_time("time_start_yan_comp_repair")
end
function is_ready_time_yan_comp_repair()
  return is_ready_time("time_start_yan_comp_repair",4660)==true
end
function not_ready_time_yan_comp_repair()
  return not_ready_time("time_start_yan_comp_repair",4660)==true
end
--документы на радаре спавним отдельно
function clear_ready_time_yan_comp_repair()
  clear_ready_time("time_start_yan_comp_repair")
  --amk.spawn_item("sak_document",sak.v3f(350,-51.74,-24.45),2031,93051)
  amk.spawn_item("rad_pda",sak.v3f(530.7,-49.41,-241.61),2061,180657)
end
--дл€ спавна документов в рюкзак на радаре, вызываем из диалога с —ахаровым
function sak_document_radar()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(349.999115,-51.753242,-24,449068),2031,93051)
  if obj1 then
  fill_sak_document_treasure(obj1.id)
  end
end
--наполн€ем рюкзак документы и патрошки с медициной
function fill_sak_document_treasure(obj)
  local obj1=g_sim:object(tonumber(obj))
  g_sim:create("medkit_scientic",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("medkit_scientic",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
  g_sim:create("grenade_f1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("grenade_f1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
  g_sim:create("ammo_7.62x54_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_7.62x54_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
  g_sim:create("sak_document3",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
function time_rad_psy()
    local rand = (amk_vars.r_task_reward or 1)+16
  nlc_vars.psy_antenna_good_time = rand
  db.actor:give_talk_message("¬ечером, ближе к ночи - около "..rand.." часов...","ui\\ui_iconsTotal",Frect():set(0,0,0,0), "simple_answer_item")
end
function start_work()
  start_time("time_start")
end
function is_ready()
  return is_ready_time("time_start", 1080)==true
end
function not_ready()
  return not_ready_time("time_start", 1080)==true
end

function petruha_talk()
  local obj=g_sim:story_object(story_ids.esc_novice_attacker1)
  if (has_alife_info("escape_factory_assault_say_hello") or has_alife_info("esc_kill_bandits_quest_kill") or has_alife_info("esc_petruha_great")) then
  return true
  else return false
  end
end

function have_agr_shema()
  return sak.have_items_count("agr_shema",1)
end

function have_x16_documents()
  return sak.have_items_count("lab_x16_documents",1)
end
function not_have_x16_documents()
  if ((not have_x16_flash()) and (not have_x16_documents())) then
    return true
  end
  return false
end
function add_redcatcher_albom_priz()
  local item = ""
  local count = lua_random(2,5)
  for i=1,count do
  local count2 = lua_random(1,3)
  item = nagrad.level_2[lua_random(table.getn(nagrad.level_2))]
    sak.create_items(db.actor,item,count2)
  end
end
function is_gun(npc, item)
  local section = item:section()
  if (strpos(section,"wpn_vintorez",1,true))
  or(strpos(section,"wpn_val",1,true))
  or(strpos(section,"wpn_groza",1,true))
  or(strpos(section,"wpn_svd",1,true))
  or(strpos(section,"wpn_sig550",1,true))
  or(strpos(section,"wpn_abakan",1,true))
  or(strpos(section,"wpn_ak74",1,true))
  or(strpos(section,"wpn_l85",1,true))
  or(strpos(section,"wpn_lr300",1,true))
  or(strpos(section,"wpn_ak74u",1,true))
  or(strpos(section,"wpn_mp5",1,true))  then
    db.actor.gun = section
  end
end
local is_gun_actor={
  ["wpn_vintorez"]=true,
  ["wpn_vintorez_m1"]=true,
  ["wpn_vintorez_m5"]=true,
  ["wpn_val"]=true,
  ["wpn_val_m1"]=true,
  ["wpn_val_m5"]=true,
  ["wpn_groza"]=true,
  ["wpn_groza_m1"]=true,
  ["wpn_groza_m5"]=true,
  ["wpn_svd"]=true,
  ["wpn_svd_m1"]=true,
  ["wpn_sig550"]=true,
  ["wpn_sig_m1"]=true,
  ["wpn_sig_m2"]=true,
  ["wpn_sig_m5"]=true,
  ["wpn_abakan"]=true,
  ["wpn_abakan_m1"]=true,
  ["wpn_abakan_m2"]=true,
  ["wpn_abakan_m5"]=true,
  ["wpn_lr300"]=true,
  ["wpn_lr300_m1"]=true,
  ["wpn_lr300_m5"]=true,
  ["wpn_ak74"]=true,
  ["wpn_ak74_m1"]=true,
  ["wpn_ak74_m5"]=true,
  ["wpn_ak74n"]=true,
  ["wpn_ak74n_1p78"]=true,
  ["wpn_ak74pn"]=true,
  ["wpn_ak74pn_1p78"]=true,
  ["wpn_ak74pu"]=true,
  ["wpn_ak74pbn"]=true,
  ["wpn_ak74pbn_1p78"]=true,
  ["wpn_ak74pbu"]=true,
  ["wpn_aks74"]=true,
  ["wpn_aks74n"]=true,
  ["wpn_aks74n_1p78"]=true,
  ["wpn_aks74pn"]=true,
  ["wpn_aks74pn_1p78"]=true,
  ["wpn_aks74pu"]=true,
  ["wpn_aks74pbn"]=true,
  ["wpn_aks74pbn_1p78"]=true,
  ["wpn_aks74pbu"]=true,
  ["wpn_ak47"]=true,
  ["wpn_ak47_m6"]=true,
  ["wpn_ak47_m5"]=true,
  ["wpn_akm"]=true,
  ["wpn_akm_pl"]=true,
  ["wpn_ak74u"]=true,
  ["wpn_ak74u_m1"]=true,
  ["wpn_ak74u_m4"]=true,
  ["wpn_mp5"]=true,
  ["wpn_mp5_m1"]=true,
  ["wpn_mp5_m2"]=true,
  ["wpn_mp5_m3"]=true,
  ["wpn_mp5_m4"]=true,
  ["wpn_mp5_m5"]=true,
  ["wpn_l85"]=true,
  ["wpn_l85_m1"]=true,
  ["wpn_l85_m2"]=true,
  ["wpn_l85_m5"]=true,
  ["wpn_vintorez_old"]=true,
  ["wpn_val_old"]=true,
  ["wpn_groza_old"]=true,
  ["wpn_svd_old"]=true,
  ["wpn_sig550_old"]=true,
  ["wpn_abakan_old"]=true,
  ["wpn_lr300_old"]=true,
  ["wpn_ak74_old"]=true,
  ["wpn_ak74u_old"]=true,
  ["wpn_akm_old"]=true,
  ["wpn_mp5_old"]=true,
  ["wpn_l85_old"]=true
}
local is_ak_actor={
  ["wpn_ak47"]=true,
  ["wpn_ak47_old"]=true,
  ["wpn_saiga12c_m2"]=true,
  ["wpn_ak104"]=true,
  ["wpn_akm"]=true,
  ["wpn_ak74_m1"]=true,
  ["wpn_ak74_m2"]=true, 
  ["wpn_aks47"]=true
}
function transfer_any_gun_from_actor(first_speaker, second_speaker)
  local npc = who_is_npc(first_speaker, second_speaker)
  for i,k in pairs(sak_inventory.rucksack) do
    if is_gun_actor[i] then
      local obj=client_obj(k[1])
	  if obj then
        local owner = obj:parent()
        if owner then
           owner:transfer_item(obj, npc)
		  --[[local ltx = system_ini()
		  local ammo_tip  = ltx:r_string(i,"ammo_class")
		  local pos  = strpos(ammo_tip,",",1,true)
		  if pos then
		  local ammo = string.sub(ammo_tip,1,pos - 1)
			for i=1,5 do
			amk.spawn_item_in_inv(ammo,npc)
			end
		  end--]]
		  sak.relocate_item(db.actor, "out", i, 1)
		  break
		end
	  end
	end
  end
  sak_inventory.need_update_inventory()
end
function have_actor_any_gun()
  for i,k in pairs(sak_inventory.rucksack) do
    if is_gun_actor[i] then
      return true
    end
  end
end
function have_actor_any_ak()
  for i,k in pairs(sak_inventory.rucksack) do
    if is_ak_actor[i] and #k > 0 then
      return true
    end
  end
end

function transfer_any_ak_from_actor(first_speaker, second_speaker)
  local npc = who_is_npc(first_speaker, second_speaker)
  for i,k in pairs(sak_inventory.rucksack) do
    if is_ak_actor[i] and #k > 0 then
      local obj=client_obj(k[1])
      if obj then
        local owner = obj:parent()
        if owner then
           owner:transfer_item(obj, npc)
        --[[local ltx = system_ini()
        local ammo_tip  = ltx:r_string(i,"ammo_class")
        local pos  = strpos(ammo_tip,",",1,true)
			if pos then
			local ammo = string.sub(ammo_tip,1,pos - 1)
			  for i=1,2 do
			  amk.spawn_item_in_inv(ammo,npc)
			  end
			end--]]
		sak.relocate_item(db.actor, "out", i, 1)
        break
		end
      end
	end
  end
  sak_inventory.need_update_inventory()
end
function is_pistol(npc, item)
  local section = item:section()
  if (strpos(section,"wpn_beretta",1,true))
  or(strpos(section,"wpn_colt1911",1,true))
  or(strpos(section,"wpn_desert_eagle",1,true))
  or(strpos(section,"wpn_fort",1,true))
  or(strpos(section,"wpn_hpsa",1,true))
  or(strpos(section,"wpn_pb",1,true))
  or(strpos(section,"wpn_pm",1,true))
  or(strpos(section,"wpn_usp",1,true))
  or(strpos(section,"wpn_walther",1,true)) then
    db.actor.pistol = section
  end
end

function have_actor_any_pistol(first_speaker, second_speaker)
  local npc = who_is_npc(first_speaker, second_speaker)
    db.actor:iterate_inventory(is_pistol, npc)
  if (db.actor.pistol~=nil) then
    return true
  else
    return false
  end
end
function not_have_actor_any_pistol(first_speaker, second_speaker)
  local npc = who_is_npc(first_speaker, second_speaker)
  db.actor:iterate_inventory(is_pistol, npc)
  if (db.actor.pistol~=nil) then
    return false
  else
    return true
  end
end
function transfer_any_pistol_from_actor(first_speaker, second_speaker)
  local npc = who_is_npc(first_speaker, second_speaker)
    db.actor:iterate_inventory(is_pistol, npc)
  if (db.actor.pistol~=nil) then
      db.actor:transfer_item(db.actor:object(db.actor.pistol), npc)
    news_manager.relocate_item(db.actor, "out", db.actor.pistol)
    db.actor.pistol = nil
  end
end
function have_500_ammo_buck()
  return vergas_lib.search_items("ammo_12x70_buck",500,1)~= false
end
function give_500_ammo_buck()
  vergas_lib.search_items("ammo_12x70_buck",500,2)
end
function have_300_ammo_buck()
  return vergas_lib.search_items("ammo_12x70_buck",300,1)~= false
end
function give_300_ammo_buck()
  vergas_lib.search_items("ammo_12x70_buck",300,2)
end
function have_250_ammo_zhekan()
  return vergas_lib.search_items("ammo_12x76_zhekan",250,1)~= false
end
function give_250_ammo_zhekan()
  vergas_lib.search_items("ammo_12x76_zhekan",250,2)
end
function have_200_ammo_zhekan()
  return vergas_lib.search_items("ammo_12x76_zhekan",200,1)~= false
end
function give_200_ammo_zhekan()
  vergas_lib.search_items("ammo_12x76_zhekan",200,2)
end
function have_200_ammo_dart()
  return vergas_lib.search_items("ammo_12x76_dart",200,1)~= false
end
function give_200_ammo_dart()
  vergas_lib.search_items("ammo_12x76_dart",200,2)
end
function have_50_ammo_dart()
  return vergas_lib.search_items("ammo_12x76_dart",50,1)~= false
end
function give_50_ammo_dart()
  vergas_lib.search_items("ammo_12x76_dart",50,2)
end
function have_100_ammo_dart()
  return vergas_lib.search_items("ammo_12x76_dart",100,1)~= false
end
function give_100_ammo_dart()
  vergas_lib.search_items("ammo_12x76_dart",100,2)
end
function have_20_ammo_545x39()
  return vergas_lib.search_items("ammo_5.45x39",20,1)
end
function give_20_ammo_545x39()
  vergas_lib.search_items("ammo_5.45x39",20,2)
end
function have_20_ammo_762x39()
  return vergas_lib.search_items("ammo_7.62x39",20,1)~= false
end
function give_20_ammo_762x39()
  vergas_lib.search_items("ammo_7.62x39",20,2)
end
function have_100_ammo_762x39()
  return vergas_lib.search_items("ammo_7.62x39",100,1)~= false
end
function give_100_ammo_762x39()
  vergas_lib.search_items("ammo_7.62x39",100,2)
end
function have_100_ammo_556x39()
  return vergas_lib.search_items("ammo_5.56x45",100,1)~= false
end
function give_100_ammo_556x39()
  vergas_lib.search_items("ammo_5.56x45",100,2)
end
function have_50_ammo_556x39()
  return vergas_lib.search_items("ammo_5.56x45",50,1)~= false
end
function give_50_ammo_556x39()
  vergas_lib.search_items("ammo_5.56x45",50,2)
end
function have_50_ammo_762x39()
  return vergas_lib.search_items("ammo_7.62x39",50,1)~= false
end
function give_50_ammo_762x39()
  vergas_lib.search_items("ammo_7.62x39",50,2)
end
function have_100_ammo_9x18()
  return vergas_lib.search_items("ammo_9x18",100,1)~= false
end
function give_100_ammo_9x18()
  vergas_lib.search_items("ammo_9x18",100,2)
end
function have_40_ammo_12x70()
  return vergas_lib.search_items("ammo_12x7",40,1)~= false
end
function give_40_ammo_12x70()
  vergas_lib.search_items("ammo_12x7",40,2)
end
function have_20_ammo_12x70()
  return vergas_lib.search_items("ammo_12x7",20,1)~= false
end
function give_20_ammo_12x70()
  vergas_lib.search_items("ammo_12x7",20,2)
end
function have_2_mines()
  return false
end
function give_2_mines()
  --vergas_lib.search_items("ammo_5.56x45_",100,2)
end

function have_10_ammo_545x39_fake()
  return true
end
function out_wpn_esc_actor()
  out_wpn_actor(9140)
end
function add_wpn_esc_actor()
  add_wpn_actor(9140)
end
function out_wpn_from_actor()
  out_wpn_actor(5862)
end
function add_wpn_in_actor()
  add_wpn_actor(5862)
end
function out_wpn_actor(sid)
  local in_object = level_object_by_sid(sid)
  local out_object = db.actor
  for i,k in pairs(sak_inventory.slots) do
    if (strpos(i, "wpn_",1,true) and (i~="wpn_binoc") and (i~="bolt")) then
      if (i=="wpn_knife" and has_alife_info("mil_freedom_good")) then
      else
      local item = client_obj(k[1])
      out_object:transfer_item(item, in_object)
      sak.relocate_item(db.actor, "out", i, 1)
      end
    end
  end
  for i,k in pairs(sak_inventory.rucksack) do
    if strpos(i, "wpn_",1,true) then
      for j = 1, #k do
      local item = client_obj(k[j])
      out_object:transfer_item(item, in_object)
      end
      sak.relocate_item(db.actor, "out", i, #k)
	elseif strpos(i, "rucksack",1,true) then
		for a = 1,#k do
			local o_id=k[a]
			local ids,cnt = registry.inv_objects(o_id, false)
			for n = 1,cnt do
				local id = ids[n]
				local item = client_obj(id)
				if item then
				local sect=item:section()
					if strpos(sect, "wpn_",1,true) then
						out_object:transfer_item(item, in_object)
						sak.relocate_item(db.actor, "out", sect, 1)
					end
				end
			end
		end
    end
  end
  --registry.inv_objects(in_object:id(), true)
  if in_object.online then
    g_sim:set_switch_online(in_object.id, false)
    g_sim:set_switch_offline(in_object.id, true)
    amk.convert_npc[in_object.id]=1
  end
end
function add_wpn_actor(sid)
  local out_object = level_object_by_sid(sid)
  local in_object = db.actor
  local ids,cnt = registry.inv_objects(out_object:id(), true)
    for n = 1,cnt do
       local id = ids[n]
       local sobj = client_obj(id)
       if sobj then
         out_object:transfer_item(sobj, in_object)
     sak.relocate_item(db.actor, "in", sobj:section(), 1)
       end
    end
end
function have_10_ammo_545x39()
  return vergas_lib.search_items("ammo_5.45x39",300,1) or vergas_lib.search_items("ammo_ak",300,1)
end
function have_10_ammo_545x39_ok()
  return vergas_lib.search_items("ammo_5.45x39",300,1)
end
function have_50_ammo_545x39()
  return vergas_lib.search_items("ammo_5.45x39",50,1)
end
function give_50_ammo_545x39()
  vergas_lib.search_items("ammo_5.45x39",50,2)
end
function have_10_ammo_545x39_fake()
  return vergas_lib.search_items("ammo_ak",300,1)
end
function give_10_ammo_545x39()
  vergas_lib.search_items("ammo_5.45x39",300,2)
end
function have_1_ammo_9x39()
  return vergas_lib.search_items("ammo_9x39",30,1)
end
function give_1_ammo_9x39()
  vergas_lib.search_items("ammo_9x39",30,2)
end
function have_2_ammo_9x39()
  return vergas_lib.search_items("ammo_9x39",60,1)
end
function give_2_ammo_9x39(first_speaker, second_speaker)
  vergas_lib.search_items("ammo_9x39",60,2)
end
function have_3_ammo_9x39(first_speaker, second_speaker)
  return vergas_lib.search_items("ammo_9x39",90,1)
end
function give_3_ammo_9x39(first_speaker, second_speaker)
  vergas_lib.search_items("ammo_9x39",90,2)
end
function give_5_ammo_9x39(first_speaker, second_speaker)
  vergas_lib.search_items("ammo_9x39",150,2)
end
function have_5_ammo_9x39(first_speaker, second_speaker)
  return vergas_lib.search_items("ammo_9x39",150,1)
end

function is_food(npc, item)
  local section = item:section()
  if (section=="bread")
  or(section=="kolbasa")
  or(section=="vodka")
  or(section=="energy_drink")
  or(section=="conserva") then
    db.actor.food = section
  end
end
function is_container(npc, item)
  local section = item:section()
  if (section=="arc_art_box_1basic")
  or(section=="arc_art_box_basic")
  or(section=="arc_art_box_8basic") then
    db.actor.container = section
  end
end
function is_aart(npc, item)
  local section = item:section()
  if strpos(section,"af_medusa",1,true)
  or strpos(section,"af_vyvert",1,true)
  or strpos(section,"af_blood",1,true)
  or strpos(section,"af_electra_sparkler",1,true)
  or strpos(section,"af_drops",1,true)
  or strpos(section,"af_ameba_slime",1,true)
  or strpos(section,"af_rusty_thorn",1,true) then
    db.actor.aart = section
  end
end
function is_bart(npc, item)
  local section = item:section()
  if strpos(section,"af_cristal_flower",1,true)
  or strpos(section,"af_gravi",1,true)
  or strpos(section,"af_mincer_meat",1,true)
  or strpos(section,"af_electra_flash",1,true)
  or strpos(section,"af_fireball",1,true)
  or strpos(section,"af_ameba_slug",1,true)
  or strpos(section,"af_rusty_kristall",1,true) then
    db.actor.bart = section
  end
end
function is_cart(npc, item)
  local section = item:section()
  if strpos(section,"af_night_star",1,true)
  or strpos(section,"af_gold_fish",1,true)
  or strpos(section,"af_soul",1,true)
  or strpos(section,"af_electra_moonlight",1,true)
  or strpos(section,"af_cristall",1,true)
  or strpos(section,"af_ameba_mica",1,true)
  or strpos(section,"af_rusty_sea-urchin",1,true) then
    db.actor.cart = section
  end
end
function is_dart(npc, item)
  local section = item:section()
  if strpos(section,"af_dummy_spring",1,true)
  or strpos(section,"af_dummy_dummy",1,true)
  or strpos(section,"af_dummy_battery",1,true)
  or strpos(section,"af_dummy_pellicle",1,true)
  or strpos(section,"af_dummy_glassbeads",1,true)
  or strpos(section,"af_dummy_kolobok",1,true) then
    db.actor.dart = section
  end
end
function is_capsule(npc, item)
  local section = item:section()
  if strpos(section,"_capsule",1,true) then
  db.actor.capsule = section
  end
end
function have_any_aart()
  for i=1, table.getn(table_aart) do
    if sak.have_items_count(table_aart[i],1) then return true end
  end
  return false
end
function have_dram_aart()
  for i=1, table.getn(table_aart) do
    if sak.have_items_count(table_aart[i],1,true) then return true end
  end
  return false
end
function have_aart()
  for i=1, table.getn(table_aart) do
    if sak.have_items_count(table_aart[i],1) then return true end
  end
  return false
end
function transfer_any_aart()
  for i=1, table.getn(table_aart) do
    if sak.have_items_count(table_aart[i],1) then
       sak_inventory.release_actor_items(table_aart[i],1)
      return
    end
  end
  wprintf("~C0C #ERROR:~C07 no artefacts 1-st level removed")
  return false
end
function have_any_bart()
  for i=1, table.getn(table_bart) do
    if sak.have_items_count(table_bart[i],1) then return true end
  end
  return false
end
function have_dram_bart()
  for i=1, table.getn(table_bart) do
    if sak.have_items_count(table_bart[i],1,true) then return true end
  end
  return false
end
function have_bart()
  for i=1, table.getn(table_bart) do
    if sak.have_items_count(table_bart[i],1) then return true end
  end
  return false
end
function transfer_any_bart()
  for i=1, table.getn(table_bart) do
    if sak.have_items_count(table_bart[i],1) then
      sak_inventory.release_actor_items(table_bart[i],1)
      break
    end
  end
end
function gg_2_1_art_have()
  return (have_any_bart() and gg_2_aart_have())
end
function gg_1_3_art_have()
  return (have_any_bart() and gg_3_aart_have())
end
function have_any_cart()
  for i=1, table.getn(table_cart) do
    if sak.have_items_count(table_cart[i],1,false,true) then return true end
  end
  return false
end
function have_dram_cart()
  for i=1, table.getn(table_cart) do
    if sak.have_items_count(table_cart[i],1,true) then return true end
  end
  return false
end
function have_cart()
  for i=1, table.getn(table_cart) do
    if sak.have_items_count(table_cart[i],1,false,true) then return true end
  end
  return false
end
function transfer_any_cart()
  for i=1, table.getn(table_cart) do
    if sak.have_items_count(table_cart[i],1) then
      sak_inventory.release_actor_items(table_cart[i],1)
      break
    end
  end
end
function have_any_dart()
  for i=1, table.getn(table_dart) do
    if sak.have_items_count(table_dart[i],1,false,true) then return true end
  end
  return false
end
function have_dram_dart()
  for i=1, table.getn(table_dart) do
    if sak.have_items_count(table_dart[i],1,true) then return true end
  end
  return false
end
function have_dart()
  for i=1, table.getn(table_dart) do
    if sak.have_items_count(table_dart[i],1,false,true) then return true end
  end
  return false
end
function transfer_any_dart()
  for i=1, table.getn(table_dart) do
    if sak.have_items_count(table_dart[i],1) then
      sak_inventory.release_actor_items(table_dart[i],1)
      break
    end
  end
end
function dart_full_have()
  for i=1, #table_dart do
    for kk,k in pairs(sak_inventory.rucksack) do
      if strpos(kk, table_dart[i],1,true) and not strpos(kk, "_capsule",1,true) then
        local kol=#k
        for m=1,kol do
          local obj=g_sim:object(k[m])
          if obj then
            local pk = get_netpk(obj,1)
            local data = pk:get()
            local cond=data.condition
            if cond>0.95 then return true end
          end
        end
      end
    end
  end
  return false
end
function transfer_dart_full()
  for i=1, #table_dart do
    for kk,k in pairs(sak_inventory.rucksack) do
      if strpos(kk, table_dart[i],1,true) and not strpos(kk, "_capsule",1,true) then
        local kol=#k
        for m=1,kol do
          local obj=g_sim:object(k[m])
          if obj then
            local pk = get_netpk(obj,1)
            local data = pk:get()
            local cond=data.condition
            if cond>0.95 then misc.release_obj(obj, 'script:3788')
            sak.relocate_item(db.actor, "out", table_dart[i], 1)
            end
          end
        end
      end
    end
  end
end
function treasure_any_capsule()
  local capsule=table_capsule[lua_random(1,#table_capsule)]
  return capsule
end
function any_cart_capsule()
  local capsule=table_capsule[lua_random(1,math.floor(#table_capsule/2))]
  return capsule
end
function have_any_capsule()
  for i=1, table.getn(table_capsule) do
    if sak.have_items_count(table_capsule[i],1) then return true end
  end
  return false
end
function have_dram_capsule()
  for i=1, table.getn(table_capsule) do
    if sak.have_items_count(table_capsule[i],1,true) then return true end
  end
  return false
end
function have_capsule()
  for i=1, table.getn(table_capsule) do
    if sak.have_items_count(table_capsule[i],1) then return true end
  end
  return false
end

function transfer_any_capsule()
  local section
  for i=1, table.getn(table_capsule) do
    if sak.have_items_count(table_capsule[i],1) then
      for ii,kk in pairs(sak_inventory.rucksack) do
        if strpos(ii, table_capsule[i],1,true) then
          section=tostring(ii)
        end
      end
      sak_inventory.release_actor_items(table_capsule[i],1)
      nlc_vars.capsule_ready = section
      break
    end
  end
end
function have_any_red_art()
  for i=1, table.getn(table_red_art) do
    if sak.have_items_count(table_red_art[i],1,false,true) then return true end
  end
  return false
end
function have_dram_red_art()
  for i=1, table.getn(table_red_art) do
    if sak.have_items_count(table_red_art[i],1,true) then return true end
  end
  return false
end
function have_red_art()
  for i=1, table.getn(table_red_art) do
    if sak.have_items_count(table_red_art[i],1,false,true) then return true end
  end
  return false
end
function transfer_any_red_art()
  for i=1, table.getn(table_red_art) do
    if sak.have_items_count(table_red_art[i],1) then
      sak_inventory.release_actor_items(table_red_art[i],1)
      break
    end
  end
end
function out_item_section_from_actor(first_speaker, second_speaker, section, amount)
  local npc = who_is_npc(first_speaker, second_speaker)
  local actor = who_is_actor(first_speaker, second_speaker)
  local i = 0
  if not amount then
    amount = 1
  end
  local function transfer_object_item(temp, item)
  local vItemSection=item:section()
    if (strpos(vItemSection,"^"..section) and i~=0) then
      amk.remove_item_from_inventory(item, actor)
      i = i - 1
    end
  end
  if amount=="all" then
    i = -1
    actor:iterate_inventory(transfer_object_item, nil)
    amount = (i+1)*(-1)
    i = 0
  elseif amount > 1 then
    i = amount
    actor:iterate_inventory(transfer_object_item, nil)
  elseif amount < 1 then
    --abort("Wrong parameters in function "relocate_item_section_from_actor"!")
  else
    amk.remove_item_from_inventory(actor:object(section), actor)
  end
  sak.relocate_item(db.actor, "out", section, amount - i)
  return (amount - i)
end
function relocate_item_section_from_actor(first_speaker, second_speaker, section, amount)
  local npc = who_is_npc(first_speaker, second_speaker)
  local actor = who_is_actor(first_speaker, second_speaker)
  local i = 0
  if not amount then
    amount = 1
  end
  local function transfer_object_item(temp, item)
    local vItemSection=item:section()
    if (strpos(vItemSection,section,1,true) and i~=0) then
      db.actor:transfer_item(item, npc)
      i = i - 1
    end
  end
  if amount=="all" then
    i = -1
    actor:iterate_inventory(transfer_object_item, nil)
    amount = (i+1)*(-1)
    i = 0
  elseif amount > 1 then
    i = amount
    actor:iterate_inventory(transfer_object_item, nil)
  elseif amount < 1 then
    --abort("Wrong parameters in function "relocate_item_section_from_actor"!")
  else
    actor:transfer_item(actor:object(section), npc)
  end
  sak.relocate_item(db.actor, "out", section, amount - i)
end
function who_is_npc(first_speaker, second_speaker)
  local npc = second_speaker
  if db.actor:id()==npc:id() then
    npc  = first_speaker
  end
  return npc
end
function who_is_actor(first_speaker, second_speaker)
  local npc = second_speaker
  if db.actor:id()~=npc:id() then
    npc  = first_speaker
  end
  return npc
end
function on_chimera_kill(obj,who)
  local id=obj:id()
  if math.fmod(id, 20)==0 then
  amk.spawn_item_in_inv("mutant_chimera_kogot",obj)
  end
  if math.fmod(id, 30)==0 then
  amk.spawn_item_in_inv("mutant_chimera_kogot",obj)
  end
  if math.fmod(id, 40)==0 then
  amk.spawn_item_in_inv("mutant_chimera_kogot",obj)
  end
end
function on_boar_kill(obj,who)
  local id=obj:id()
  if math.fmod(id, 10)==0 then
  misc.spawn_to("mutant_boar_leg", obj)
  end
  if math.fmod(id, 20)==0 then
  misc.spawn_to("mutant_boar_leg", obj)
  end
  if math.fmod(id, 25)==0 then
  misc.spawn_to("mutant_boar_leg", obj)
  end
end
function on_burer_kill(obj,who)
  if obj==nil or level.name()=="l08u_brainlab" or level.name()=="lost_village" then return end
  local obj_sect = obj:section()
  if obj_sect=="burer_hos" then
    amk.spawn_item_in_inv("mfake_af_dummy_fire",obj)
	--amk.spawn_item_in_inv("mfake_af_rusty_thorn_dyn3d",obj)
	return
  end
  local id=obj:id()
  if math.fmod(id, 5)==0 then
    local section=table_aart[lua_random(1,#table_aart)]
    local b=lua_random(2,4)
    if not strpos(section, "_new",1,true) and not strpos(section, "_dummy_",1,true) then
    section="mfake_"..section.."_dyn"..b.."d"
	elseif strpos(section, "af_medus_new", 1, true) then
	 section = "mfake_"..section
    end
	amk.spawn_item_in_inv(section,obj)
	return
  end
  if math.fmod(id, 6)==0 then
    amk.spawn_item_in_inv("mutant_burer_hand",obj)
  end
end
function on_flesh_strong_kill(obj,who)
  if obj==nil or not db.actor:has_info("dsc_greens_flesh_shkura") then return end
  local id=obj:id()
  if math.fmod(id, 2)==0 then
    return amk.spawn_item_in_inv("mutant_flesh_shkura",obj)
  end
end
function have_val_dram_1()
  return have_dram_capsule()~=false or have_dram_dart()~=false or have_dram_cart()~=false or have_dram_bart()~=false
end
function give_val_dram_1(first_speaker, second_speaker)
  for i=1, table.getn(table_capsule) do
    if sak.have_items_count(table_capsule[i],1,true) then
    out_item_section_from_actor(first_speaker, second_speaker, table_capsule[i], "all")
    end
  end
  for i=1, table.getn(table_dart) do
    if sak.have_items_count(table_dart[i],1,true) then
    out_item_section_from_actor(first_speaker, second_speaker, table_dart[i], "all")
    end
  end
  for i=1, table.getn(table_cart) do
    if sak.have_items_count(table_cart[i],1,true) then
    out_item_section_from_actor(first_speaker, second_speaker, table_cart[i], "all")
    end
  end
  for i=1, table.getn(table_bart) do
    if sak.have_items_count(table_bart[i],1,true) then
    out_item_section_from_actor(first_speaker, second_speaker, table_bart[i], "all")
    end
  end
  --out_item_from_dv()
end
function have_val_dram_2(first_speaker, second_speaker)
  return have_dram_capsule()==false and have_dram_dart()==false and have_dram_cart()==false and have_dram_bart()==false and have_dram_aart()~=false
end
function give_val_dram_2(first_speaker, second_speaker)
  local bablo=db.actor:money()
  for i=1, table.getn(table_aart) do
    if sak.have_items_count(table_aart[i],1,true) then
    out_item_section_from_actor(first_speaker, second_speaker, table_aart[i], "all")
    end
  end
  bablo=(bablo-math.floor(bablo/2))
  relocate_money(db.actor,bablo,1)
  --out_item_from_dv()
end
function have_val_dram_3(first_speaker, second_speaker)
  return have_dram_capsule()==false and have_dram_dart()==false and have_dram_cart()==false and have_dram_bart()==false and have_dram_aart()==false and (sak.have_items_count("arc_art_box_1basic",1)~=false or sak.have_items_count("arc_art_box_basic",1)~=false or sak.have_items_count("arc_art_box_8basic",1)~=false)
end
function give_val_dram_3(first_speaker, second_speaker)
  local bablo=db.actor:money()
  for i=1, table.getn(table_container) do
  local obj=db.actor:object(table_container[i])
    if obj then
    relocate_item_section_from_actor(first_speaker, second_speaker, table_container[i], "all")
    end
  end
  for i=1, table.getn(table_food) do
  local obj=db.actor:object(table_food[i])
    if obj then
    out_item_section_from_actor(first_speaker, second_speaker, table_food[i], "all")
    end
  end
  bablo=(bablo-math.floor(bablo/5))
  relocate_money(db.actor,bablo,1)
  --out_item_from_dv()
end
function have_val_dram_4(first_speaker, second_speaker)
  return have_dram_capsule()==false and have_dram_dart()==false and have_dram_cart()==false and have_dram_bart()==false and have_dram_aart()==false and sak.have_items_count("arc_art_box_1basic",1)==false and sak.have_items_count("arc_art_box_basic",1)==false and sak.have_items_count("arc_art_box_8basic",1)==false
end
function give_val_dram_4(first_speaker, second_speaker)
  local bablo=db.actor:money()
  for i=1, table.getn(table_food) do
  local obj=db.actor:object(table_food[i])
    if obj then
    out_item_section_from_actor(first_speaker, second_speaker, table_food[i], "all")
    end
  end
  bablo=(bablo-math.floor(bablo/8))
  relocate_money(db.actor,bablo,1)
  --out_item_from_dv()
end
  local dist_item_from_dv = 150
function out_item_from_dv()
  for a=1000,45000,1 do
  local obj = g_sim:object(a)
    if obj then
      local posobj = obj.position
      local actorpos = db.actor:position()
      local npc_name = obj:name()
      if posobj:distance_to(actorpos) < dist_item_from_dv then
        if (obj.parent_id and obj.parent_id~=0 and (obj.parent_id==BAD_OBJ_ID or g_sim:object(obj.parent_id):section_name()=="rucksack" or g_sim:object(obj.parent_id):section_name()=="inventory_box" or g_sim:object(obj.parent_id):section_name()=="m_inventory_box") or (IsStalker(g_sim:object(obj.parent_id)) and g_sim:object(obj.parent_id).alive and not g_sim:object(obj.parent_id):alive())) and (strpos(obj:section_name(),"af_",1,true) or strpos(obj:section_name(),"arc_art_box_",1,true) or strpos(obj:section_name(),"ammo_",1,true)) then
        g_sim:release(obj,true)
        end
      end
    end
  end
end
function add_stalker_letter()
  sak.create_items(db.actor, "stalker_letter",1)
end
function add_kruglov_letter()
  sak.create_items(db.actor, "kruglov_letter",1)
end
function have_kruglov_letter()
  return sak.have_items_count("kruglov_letter",1)~=false
end
function give_kruglov_letter()
  sak_inventory.release_actor_items("kruglov_letter",1)
end
function add_fmradio()
  sak.create_items(db.actor, "fmradio",1)
end
function have_fmradio()
  return sak.have_items_count("fmradio",1)~=false
end
function give_fmradio()
  sak_inventory.release_actor_items("fmradio",1)
end
function add_esc_mil_habar()
  local obj = g_sim:story_object(story_ids.esc_blokpost_box_01) or g_sim:story_object(story_ids.esc_inventory_box_0018)
  if not obj then return end
  for i=1,5 do
    g_sim:create("suhpay",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
    g_sim:create("medkit_army",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
    g_sim:create("grenade_rgd5",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  end
  for i=1,30 do
    g_sim:create("ammo_vog-25",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
    g_sim:create("ammo_5.45x39_fmj",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  end
  g_sim:create("wpn_abakan",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("wpn_addon_1p78",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("wpn_addon_grenade_launcher",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
end
function add_mil_nagrad_medkit()
  sak.create_items(db.actor, "medkit_army",5)
  sak.create_items(db.actor, "antirad",5)
end
function add_mil_nagrad_ammo()
  sak.create_items(db.actor, "ammo_5.45x39_ap",5)
  sak.create_items(db.actor, "ammo_vog-25",5)
end
function add_habar_for_borov()
  local item = ""
  local obj = g_sim:story_object(story_ids.agr_inventory_box_0029)
  local count = lua_random(8,15)
  for i=1,count do
  item = nagrad.level_7[lua_random(table.getn(nagrad.level_7))]
    g_sim:create(item,obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  end
  g_sim:create("dollars50",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("dollars50",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("dollars50",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("dollars50",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("letter_for_borov",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
end
function add_habar_for_borov2()
  local item = ""
  local obj = g_sim:story_object(story_ids.agr_inventory_box_0029)
  local count = lua_random(10,20)
  for i=1,count do
  item = nagrad.level_6[lua_random(table.getn(nagrad.level_6))]
    g_sim:create(item,obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  end
  g_sim:create("dollars25",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("dollars25",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("dollars25",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("dollars25",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("letter_for_borov",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
end
function add_voron_monster_part_1()
  local item = ""
  local count = lua_random(2,3)
  for i=1,count do
  item = nagrad.level_1[lua_random(table.getn(nagrad.level_1))]
    sak.create_items(db.actor,item,1)
  end
  for k=1,5 do
  local nom=k
    if nom~=1 then
    db.actor:disable_info_portion("voron_monster_part_"..nom.."_info")
    end
  end
end
function add_voron_monster_part_2()
  local item = ""
  local count = lua_random(3,4)
  for i=1,count do
  item = nagrad.level_2[lua_random(table.getn(nagrad.level_2))]
    sak.create_items(db.actor,item,1)
  end
  for k=1,5 do
  local nom=k
    if nom~=2 then
    db.actor:disable_info_portion("voron_monster_part_"..nom.."_info")
    end
  end
end
function add_voron_monster_part_3()
  local item = ""
  local count = lua_random(3,5)
  for i=1,count do
  item = nagrad.level_3[lua_random(table.getn(nagrad.level_3))]
    sak.create_items(db.actor,item,1)
  end
  for k=1,5 do
  local nom=k
    if nom~=3 then
    db.actor:disable_info_portion("voron_monster_part_"..nom.."_info")
    end
  end
end
function add_voron_monster_part_4()
  local item = ""
  local count = lua_random(4,5)
  for i=1,count do
  item = nagrad.level_4[lua_random(table.getn(nagrad.level_4))]
    sak.create_items(db.actor,item,1)
  end
  for k=1,5 do
  local nom=k
    if nom~=4 then
    db.actor:disable_info_portion("voron_monster_part_"..nom.."_info")
    end
  end
end
function add_voron_monster_part_5()
  local item = ""
  local count = lua_random(4,6)
  for i=1,count do
  item = nagrad.level_5[lua_random(table.getn(nagrad.level_5))]
    sak.create_items(db.actor,item,1)
  end
  for k=1,5 do
  local nom=k
    if nom~=5 then
    db.actor:disable_info_portion("voron_monster_part_"..nom.."_info")
    end
  end
end
function take_mod_wpn()
  local mod_wpn = nlc_vars.wpntip or 0
  if mod_wpn ~=0 then
  sak.create_items(db.actor, mod_wpn.."_m5",1)
  end
end
function clear_ready()
  nlc_vars.time_start = nil
  nlc_vars.wpntip = nil
end
function take_30vog()
  sak.create_items(db.actor,"ammo_vog-25",30)
end
function give_rg6()
  sak_inventory.release_actor_items("wpn_rg-6",1)
end
function have_2_ak74()
  return sak.have_items_count("wpn_ak74",2)~=false
end
function ak74_m1_have()
  return sak.have_items_count("wpn_ak74_m1",1)~=false
end
function give_ak74_m1()
  sak_inventory.release_actor_items("wpn_ak74_m1",1)
end
function give_2_ak74()
  sak_inventory.release_actor_items("wpn_ak74",2)
  nlc_vars.wpntip = "wpn_ak74"
end
function have_2_ak47()
  return sak.have_items_count("wpn_ak47",2)~=false
end
function give_2_ak47()
  sak_inventory.release_actor_items("wpn_ak47",2)
  nlc_vars.wpntip = "wpn_ak47"
end
function have_2_aks47()
  return sak.have_items_count("wpn_aks47",2)~=false
end
function give_2_aks47()
  sak_inventory.release_actor_items("wpn_aks47",2)
  nlc_vars.wpntip = "wpn_aks47"
end
function have_2_akm()
  return sak.have_items_count("wpn_akm",2)~=false
end
function give_2_akm()
  sak_inventory.release_actor_items("wpn_akm",2)
  nlc_vars.wpntip = "wpn_akm"
end
function have_2_akm_pl()
  return sak.have_items_count("wpn_akm_pl",2)~=false
end
function give_2_akm_pl()
  sak_inventory.release_actor_items("wpn_akm_pl",2)
  nlc_vars.wpntip = "wpn_akm_pl"
end
function have_2_abakan()
  return sak.have_items_count("wpn_abakan",2)~=false
end
function give_2_abakan()
  sak_inventory.release_actor_items("wpn_abakan",2)
  nlc_vars.wpntip = "wpn_abakan"
end
function have_2_lr300()
  return sak.have_items_count("wpn_lr300",2)~=false
end
function give_2_lr300()
  sak_inventory.release_actor_items("wpn_lr300",2)
  nlc_vars.wpntip = "wpn_lr300"
end
function have_2_sig550()
  return sak.have_items_count("wpn_sig550",2)~=false
end
function give_2_sig550()
  sak_inventory.release_actor_items("wpn_sig550",2)
  nlc_vars.wpntip = "wpn_sig550"
end
function have_2_l85()
  return sak.have_items_count("wpn_l85",2)~=false
end
function give_2_l85()
  sak_inventory.release_actor_items("wpn_l85",2)
  nlc_vars.wpntip = "wpn_l85"
end
function have_2_val()
  return sak.have_items_count("wpn_val",2)~=false
end
function give_2_val()
  sak_inventory.release_actor_items("wpn_val",2)
  nlc_vars.wpntip = "wpn_val"
end
function have_2_vintorez()
  return sak.have_items_count("wpn_vintorez",2)~=false
end
function give_2_vintorez()
  sak_inventory.release_actor_items("wpn_vintorez",2)
  nlc_vars.wpntip = "wpn_vintorez"
end
function give_antirad_muller(first_speaker, second_speaker)
  --sak_inventory.release_actor_items("antirad", 2)
  local npc = who_is_npc(first_speaker, second_speaker)
  vergas_lib.search_items("antirad",2,2)
  amk.spawn_item_in_inv("medkit",npc)
  xr_wounded.unlock_medkit(npc)
end
function give_medkit_kozel(first_speaker, second_speaker)
  local npc = who_is_npc(first_speaker, second_speaker)
  amk.spawn_item_in_inv("medkit",npc)
  xr_wounded.unlock_medkit(npc)
end

function take_zapiska()
  sak.create_items(db.actor,"zapiska_muller",1)
end
function take_postmens_text_1()
  sak.create_items(db.actor,"postmens_text_1",1)
end
function have_postmens_text_1()
  return sak.have_items_count("postmens_text_1",1)~=false
end
function postmens_bag_have()
  return sak.have_items_count("postmens_bag",1)~=false
end
function postmens_bag_not_have()
  return not postmens_bag_have()
end
function give_postmens_bag()
  sak_inventory.release_actor_items("postmens_bag", 1)
end
function give_postmens_text_1()
  sak_inventory.release_actor_items("postmens_text_1", 1)
end
function take_eye()
  sak.create_items(db.actor,"af_eye_dyn3d",1)
end
function have_eye()
  return sak.have_items_count("af_eye",1)~=false
end
function give_eye()
  sak_inventory.release_actor_items("af_eye", 1)
end
function have_pusirek()
  return sak.have_items_count("af_dummy_fire",1)~=false
end
function give_pusirek()
  sak_inventory.release_actor_items("af_dummy_fire", 1)
end
function give_zapiska()
  sak_inventory.release_actor_items("zapiska_muller", 1)
end
function have_1_mutant_face_tushkano()
  return sak.have_items_count("mutant_face_tushkano",1)~=false
end
function give_1_mutant_face_tushkano()
  sak_inventory.release_actor_items("mutant_face_tushkano",1)
end
function have_3_mutant_face_tushkano()
  return sak.have_items_count("mutant_face_tushkano",3)~=false
end
function give_3_mutant_face_tushkano()
  sak_inventory.release_actor_items("mutant_face_tushkano",3)
end
function have_som_mutant_face_tushkano()
  local kol=2+math.ceil(sak.day_money/20)
  return sak.have_items_count("mutant_face_tushkano",kol)~=false
end
function give_som_mutant_face_tushkano()
  local kol=2+math.ceil(sak.day_money/20)
  sak_inventory.release_actor_items("mutant_face_tushkano",kol)
end
function have_1_mutant_tail_cat()
  return sak.have_items_count("mutant_tail_cat",1)~=false
end
function give_1_mutant_tail_cat()
  sak_inventory.release_actor_items("mutant_tail_cat",1)
end
function have_2_mutant_tail_cat()
  return sak.have_items_count("mutant_tail_cat",2)~=false
end
function give_2_mutant_tail_cat()
  sak_inventory.release_actor_items("mutant_tail_cat",2)
end
function have_3_mutant_tail_cat()
  return sak.have_items_count("mutant_tail_cat",3)~=false
end
function give_3_mutant_tail_cat()
  sak_inventory.release_actor_items("mutant_tail_cat",3)
end
function have_4_mutant_tail_cat()
  return sak.have_items_count("mutant_tail_cat",4)~=false
end
function give_4_mutant_tail_cat()
  sak_inventory.release_actor_items("mutant_tail_cat",4)
end
function have_4_mutant_face_tushkano()
  return sak.have_items_count("mutant_face_tushkano",4)~=false
end
function give_4_mutant_face_tushkano()
  sak_inventory.release_actor_items("mutant_face_tushkano",4)
end
function have_20_mutant_face_tushkano()
  return sak.have_items_count("mutant_face_tushkano",20)~=false
end
function give_20_mutant_face_tushkano()
  sak_inventory.release_actor_items("mutant_face_tushkano",20)
end
function have_dog_tail_boar_leg()
  return sak.have_items_count("mutant_dog_tail",1)~=false and sak.have_items_count("mutant_boar_leg",1)~=false
end
function give_dog_tail_boar_leg()
  sak_inventory.release_actor_items("mutant_dog_tail",1)
  sak_inventory.release_actor_items("mutant_boar_leg",1)
end
function have_2_mutant_dog_tail()
  return sak.have_items_count("mutant_dog_tail",2)~=false
end
function give_2_mutant_dog_tail()
  sak_inventory.release_actor_items("mutant_dog_tail",2)
end
function have_10_mutant_dog_tail()
  return sak.have_items_count("mutant_dog_tail",10)~=false
end
function give_10_mutant_dog_tail()
  sak_inventory.release_actor_items("mutant_dog_tail",10)
end
function add_2_mutant_dog_tail()
  sak.create_items(db.actor,"mutant_dog_tail",2)
end
function have_som_mutant_dog_tail()
  local kol=math.ceil(sak.day_money/10)
  return sak.have_items_count("mutant_dog_tail",kol)~=false
end
function give_som_mutant_dog_tail()
  local kol=math.ceil(sak.day_money/10)
  sak_inventory.release_actor_items("mutant_dog_tail",kol)
end
function have_1_mutant_dog_tail()
  return sak.have_items_count("mutant_dog_tail",1)~=false
end
function give_1_mutant_dog_tail()
  sak_inventory.release_actor_items("mutant_dog_tail",1)
end
function add_1_mutant_dog_tail()
  sak.create_items(db.actor,"mutant_dog_tail",1)
end
function have_som_mutant_boar_leg()
  local kol=math.ceil(sak.day_money/20)
  return sak.have_items_count("mutant_boar_leg",kol)~=false
end
function give_som_mutant_boar_leg()
  local kol=math.ceil(sak.day_money/20)
  sak_inventory.release_actor_items("mutant_boar_leg",kol)
end
function have_2_mutant_boar_leg()
  return sak.have_items_count("mutant_boar_leg",2)~=false
end
function give_2_mutant_boar_leg()
  sak_inventory.release_actor_items("mutant_boar_leg",2)
end
function have_10_mutant_boar_leg()
  return sak.have_items_count("mutant_boar_leg",10)~=false
end
function give_10_mutant_boar_leg()
  sak_inventory.release_actor_items("mutant_boar_leg",10)
end
function have_1_mutant_boar_leg()
  return sak.have_items_count("mutant_boar_leg",1)~=false
end
function add_1_mutant_boar_leg()
  sak.create_items(db.actor,"mutant_boar_leg",1)
end
function add_2_mutant_boar_leg()
  sak.create_items(db.actor,"mutant_boar_leg",2)
end
function give_1_mutant_boar_leg()
  sak_inventory.release_actor_items("mutant_boar_leg",1)
end
function have_1_mutant_burer_hand()
  return sak.have_items_count("mutant_burer_hand",1)~=false
end
function give_1_mutant_burer_hand()
  sak_inventory.release_actor_items("mutant_burer_hand", 1)
end
function have_1_mutant_psevdogigant_hand()
  return sak.have_items_count("mutant_psevdogigant_hand",1)~=false
end
function give_1_mutant_psevdogigant_hand()
  sak_inventory.release_actor_items("mutant_psevdogigant_hand",1)
end
function have_1_mutant_krovosos_jaw()
  return sak.have_items_count("mutant_krovosos_jaw",1)~=false
end
function give_1_mutant_krovosos_jaw()
  sak_inventory.release_actor_items("mutant_krovosos_jaw",1)
end
function add_1_mutant_krovosos_jaw()
  sak.create_items(db.actor,"mutant_krovosos_jaw",1)
end
function have_1_mutant_hand_kontroler()
  return sak.have_items_count("mutant_hand_kontroler",1)~=false
end
function give_1_mutant_hand_kontroler()
  sak_inventory.release_actor_items("mutant_hand_kontroler",1)
end
function have_1_mutant_chimera_kogot()
  return sak.have_items_count("mutant_chimera_kogot",1)~=false
end
function give_1_mutant_chimera_kogot()
  sak_inventory.release_actor_items("mutant_chimera_kogot",1)
end
function have_1_mutant_poltergeist_glas()
  return sak.have_items_count("mutant_poltergeist_glas",1)~=false
end
function give_1_mutant_poltergeist_glas()
  sak_inventory.release_actor_items("mutant_poltergeist_glas",1)
end
function add_1_chimera_kidney()
  local obj = g_sim:create("mutant_e_chimera_kidney", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
    if obj then
    schedule.add ("o_kidn", "sak_dialog.olded_kidney("..obj.id..")", 250)
    end
  sak.relocate_item(db.actor, "in", "mutant_e_chimera_kidney", 1)
end
function olded_kidney(id)
  local cond=0.15+(level.get_time_hours()/34)
  params.obj_condition(id, cond)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = cond
  pk:set(data)
end
function have_mutant_e_chimera_kidney()
  return sak.have_items_count("mutant_e_chimera_kidney",1)~=false
end
function give_mutant_e_chimera_kidney()
  sak_inventory.release_actor_items("mutant_e_chimera_kidney",1)
end
function have_1_mutant_zombie_hand()
  return sak.have_items_count("mutant_zombie_hand",1)~=false
end
function give_1_mutant_zombie_hand()
  sak_inventory.release_actor_items("mutant_zombie_hand",1)
end
function have_2_mutant_zombie_hand()
  return sak.have_items_count("mutant_zombie_hand",2)~=false
end
function give_2_mutant_zombie_hand()
  sak_inventory.release_actor_items("mutant_zombie_hand",2)
end
function have_3_mutant_zombie_hand()
  return sak.have_items_count("mutant_zombie_hand",3)~=false
end
function give_3_mutant_zombie_hand()
  sak_inventory.release_actor_items("mutant_zombie_hand",3)
end
function have_4_mutant_zombie_hand()
  return sak.have_items_count("mutant_zombie_hand",4)~=false
end
function give_4_mutant_zombie_hand()
  sak_inventory.release_actor_items("mutant_zombie_hand",4)
end
function have_5_mutant_zombie_hand()
  return sak.have_items_count("mutant_zombie_hand",5)~=false
end
function give_5_mutant_zombie_hand()
  sak_inventory.release_actor_items("mutant_zombie_hand",5)
end
function have_1_mutant_psevdodog_tail()
  return sak.have_items_count("mutant_psevdodog_tail",1)~=false
end
function give_1_mutant_psevdodog_tail()
  sak_inventory.release_actor_items("mutant_psevdodog_tail",1)
end
function add_1_mutant_psevdodog_tail()
  sak.create_items(db.actor,"mutant_psevdodog_tail",1)
end
function have_5_mutant_psevdodog_tail()
  return sak.have_items_count("mutant_psevdodog_tail",5)~=false
end
function give_5_mutant_psevdodog_tail()
  sak_inventory.release_actor_items("mutant_psevdodog_tail",5)
end
function have_1_mutant_flesh_eye()
  return sak.have_items_count("mutant_flesh_eye",1)~=false
end
function give_1_mutant_flesh_eye()
  sak_inventory.release_actor_items("mutant_flesh_eye",1)
end
function have_3_mutant_flesh_eye()
  return sak.have_items_count("mutant_flesh_eye",3)~=false
end
function give_3_mutant_flesh_eye()
  sak_inventory.release_actor_items("mutant_flesh_eye",3)
end
function have_5_mutant_flesh_eye()
  return sak.have_items_count("mutant_flesh_eye",5)~=false
end
function give_5_mutant_flesh_eye()
  sak_inventory.release_actor_items("mutant_flesh_eye",5)
end
function add_1_mutant_flesh_eye()
  sak.create_items(db.actor,"mutant_flesh_eye",1)
end
function have_gar_dram_novice_mutant_hand()
  if sak.have_items_count("mutant_chimera_kogot",1)~=false or sak.have_items_count("mutant_krovosos_jaw",1)~=false or sak.have_items_count("mutant_burer_hand",1)~=false or sak.have_items_count("mutant_hand_kontroler",1)~=false then
  return true
  end
  return false
end
function greens_have_kolbasa()
  local id=(nlc_vars.greens_kolbasa or 0)
  if id<=5 then return true end
  return false
end
function greens_not_have_kolbasa()
 return not greens_have_kolbasa()
end
function upgrade_outfit_precond(trader, actor)
  local item_in_slot_6 = actor_active_item(6)
  if item_in_slot_6~=nil and not (strpos(item_in_slot_6:section(),"bandit_veteran_",1,true) or strpos(item_in_slot_6:section(),"bandit_master_",1,true) or strpos(item_in_slot_6:section(),"super_",1,true)) then
  return true
  else return false
  end
end
function upgrade_ok_precond(first_speaker, second_speaker)
  local id=(nlc_vars.upgrade_item or 0)
  if id==0 then return false end
  local obj=g_sim:object(id)
  if obj then
    local section = obj:section_name()
    local item=first_speaker:object(section)
    if item then
    return true
    end
  end
  return false
end
function upgrade_not_ok_precond(first_speaker, second_speaker)
  return not upgrade_ok_precond(first_speaker, second_speaker)
end
function give_upgrade_outfit(first_speaker, second_speaker)
  local obj = first_speaker:item_in_slot(6)
  first_speaker:transfer_item(obj, second_speaker)
  nlc_vars.upgrade_item = obj:id()
  news_manager.relocate_item(db.actor, "out", obj:section())
end
function return_upgrade_outfit(first_speaker, second_speaker)
  local id=(nlc_vars.upgrade_item or 0)
  if id==0 then return end
  local obj=g_sim:object(id)
  if obj then
    local section = obj:section_name()
    local item=first_speaker:object(section)
    if item then
    first_speaker:transfer_item(item, second_speaker)
    sak.relocate_item(second_speaker, "in", section, 1)
    if not strpos(section, "_q_",1,true) then
    local new=string.gsub(section, "_", "_q_")
    coord_params.set_obj_section(id, new)
    end
    local rand=lua_random(2,5)
    local hour=math.floor(40/rand)
    timers.start_timer("upgrade"..id,rand,hour,21,"sak_dialog.downgrade_item("..id..")")
    end
  end
  nlc_vars.upgrade_item = nil
end
function downgrade_item(id)
  local obj=g_sim:object(id)
  if obj then
    local section = obj:section_name()
    if strpos(section, "_q_",1,true) then
    local new=string.gsub(section, "_q_", "_")
    coord_params.set_obj_section(id, new)
    end
  end
end
function upgrade_weapon_precond(trader, actor)
  local item_in_slot_1 = actor_active_item(1)
  local item_in_slot_2 = actor_active_item(2)
  if item_in_slot_1 or item_in_slot_2 then return true
  else return false
  end
end
function give_upgrade_weapon(first_speaker, second_speaker)
  local item_in_slot_1 = actor_active_item(1)
  local item_in_slot_2 = actor_active_item(2)
  if item_in_slot_2 then
  first_speaker:transfer_item(item_in_slot_2, second_speaker)
  nlc_vars.upgrade_item = item_in_slot_2:id()
  news_manager.relocate_item(db.actor, "out", item_in_slot_2:section())
  elseif item_in_slot_1 then
  first_speaker:transfer_item(item_in_slot_1, second_speaker)
  nlc_vars.upgrade_item = item_in_slot_1:id()
  news_manager.relocate_item(db.actor, "out", item_in_slot_1:section())
  end
end

function havent_voron_find_item_start()
  if db.actor:has_info("voron_find_item_1_start") or db.actor:has_info("voron_find_item_2_start") or db.actor:has_info("voron_find_item_3_start") or db.actor:has_info("voron_find_item_4_start") or db.actor:has_info("voron_find_item_5_start") then
  return false
  else
  return true
  end
end
function have_voron_find_item_start()
  if db.actor:has_info("voron_find_item_1_start") or db.actor:has_info("voron_find_item_2_start") or db.actor:has_info("voron_find_item_3_start") or db.actor:has_info("voron_find_item_4_start") or db.actor:has_info("voron_find_item_5_start") then
  return true
  else
  return false
  end
end
function have_voron_find_item_1()
  return sak.have_items_count("kartina04",1)~=false
end
function have_voron_find_item_2()
  return sak.have_items_count("ventilator_01",1)~=false
end
function have_voron_find_item_3()
  return sak.have_items_count("item_battery_02",1)~=false
end
function have_voron_find_item_4()
  return sak.have_items_count("klyk_pribor_1c",1)~=false
end
function have_voron_find_item_5()
  return sak.have_items_count("item_psi_helmet_01",1)~=false
end
function give_voron_find_item_1()
  sak_inventory.release_actor_items("kartina04",1)
end
function give_voron_find_item_2()
  sak_inventory.release_actor_items("ventilator_01",1)
end
function give_voron_find_item_3()
  sak_inventory.release_actor_items("item_battery_02",1)
end
function give_voron_find_item_4()
  sak_inventory.release_actor_items("klyk_pribor_1c",1)
end
function give_voron_find_item_5()
  sak_inventory.release_actor_items("item_psi_helmet_01",1)
end

function add_voron_find_item_1_done()
  sak.create_items(db.actor,"grenade_f1",5)
end
function add_voron_find_item_2_done()
  sak.create_items(db.actor,"ammo_vog-25",10)
  sak.create_items(db.actor,"grenade_rgd5",5)
end
function add_voron_find_item_3_done()
  sak.create_items(db.actor,"ammo_vog-25",10)
  sak.create_items(db.actor,"grenade_f1",5)
  sak.create_items(db.actor,"grenade_rgd5",5)
end
function add_voron_find_item_4_done()
  sak.create_items(db.actor,"ammo_vog-25",10)
  sak.create_items(db.actor,"grenade_f1",5)
  sak.create_items(db.actor,"grenade_rgd5",10)
end
function add_voron_find_item_5_done()
  sak.create_items(db.actor,"ammo_vog-25",10)
  sak.create_items(db.actor,"grenade_f1",10)
  sak.create_items(db.actor,"grenade_rgd5",10)
end
function have_harmonica()
  return sak.have_items_count("harmonica_b",1)~=false
end
function give_harmonica()
  sak_inventory.release_actor_items("harmonica_b",1)
end
function have_rad_pda()
  return sak.have_items_count("rad_pda",1)~=false
end
function give_rad_pda()
  sak_inventory.release_actor_items("rad_pda",1)
end
function add_wpn_mp5_m1()
  sak.create_items(db.actor,"wpn_mp5_m1",1)
end
function add_10ammo_9x18_ap()
  sak.create_items(db.actor,"ammo_9x18_pmm",10)
end
function add_5ammo_9x18_ap()
  sak.create_items(db.actor,"ammo_9x18_pmm",5)
end
function add_20ammo_9x18_ap()
  sak.create_items(db.actor,"ammo_9x18_pmm",20)
end
function add_som_ammo_10_buck()
  som_ammo_12x70_buck(10)
end
function add_som_ammo_20_buck()
  som_ammo_12x70_buck(20)
end
function add_som_ammo_30_buck()
  som_ammo_12x70_buck(30)
end
function add_som_ammo_40_buck()
  som_ammo_12x70_buck(40)
end
function add_som_ammo_50_buck()
  som_ammo_12x70_buck(50)
end
function add_som_ammo_80_buck()
  som_ammo_12x70_buck(80)
end
function add_som_ammo_100_buck()
  som_ammo_12x70_buck(100)
end
function add_som_ammo_120_buck()
  som_ammo_12x70_buck(120)
end
function som_ammo_12x70_buck(som)
  local npc=db.actor
  local kol=1+math.ceil(som-(math.ceil(sak.day_money/10))*(som/10))
if kol<=0 then kol=1 end
  local count=kol
  local pachka=0
  while kol>10 do
    kol=kol-10
    pachka=pachka+1
  end
  if pachka>0 then
    for i=1,pachka do
      g_sim:create("ammo_12x70_buck",npc:position(),
      npc:level_vertex_id(),
      npc:game_vertex_id(),
      npc:id())
    end
  end
  if count>(10*pachka) then
    g_sim:create_ammo("ammo_12x70_buck", npc:position(),
      npc:level_vertex_id(),
      npc:game_vertex_id(),
      npc:id(),(count-(10*pachka)))
  end
  local task_texture, task_rect=get_texture_info("ui_iconsTotal_found_thing")
  local news_text ="%c[255,1,255,1]"..game.translate_string("general_in_item").."\\n".."%c[default] "..count.." патронов дроби."
  npc:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
end
function add_som_ammo_545_ap()
  som_ammo_545x39_ap(30)
end
function som_ammo_545x39_ap(som)
  local npc=db.actor
  local kol=1+math.ceil(som-(math.ceil(sak.day_money/10))*(som/20))
if kol<=0 then kol=1 end
  local count=kol
  local pachka=0
  while kol>30 do
    kol=kol-30
    pachka=pachka+1
  end
  if pachka>0 then
    for i=1,pachka do
      g_sim:create("ammo_5.45x39_ap",npc:position(),
      npc:level_vertex_id(),
      npc:game_vertex_id(),
      npc:id())
    end
  end
  if count>(30*pachka) then
    g_sim:create_ammo("ammo_5.45x39_ap", npc:position(),
      npc:level_vertex_id(),
      npc:game_vertex_id(),
      npc:id(),(count-(30*pachka)))
  end
  local task_texture, task_rect=get_texture_info("ui_iconsTotal_found_thing")
  local news_text ="%c[255,1,255,1]"..game.translate_string("general_in_item").."\\n".."%c[default] "..count.." патронов 5.45"
  npc:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
end
function add_som_ammo_762_ap()
  som_ammo_762x39_ap(30)
end
function som_ammo_762x39_ap(som)
  local npc=db.actor
  local kol=1+math.ceil(som-(math.ceil(sak.day_money/10))*(som/16))
if kol<=0 then kol=1 end
  local count=kol
  local pachka=0
  while kol>30 do
    kol=kol-30
    pachka=pachka+1
  end
  if pachka>0 then
    for i=1,pachka do
      g_sim:create("ammo_7.62x39_ap",npc:position(),
      npc:level_vertex_id(),
      npc:game_vertex_id(),
      npc:id())
    end
  end
  if count>(30*pachka) then
    g_sim:create_ammo("ammo_7.62x39_ap", npc:position(),
      npc:level_vertex_id(),
      npc:game_vertex_id(),
      npc:id(),(count-(30*pachka)))
  end
  local task_texture, task_rect=get_texture_info("ui_iconsTotal_found_thing")
  local news_text ="%c[255,1,255,1]"..game.translate_string("general_in_item").."\\n".."%c[default] "..count.." патронов 7.62"
  npc:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
end
function add_zink_ammo_5x45()
  local npc=db.actor
  for i=1,36 do
    g_sim:create("ammo_5.45x39_fmj",npc:position(),
    npc:level_vertex_id(),
    npc:game_vertex_id(),
    npc:id())
  end
  local task_texture, task_rect=get_texture_info("ui_iconsTotal_found_thing")
  local news_text ="%c[255,1,255,1]"..game.translate_string("general_in_item").."\\n".."%c[default] ÷инк патронов 5x45."
  npc:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
end
function add_zink_ammo_7x62()
  local npc=db.actor
  for i=1,23 do
    g_sim:create("ammo_7.62x39_fmj",npc:position(),
    npc:level_vertex_id(),
    npc:game_vertex_id(),
    npc:id())
  end
  g_sim:create_ammo("ammo_7.62x39_fmj", npc:position(),
    npc:level_vertex_id(),
    npc:game_vertex_id(),
    npc:id(),10)
  local task_texture, task_rect=get_texture_info("ui_iconsTotal_found_thing")
  local news_text ="%c[255,1,255,1]"..game.translate_string("general_in_item").."\\n".."%c[default] ÷инк патронов 7x62."
  npc:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
end
function give_2_rygyi(first_speaker, second_speaker)
  sak_inventory.release_actor_items("rygyi_med_r", 1)
  vergas_lib.search_items("bandage",2,2)
  amk.spawn_item_in_inv("medkit",first_speaker)
  xr_wounded.unlock_medkit(first_speaker)
end
function have_rygyi_med()
  return sak.have_items_count("rygyi_med_r",1)~=false
end
function not_have_rygyi_med()
  return not have_rygyi_med()
end
function rygyi_med_ok()
  local obj = g_sim:story_object(story_ids.rygyi)
  if obj then
    if obj:alive() then
      local pk = get_netpk(obj)
      local data = pk:get()
      data.health     = 0.9
      data.upd.health = 0.9
      pk:set(data)
      local sobj=alife():object(obj.id)
      sobj.wounded=false
    else
      misc.release_by_name("rygyi")
      actor:give_info_portion("rygyi_umer")
    end
  end
end

function give_2_rygyi_krot()
  sak_inventory.release_actor_items("rygyi_med_r", 1)
end
function bandage_2_have()
  return vergas_lib.search_items("bandage",2,1)~= false
end
function bandage_2_no_have()
  return vergas_lib.search_items("bandage",2,1)== false
end
function gar_flame()
  if db.actor:has_info("gar_flame_start") or db.actor:has_info("gar_flame_no_start") then
  return true
  else
  return false
  end
end

function gar_flame_full_have()
  local obj=db.actor:object("wpn_flame")
  if  obj~=nil then
  return true
  end
end
function give_box_gar_flame()
  sak_inventory.release_actor_items("inventory_sakbox_gar_flame", 1)
end
function take_gar_flame()
  sak.create_items(db.actor,"wpn_flame",1)
  sak.create_items(db.actor,"vodka",3)
end
function take2_gar_flame()
  sak.create_items(db.actor,"wpn_flame",1)
  schedule.add ("timer_gar_flame", "sak_dialog.unload_gar_flame()", 250)
end
function take3_gar_flame()
  sak.create_items(db.actor,"wpn_flame",1)
end

function weapon_unload(arg)
  if arg then
    local wpn = false
    if type(arg) == 'userdata' then
       wpn = arg
    else
       wpn = client_obj(tonumber(arg))
    end

    if wpn then
       wpn:unload_magazine()
    else
       wprintf("[~T].~C0C #ERROR: weapon_unload failed for weapon id [%s]~C07", DumpVar(arg))
    end -- if wpn
  end -- if arg
end

function open_dv_seif_flame()
  local obj1 = g_sim:story_object(story_ids.dv_sak_box_0001)
  local ids,cnt = registry.inv_objects(obj1.id, true)
    for n = 1,cnt do
    local id = ids[n]
    local sobj = client_obj(id)
    if sobj then
      misc.release_obj(id)
    end
    end
  local obj=g_sim:create("wpn_flame",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj then
  schedule.add ("unload_weapon", "sak_dialog.weapon_unload("..obj.id..")", 250)
  end
end
function unload_gar_flame()
  local obj=db.actor:object("wpn_flame")
  obj:unload_magazine()
end
function screw_flame_load_time()
  start_time("screw_flame_load_time")
end
function is_ready_time_screw_flame_load()
  return is_ready_time("screw_flame_load_time",12)==true
end
function not_ready_time_screw_flame_load()
  return not_ready_time("screw_flame_load_time",12)==true
end
function clear_ready_time_screw_flame_load()
  clear_ready_time("screw_flame_load_time")
end
function sidor_flame_load_time()
  start_time("sidor_flame_load_time")
end
function is_ready_time_sidor_flame_load()
  return is_ready_time("sidor_flame_load_time",5*60)==true
end
function not_ready_time_sidor_flame_load()
  return not_ready_time("sidor_flame_load_time",5*60)==true
end
function clear_ready_time_sidor_flame_load()
  clear_ready_time("sidor_flame_load_time")
end
function give_gar_flame(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "wpn_flame", "out")
end
function give2_gar_flame(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "wpn_flame", "out")
end
function gar_sakbox_have()
  return sak.have_items_count("inventory_sakbox_gar_flame",1)~=false
end
function gar_flame_have()
  return sak.have_items_count("wpn_flame",1)~=false
end

function seryi_payment()
  sak.create_items(db.actor,"ammo_5.45x39_ap",4)
  sak.create_items(db.actor,"grenade_f1",1)
  sak.create_items(db.actor,"grenade_rgd5",1)
end
function hellcar_payment()
  sak.create_items(db.actor,"medkit_army",2)  
  sak.create_items(db.actor,"af_gravi_dyn5d",1)
  timers.start_timer("end_hell",0,0,11,"sak.end_hellcar()")
end
function have_1_rygyi()
  return sak.have_items_count("mutant_face_tushkano",2)~=false and sak.have_items_count("vodka",1)~=false and sak.have_items_count("mutant_dog_tail",2)~=false
end
function give_1_rygyi()
  sak_inventory.release_actor_items("mutant_face_tushkano",2)
  sak_inventory.release_actor_items("vodka",1)
  sak_inventory.release_actor_items("mutant_dog_tail",2)
end
function take_2_rygyi()
  sak.create_items(db.actor,"rygyi_med_r",1)
end
function kontainer_have()
  return sak.have_items_count("arc_art_box_1basic",1)~=false
end
function kontainer_1_have()
  return sak.have_items_count("arc_art_box_1basic",1)~=false and sak.have_items_count("amk_af_night_star",1)~=false
end
function give_kontainer_1(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "arc_art_box_1basic", "out")
  sak_inventory.release_actor_items("amk_af_night_star",1)
end
function add_kontainer_8()
  local npc=db.actor
  sak.create_items(npc,"wpn_pm",1)
  sak.create_items(npc,"ammo_9x18_fmj",2)
  sak.create_items(npc,"antirad",1)
  nlc_vars.kontainer = nil
end
function neumeha_drags_have()
  return sak.have_items_count("neum_drags",1)~=false
end
function give_neumeha_drags()
  sak_inventory.release_actor_items("neum_drags",1)
end
function add_neumeha_drags()
  sak.create_items(db.actor,"neum_drags",1)
end
function add_neumeha_container()
  local npc=db.actor
  sak.create_items(npc,"arc_art_box_8basic",1)
end
function add_pm_volk()
  sak.create_items(db.actor,"wpn_pm",1)
  sak.create_items(db.actor,"ammo_9x18_fmj",1)
end
function add_kontainer_1()
  sak.create_items(db.actor,"medkit",1)
  sak.create_items(db.actor,"bandage",3)
end
function give_knife()
  sak.create_items(db.actor,"wpn_knife",1)  
end
function yan_pda_have()
  return sak.have_items_count("yan_pda",1)~=false
end
function give_yan_pda()
  sak_inventory.release_actor_items("yan_pda",1)
end
function repair_box_not_have()
  return sak.have_items_count("repair_boxoutfit",1)==false
end
function repair_box_have()
  return sak.have_items_count("repair_boxoutfit",1)~=false
end
function add_aps()
  sak.create_items(db.actor,"wpn_aps",1)
end
function add_mp5()
  sak.create_items(db.actor,"wpn_mp5",1)
end
function add_bizon()
  sak.create_items(db.actor,"wpn_bizon",1)
end
function add_aks47()
  sak.create_items(db.actor,"wpn_aks47",1)
end
function give_5kolbasa()
  sak_inventory.release_actor_items("kolbasa",5)
end
function kolbasa2_have()
  return sak.have_items_count("kolbasa",2)~=false
end
function kolbasa5_have()
  return sak.have_items_count("kolbasa",5)~=false
end
function give_2kolbasa()
  sak_inventory.release_actor_items("kolbasa",2)
end
function give_kolbasa()
  sak_inventory.release_actor_items("kolbasa",1)
end
function kolbasa_have()
  return sak.have_items_count("kolbasa",1)~=false
end
function take_kolbasa()
  sak.create_items(db.actor,"kolbasa",1)
end
function give_2kolbasa()
  sak_inventory.release_actor_items("kolbasa",2)
end
function kolbasa_2have()
  return sak.have_items_count("kolbasa",2)~=false
end
function give_4kolbasa()
  sak_inventory.release_actor_items("kolbasa",4)
end
function kolbasa_4have()
  return sak.have_items_count("kolbasa",4)~=false
end
function give_6kolbasa()
  sak_inventory.release_actor_items("kolbasa",6)
end
function kolbasa_6have()
  return sak.have_items_count("kolbasa",6)~=false
end
function give_8kolbasa()
  sak_inventory.release_actor_items("kolbasa",8)
end
function kolbasa_8have()
  return sak.have_items_count("kolbasa",8)~=false
end
function give_2green_kolbasa()
  sak_inventory.release_actor_items("green_kolbasa",2)
end
function green_kolbasa_2have()
  return sak.have_items_count("green_kolbasa",2)
end
function give_5green_kolbasa()
  sak_inventory.release_actor_items("green_kolbasa",5)
end
function green_kolbasa_5have()
  return sak.have_items_count("green_kolbasa",5)
end
function give_6green_kolbasa()
  sak_inventory.release_actor_items("green_kolbasa",6)
end
function green_kolbasa_6have()
  return sak.have_items_count("green_kolbasa",6)
end
function give_8green_kolbasa()
  sak_inventory.release_actor_items("green_kolbasa",8)
end
function green_kolbasa_8have()
  return sak.have_items_count("green_kolbasa",8)
end
function give_10green_kolbasa()
  sak_inventory.release_actor_items("green_kolbasa",10)
end
function green_kolbasa_10have()
  return sak.have_items_count("green_kolbasa",10)
end
function give_mixture()
  sak_inventory.release_actor_items("mixture",1)
end
function mixture_have()
  return sak.have_items_count("mixture",1)
end
function give_12conserva()
  sak_inventory.release_actor_items("conserva",12)
end
function conserva12_have()
  return sak.have_items_count("conserva",12)
end
function give_10conserva()
  sak_inventory.release_actor_items("conserva",10)
end
function conserva10_have()
  return sak.have_items_count("conserva",10)
end
function give_5conserva()
  sak_inventory.release_actor_items("conserva",5)
end
function conserva5_have()
  return sak.have_items_count("conserva",5)
end
function give_4conserva()
  sak_inventory.release_actor_items("conserva",4)
end
function conserva4_have()
  return sak.have_items_count("conserva",4)
end
function give_3conserva()
  sak_inventory.release_actor_items("conserva",3)
end
function conserva3_have()
  return sak.have_items_count("conserva",3)
end
function give_2conserva()
  sak_inventory.release_actor_items("conserva",2)
end
function conserva2_have()
  return sak.have_items_count("conserva",2)
end
function give_conserva()
  sak_inventory.release_actor_items("conserva",1)
end
function conserva_have()
  return sak.have_items_count("conserva",1)
end
function add_suhpay()
  sak.create_items(db.actor,"suhpay",1)
end
function give_suhpay()
sak_inventory.release_actor_items("suhpay",1)
end
function give_suhpay()
  sak.create_items(db.actor,"suhpay",1)
end
function suhpay_have()
  return sak.have_items_count("suhpay",1)
end
function conserva_kolbasa_have()
  return sak.have_items_count("conserva",1)~=false and sak.have_items_count("kolbasa",1)~=false
end
function give_conserva_kolbasa()
  sak_inventory.release_actor_items("conserva",1)
  sak_inventory.release_actor_items("kolbasa",1)
end
function conserva_bread_have()
  return sak.have_items_count("conserva",1)~=false and sak.have_items_count("bread",1)~=false
end
function give_conserva_bread()
  sak_inventory.release_actor_items("conserva",1)
  sak_inventory.release_actor_items("bread",1)
end
function conserva_bread2_have()
  return sak.have_items_count("conserva",2)~=false and sak.have_items_count("bread",2)~=false
end
function give_conserva_2bread()
  sak_inventory.release_actor_items("conserva",2)
  sak_inventory.release_actor_items("bread",2)
end
function take_conserva()
  sak.create_items(db.actor,"conserva",1)
end
function take_2conserva()
  sak.create_items(db.actor,"conserva",2)
end
function take_5conserva()
  sak.create_items(db.actor,"conserva",5)
end
function add_art_opt_food()
  sak.create_items(db.actor,"bread",40)
  sak.create_items(db.actor,"conserva",40)
  sak.create_items(db.actor,"energy_drink",20)
end
function take_psih_food()
  sak.create_items(db.actor,"bread",2)
  sak.create_items(db.actor,"kolbasa",2)
  sak.create_items(db.actor,"energy_drink",2)
end
function psih_food_have()
  return sak.have_items_count("bread",2)~=false and sak.have_items_count("kolbasa",2)~=false and vergas_lib.search_items("energy_drink",2,1)~=false
end
function give_psih_food()
  for i,k in pairs(sak_inventory.eatable) do
    if i=="bread" or i=="kolbasa" or i=="energy_drink" then
      local kol=#k
      for m=1,kol do
      local obj=g_sim:object(k[m])
        if obj then
        g_sim:release(obj, true)
        end
      end
    end
  end
  sak.relocate_item(db.actor, "out", "bread", 2)
  sak.relocate_item(db.actor, "out", "kolbasa", 2)
  sak.relocate_item(db.actor, "out", "energy_drink", 2)
end
function food_borov_entres1_have()
  return sak.have_items_count("bread",40)~=false and sak.have_items_count("conserva",40)~=false and sak.have_items_count("vodka",20)~=false and vergas_lib.search_items("energy_drink",20,1)~=false
end
function give_food_borov_entres1()
  sak_inventory.release_actor_items("bread",40)
  sak_inventory.release_actor_items("conserva",40)
  sak_inventory.release_actor_items("vodka",20)
  vergas_lib.search_items("energy_drink",20,2)
end
function food_borov_entres2_have()
  return sak.have_items_count("bread",10)~=false and sak.have_items_count("conserva",10)~=false and sak.have_items_count("vodka",5)~=false and vergas_lib.search_items("energy_drink",10,1)~=false
end
function give_food_borov_entres2()
  sak_inventory.release_actor_items("bread",10)
  sak_inventory.release_actor_items("conserva",10)
  sak_inventory.release_actor_items("vodka",5)
vergas_lib.search_items("energy_drink",10,2)
end
function timer_start_borov_entres()
timers.start_timer("entres",0,8,11,"sak.info_borov_entres()")
end
function timer_start_barman_entres()
timers.start_timer("entres",0,22,11,"sak.info_barman_entres()")
end
function timer_start_kulinar_entres()
timers.start_timer("entres",0,19,11,"sak.info_kulinar_entres()")
end
function timer_start_voron_entres()
timers.start_timer("entres",0,11,11,"sak.info_voron_entres()")
end

function give_2drink()
  vergas_lib.search_items("energy_drink",2,2)
end
function give_3drink()
  vergas_lib.search_items("energy_drink",3,2)
end
function take_bread()
  sak.create_items(db.actor,"bread",1)
end

function give_bread()
  sak_inventory.release_actor_items("bread",1)
end
function give_2bread()
  sak_inventory.release_actor_items("bread",2)
end
function give_3bread()
  sak_inventory.release_actor_items("bread",3)
end
function give_5bread()
  sak_inventory.release_actor_items("bread",5)
end
function give_6bread()
  sak_inventory.release_actor_items("bread",6)
end
function give_10bread()
  sak_inventory.release_actor_items("bread",10)
end
function give_15bread()
  sak_inventory.release_actor_items("bread",15)
end
function bread_have()
  return sak.have_items_count("bread",1)~=false
end
function bread_2have()
  return sak.have_items_count("bread",2)~=false
end
function bread_3have()
  return sak.have_items_count("bread",3)~=false
end
function bread5_have()
  return sak.have_items_count("bread",5)~=false
end
function bread6_have()
  return sak.have_items_count("bread",6)~=false
end
function bread10_have()
  return sak.have_items_count("bread",10)~=false
end
function bread15_have()
  return sak.have_items_count("bread",15)~=false
end
function drink2_have()
  return vergas_lib.search_items("energy_drink",2,1)~=false
end
function drink_have()
  return vergas_lib.search_items("energy_drink",1,1)~=false
end
function give_drink()
  vergas_lib.search_items("energy_drink",1,2)
end
function take_drink()
  sak.create_items(db.actor,"energy_drink",1)
end
function drink3_have()
  return vergas_lib.search_items("energy_drink",3,1)~=false
end
function take_5_drink_new()
  sak.create_items(db.actor,"energy_drink_new",5)
end

function has_soldiers_bribe3()
  return sak.have_items_count("vodka",3)~=false
end
function give_soldiers_bribe3()
  sak_inventory.release_actor_items("vodka",3)
end
function has_soldiers_bribe2()
  return sak.have_items_count("vodka",2)~=false
end
function give_soldiers_bribe2()
  sak_inventory.release_actor_items("vodka",2)
end
function has_soldiers_bribe()
  return sak.have_items_count("vodka",1)~=false
end
function give_soldiers_bribe()
  sak_inventory.release_actor_items("vodka",1)
end
function conserva_vodka_have()
  return sak.have_items_count("vodka",1)~=false and sak.have_items_count("conserva",2)~=false
end
function give_conserva_vodka()
  sak_inventory.release_actor_items("vodka",1)
  sak_inventory.release_actor_items("conserva",2)
end
function have_krysyk_goodses()
  return (sak.have_items_count("capsule",2,true)~=false and sak.have_items_count("af_star_new",1,true)~=false) or gg_3_cart_have()
end
function have_krysyk_goods()
  return sak.have_items_count("capsule",2,true)~=false and sak.have_items_count("af_star_new",1,true)~=false
end
function give_krysyk_goods()
  sak_inventory.release_actor_items("capsule",2,true)
  sak_inventory.release_actor_items("af_star_new",1,true)
end
function give_pda_krysyka()
  sak_inventory.release_actor_items("pda_krysyka",1)
end
function give_pda()
  sak_inventory.release_actor_items("device_pda_npc",1)
end
function pda_have()
  return sak.have_items_count("device_pda_npc",1)~=false
end
function give_2pda()
  sak_inventory.release_actor_items("device_pda_npc",2)
end
function pda2_have()
  return sak.have_items_count("device_pda_npc",2)~=false
end
function give_3pda()
  sak_inventory.release_actor_items("device_pda_npc",3)
end
function pda3_have()
  return sak.have_items_count("device_pda_npc",3)~=false
end
function give_5pda()
  sak_inventory.release_actor_items("device_pda_npc",5)
end
function pda5_have()
  return sak.have_items_count("device_pda_npc",5)~=false
end
function give_6pda()
  sak_inventory.release_actor_items("device_pda_npc",6)
end
function pda6_have()
  return sak.have_items_count("device_pda_npc",6)~=false
end
function give_10pda()
  sak_inventory.release_actor_items("device_pda_npc",10)
end
function pda10_have()
  return sak.have_items_count("device_pda_npc",10)~=false
end
function give_20pda()
  sak_inventory.release_actor_items("device_pda_npc",20)
end
function pda20_have()
  return sak.have_items_count("device_pda_npc",20)~=false
end
function give_30pda()
  sak_inventory.release_actor_items("device_pda_npc",30)
end
function pda30_have()
  return sak.have_items_count("device_pda_npc",30)~=false
end
function give_40pda()
  sak_inventory.release_actor_items("device_pda_npc",40)
end
function pda40_have()
  return sak.have_items_count("device_pda_npc",40)~=false
end

function add_borzyi_5pda()
  for a=1,5  do
    add_borzyi_pda()
  end
  sak.relocate_item(npc, "in", "device_pda_npc", 5)
end

function add_borzyi_12pda()
  for a=1,12  do
    add_borzyi_pda()
  end
  sak.relocate_item(npc, "in", "device_pda_npc", 12)
end

function add_borzyi_25pda()
  for a=1,25  do
    add_borzyi_pda()
  end
  sak.relocate_item(npc, "in", "device_pda_npc", 25)
end

function add_bodrzyi_pda()
  local rand=level.get_time_days()+level.get_time_hours()+3
  local fr_rand=(nlc_vars.br_rnd or 0)
  rand=(rand+fr_rand)%4
  fr_rand=fr_rand+1
  nlc_vars.br_rnd = fr_rand
  local npc=db.actor
  if rand==0 and lua_random()<0.65 then
    local obj=alife():create("device_pda_npc",npc:position(),npc:level_vertex_id(),npc:game_vertex_id(),npc:id())
    if obj then
    vergas_pda.set_rnd_pda_info(obj.id)
    end
  else
    alife():create("device_pda_npc",npc:position(),npc:level_vertex_id(),npc:game_vertex_id(),npc:id())
  end
end

function add_fraer_pda()
  local rand=level.get_time_days()+level.get_time_hours()+3
  local fr_rand=(nlc_vars.fr_rnd or 0)
  rand=(rand+fr_rand)%3
  fr_rand=fr_rand+1
  nlc_vars.fr_rnd = fr_rand
  if rand==0 and lua_random()<0.65 then
    add_device_pda_npc()
  else add_device_pda_npc_brocken()
  end
end
function add_device_pda_npc()
  local npc=db.actor
  local obj=alife():create("device_pda_npc",npc:position(),npc:level_vertex_id(),npc:game_vertex_id(),npc:id())
  if obj then
  vergas_pda.set_rnd_pda_info(obj.id)
  end
  sak.relocate_item(npc, "in", "device_pda_npc", 1)
end
function add_device_pda_npc_brocken()
  sak.create_items(db.actor, "device_pda_npc",1)
end
function give_mil_kurjer_pda()
  sak_inventory.release_actor_items("mil_kurjer_pda",1)
end
function add_mil_kurjer_pda()
  sak.create_items(db.actor, "mil_kurjer_pda",1)
end
function mil_kurjer_pda_have()
  return sak.have_items_count("mil_kurjer_pda",1)~=false
end
function have_repair_box()
  return sak.have_items_count("repair_boxoutfit",1)~=false
end
function have_pda_krysyka()
  return sak.have_items_count("pda_krysyka",1)~=false
end
function give_borov_11()
  sak_inventory.release_actor_items("scaintist_docs",1)
  sak_inventory.release_actor_items("inventory_sakbox_borov",1)
end
function give_borov_kontainer()
  sak_inventory.release_actor_items("inventory_sakbox_borov",1)
end
function give_borov_docs()
  sak_inventory.release_actor_items("scaintist_docs",1)
end
function have_borov_11()
  return sak.have_items_count("inventory_sakbox_borov",1)~=false
end
function have_inventory_sakbox()
  for i=1, table.getn(table_sakboxes) do
    if sak.have_items_count(table_sakboxes[i],1) then return true end
  end
  return false
end
--[[  local art_in_box=nil


function give_inventory_sakbox()
  for i=1, table.getn(table_sakboxes) do
    if sak.have_items_count(table_sakboxes[i],1) then
      local sobj=db.actor:object(table_sakboxes[i])
      local pk = get_netpk(sobj,1)
      local data = pk:get()
      if data.custom_data and data.custom_data~="" then
        art_in_box = data.custom_data
      else
        art_in_box = table_mayatniks[amk_vars.r_task_reward or 1]
      end
      sak_inventory.release_actor_items(table_sakboxes[i],1)
      nlc_vars.art_in_box = art_in_box
      break
    end
  end
end
function add_docent_majatnik()
  local art_in_box=(nlc_vars.art_in_box or art_in_box)
  sak.create_items(db.actor, art_in_box,1)
  sak.create_items(db.actor, "arc_art_box_1basic",1)
  nlc_vars.art_in_box = nil
end
function add_ecolog_majatnik()
  sak.create_items(db.actor, art_in_box,1)
end--]]
function have_borov_11_doc()
  return sak.have_items_count("scaintist_docs",1)~=false
end
function add_detector_elite()
  sak.create_items(db.actor,"detector_elite",1)
end
function add_full_detector_elite()
  sak.create_items(db.actor,"detector_elite",1)
end
function add_wpn_svu()
  sak.create_items(db.actor,"wpn_svu",1)
end
function add_wpn_sig()
  sak.create_items(db.actor,"wpn_sig_m2",1)
end
function add_wpn_vintorez()
  sak.create_items(db.actor,"wpn_vintorez",1)
end
function add_wpn_vintorez_m1()
  sak.create_items(db.actor,"wpn_vintorez_m1",1)
end

function have_habar_in_seif ()
  local obj=level_object_by_sid(31)
  local ids,cnt = registry.inv_objects(obj:id(), true)
  if cnt>=1 then
    return true
  end
  return false
end
function vint_in_seif ()
  local obj=level_object_by_sid(9115)
  local ids,cnt = registry.inv_objects(obj:id(), true)
  for n = 1,cnt do
  local id = ids[n]
  local sobj = client_obj(id)
    if sobj and sobj:section()=="wpn_vintorez_m1" then
    return true
    end
  end
  return false
end
function vint_out_seif ()
  return not vint_in_seif ()
end
function add_dolg_gaz_outfit()
  sak.create_items(db.actor,"dolg_gaz_outfit_m1",1)
end
function add_dolg_scientific_outfit()
  sak.create_items(db.actor,"dolg_scientific_outfit",1)
end
function add_killer_blue_exoskeleton()
  sak.create_items(db.actor,"killer_blue_exoskeleton",1)
end
function add_militaryspec_outfit()
  --sak.create_items(db.actor,"militaryspec_outfit",1)
  sak.create_items(db.actor,"military_outfit",1)  
end
function add_dolg_black_exoskeleton()
  sak.create_items(db.actor,"dolg_black_exoskeleton",1)
end
function add_4ammo_vog_25s()
  sak.create_items(db.actor,"ammo_vog-25",4)
end
function add_grenade_launcher()
  sak.create_items(db.actor,"wpn_addon_grenade_launcher",1)
end
function add_scope()
  sak.create_items(db.actor,"wpn_addon_po",1)
end
function add_1p78()
  sak.create_items(db.actor,"wpn_addon_1p78",1)
end
function add_cobra()
  sak.create_items(db.actor,"wpn_addon_cobra",1)
end
function add_acog()
  sak.create_items(db.actor,"wpn_addon_acog",1)
end
function add_eotech()
  sak.create_items(db.actor,"wpn_addon_eotech",1)
end
function add_sil_762_sr1()
  sak.create_items(db.actor,"wpn_addon_sil_762_sr1",1)
end
function val_escort_reward(npc, actor)
  relocate_money(npc, 5300, "in")
  sak.create_items(db.actor,"wpn_beretta",1)
end
function add_10ammo_vog_25p()
  sak.create_items(db.actor,"ammo_vog-25p",10)
  sak.create_items(db.actor,"wpn_addon_grenade_launcher",1)
end
function add_3ammo_vog_25p()
  sak.create_items(db.actor,"ammo_vog-25p",30)
end
function add_2ammo_762x54_7h1()
  sak.create_items(db.actor,"ammo_7.62x54_7h1",2)
end
function add_2ammo_762x54_ap()
  sak.create_items(db.actor,"ammo_7.62x54_ap",2)
end
function add_1ammo_762x54_ap()
  sak.create_items(db.actor,"ammo_7.62x54_ap",1)
end
function add_1ammo_762x54_7h14()
  sak.create_items(db.actor,"ammo_7.62x54_7h14",1)
end
function add_2ammo_762x54_7h14()
  sak.create_items(db.actor,"ammo_7.62x54_7h14",2)
end
function add_3ammo_7_62_fmj()
  sak.create_items(db.actor,"ammo_7.62x39_fmj",3)
end
function add_2ammo_762x39_ap()
  sak.create_items(db.actor,"ammo_7.62x39_ap",2)
end
function add_3ammo_545x39_ap()
  sak.create_items(db.actor,"ammo_5.45x39_ap",3)
end
function add_ammo_762x39_ap()
  sak.create_items(db.actor,"ammo_7.62x39_ap",1)
end
function add_1antirad()
  sak.create_items(db.actor,"antirad",1)
end
function add_2antirad()
  sak.create_items(db.actor,"antirad",2)
end
function add_3antirad()
  sak.create_items(db.actor,"antirad",3)
end
function add_4antirad()
  sak.create_items(db.actor,"antirad",4)
end
function add_5antirad()
  sak.create_items(db.actor,"antirad",5)
end
function add_7antirad()
  sak.create_items(db.actor,"antirad",7)
end
function add_10antirad()
  sak.create_items(db.actor,"antirad",10)
end
function add_15antirad()
  sak.create_items(db.actor,"antirad",15)
end
function add_metka()
  sak.create_items(db.actor,"amk_metka",1)
end
function add_repair_box()
  sak.create_items(db.actor,"repair_boxoutfit",1)
  --nlc_vars.repair_item_weapon = 0
  --nlc_vars.repair_itemoutfit = 0
end
function add_15medkit_scientic()
  sak.create_items(db.actor,"medkit_scientic",15)
end
function add_5medkit_scientic()
  sak.create_items(db.actor,"medkit_scientic",5)
end
function add_4medkit_scientic()
  sak.create_items(db.actor,"medkit_scientic",4)
end
function add_3medkit_scientic()
  sak.create_items(db.actor,"medkit_scientic",3)
end
function add_2medkit_scientic()
  sak.create_items(db.actor,"medkit_scientic",2)
end
function add_medkit_scientic()
  sak.create_items(db.actor,"medkit_scientic",1)
end
function add_3medkit_army()
  sak.create_items(db.actor,"medkit_army",3)
end
function add_2medkit_army()
  sak.create_items(db.actor,"medkit_army",2)
end
function add_1suhpay()
  sak.create_items(db.actor,"suhpay",1)
end
function add_1medkit_army()
  sak.create_items(db.actor,"medkit_army",1)
end
function add_medkit()
  sak.create_items(db.actor,"medkit",1)
end
function add_ammo_f1()
  sak.create_items(db.actor,"grenade_f1",1)
end
function add_ammo_f3()
  sak.create_items(db.actor,"grenade_f1",3)
end
function add_ammo_f5()
  sak.create_items(db.actor,"grenade_f1",5)
end
function add_ammo_rgd1()
  sak.create_items(db.actor,"grenade_rgd5",1)
end
function add_ammo_11_43x23_fmj()
  sak.create_items(db.actor,"ammo_11.43x23_fmj",1)
end
function add_2ammo_11_43x23_fmj()
  sak.create_items(db.actor,"ammo_11.43x23_fmj",2)
end
function add_3ammo_11_43x23_fmj()
  sak.create_items(db.actor,"ammo_11.43x23_fmj",3)
end
function add_ammo_11_43x23_hydro()
  sak.create_items(db.actor,"ammo_11.43x23_hydro",1)
end
function add_2ammo_11_43x23_hydro()
  sak.create_items(db.actor,"ammo_11.43x23_hydro",3)
end
function add_3ammo_11_43x23_hydro()
  sak.create_items(db.actor,"ammo_11.43x23_hydro",3)
end
function add_ammo_9x19_ap()
  sak.create_items(db.actor,"ammo_9x19_pbp",1)
end
function add_ammo_762x54r()
  sak.create_items(db.actor,"ammo_7.62x54r",1)
end
function add_ammo_762x54r2()
  sak.create_items(db.actor,"ammo_7.62x54r",2)
end
function add_ammo_5_7x28_ss1904()
  sak.create_items(db.actor,"ammo_5.7x28_ss190",4)
end
function add_2ammo_762x51_fmj()
  sak.create_items(db.actor,"ammo_7.62x51_fmj",2)
end
function add_1ammo_762x51_ap()
  sak.create_items(db.actor,"ammo_7.62x51_ap",1)
end
function add_3ammo_762x51_fmj()
  sak.create_items(db.actor,"ammo_7.62x51_fmj",3)
end
function add_2ammo_762x51_ap()
  sak.create_items(db.actor,"ammo_7.62x51_ap",2)
end
function add_military_outfit()
  sak.create_items(db.actor,"military_outfit",1)
end
function add_specops_outfit()
  sak.create_items(db.actor,"specops_outfit",1)
end
function add_wpn_abakan()
  sak.create_items(db.actor,"wpn_abakan",1)
end
function add_wpn_addon_1pso()
  sak.create_items(db.actor,"wpn_addon_1pso",1)
end
function add_wpn_fort_m1()
  sak.create_items(db.actor,"wpn_fort_m1",1)
end
function add_wpn_rpk74()
  sak.create_items(db.actor,"wpn_rpk74",1)
end
function add_wpn_gauss()
  sak.create_items(db.actor,"wpn_gauss",1)
end
function add_wpn_spas12()
  sak.create_items(db.actor,"wpn_spas12",1)
end

function saiga12c_snp_have()
  return sak.have_items_count("wpn_rem_870",1)~=false
end
function give_saiga12c_snp(first_speaker, second_speaker)
  for i,k in pairs(sak_inventory.rucksack) do
    if strpos(i, "wpn_rem_870",1,true) then
      local obj=client_obj(k[1])
      second_speaker:transfer_item(obj, first_speaker)
      amk.spawn_item_in_inv("ammo_12x70_buck",second_speaker)
      dialogs.relocate_item_section(second_speaker, i, "out")
      return
    end
  end
end
function spas12_have()
  return sak.have_items_count("wpn_spas12",1)~=false or sak.have_items_count("wpn_spas12_old",1)~=false or sak.have_items_count("wpn_spas12_m1",1)~=false or sak.have_items_count("wpn_spas12_m2",1)~=false
end

function give_spas12(first_speaker, second_speaker)
  for i,k in pairs(sak_inventory.rucksack) do
    if strpos(i, "wpn_spas",1,true) then
	  local obj=client_obj(k[1])
      second_speaker:transfer_item(obj, first_speaker)
      amk.spawn_item_in_inv("ammo_12x70_buck",second_speaker)
      dialogs.relocate_item_section(second_speaker, i, "out")
      return
    end
  end
end
function add_p90()
  sak.create_items(db.actor,"wpn_ump45",1)
end
function add_fn2000()
  sak.create_items(db.actor,"wpn_fn2000",1)
end
function add_2ammo_12x76_zhekan()
  sak.create_items(db.actor,"ammo_12x76_zhekan",2)
end
function add_3ammo_12x76_dart()
  sak.create_items(db.actor,"ammo_12x76_dart",3)
end
function add_3ammo_12x76_zhekan()
  sak.create_items(db.actor,"ammo_12x76_zhekan",3)
end
function add_5ammo_12x76_zhekan()
  sak.create_items(db.actor,"ammo_12x76_zhekan",5)
end
function add_2ammo_12x76_dart()
  sak.create_items(db.actor,"ammo_12x76_dart",2)
end
function add_4ammo_12x76_dart()
  sak.create_items(db.actor,"ammo_12x76_dart",4)
end
function add_5ammo_12x70_buck()
  sak.create_items(db.actor,"ammo_12x70_buck",5)
end
function add_10ammo_12x70_buck()
  sak.create_items(db.actor,"ammo_12x70_buck",10)
end
function add_protection_outfit()
  sak.create_items(db.actor,"protection_outfit",1)
end
function add_ammo_super_gauss()
  sak.create_items(db.actor,"ammo_super_gauss",3)
end
function add_2ammo_super_gauss()
  sak.create_items(db.actor,"ammo_super_gauss",2)
end
function add_ammo_gauss()
  sak.create_items(db.actor,"ammo_gauss",1)
end
function take_way_hospital_spot()
  local obj2 = g_sim:story_object(story_ids.esc_exit_to_hos_158)
  if obj2 then
    level.map_add_object_spot(obj2.id, "level_changer_self", "to_hospital")
  end
end
function give_docent_5pda()
  sak_inventory.release_actor_items("device_pda_npc",5)
end
function give_2mica()
  sak_inventory.release_actor_items("af_ameba_mica",2)
end
function give_3mica()
  sak_inventory.release_actor_items("af_ameba_mica",3)
end
function docent_5pda_have()
  return sak.have_items_count("device_pda_npc",5)~=false
end
function give_docent_chimera_kogot()
  sak_inventory.release_actor_items("mutant_chimera_kogot",5)
  sak_inventory.release_actor_items("device_pda_npc",25)
end
function docent_chimera_kogot_have()
  return sak.have_items_count("mutant_chimera_kogot",5)~=false and sak.have_items_count("device_pda_npc",25)~=false
end
function give_docent_hand_kontroler()
  sak_inventory.release_actor_items("mutant_hand_kontroler",1)
  sak_inventory.release_actor_items("device_pda_npc",30)
end
function docent_hand_kontroler_have()
  return sak.have_items_count("mutant_hand_kontroler",1)~=false and sak.have_items_count("device_pda_npc",30)~=false
end
function give_docent_psevdogigant_hand()
  sak_inventory.release_actor_items("mutant_psevdogigant_hand",2)
  sak_inventory.release_actor_items("device_pda_npc",15)
end
function docent_psevdogigant_hand_have()
  return sak.have_items_count("mutant_psevdogigant_hand",2)~=false and sak.have_items_count("device_pda_npc",15)~=false
end
function give_docent_krovosos_jaw()
  sak_inventory.release_actor_items("mutant_krovosos_jaw",2)
  sak_inventory.release_actor_items("device_pda_npc",20)
end
function docent_krovosos_jaw_have()
  return sak.have_items_count("mutant_krovosos_jaw",2)~=false and sak.have_items_count("device_pda_npc",20)~=false
end
function docent_have_done()
  if (db.actor:has_info("docent_detector1_done")) and(db.actor:has_info("docent_detector2_done")) and(db.actor:has_info("docent_detector3_done")) and(db.actor:has_info("docent_detector4_done")) then
  return false
  else
  return true
  end
end
function docent_have_have()
  if db.actor:has_info("sak_gold_fish_have") or db.actor:has_info("sak_find_seif_have") or db.actor:has_info("sak_repair_box_have") or db.actor:has_info("sak_reward_outfit_have") then
  return true
  else
  return false
  end
end
function give_medkit_scientic()
  vergas_lib.search_items("medkit_scientic",1,2)
end
function medkit_scientic_have()
  return vergas_lib.search_items("medkit_scientic",1,1)~= false
end
function medkit_scientic3_have()
  return vergas_lib.search_items("medkit_scientic",3,1)~= false
end
function give_3medkit_scientic()
  vergas_lib.search_items("medkit_scientic",3,2)
end
function medkit_scientic10_have()
  return vergas_lib.search_items("medkit_scientic",10,1)~= false
end
function give_10medkit_scientic()
  vergas_lib.search_items("medkit_scientic",10,2)
end
function give_2medkit_army()
  vergas_lib.search_items("medkit_army",2,2)
end
function medkit_army2_have()
  return vergas_lib.search_items("medkit_army",2,1)~= false
end
function give_medkit_army()
  vergas_lib.search_items("medkit_army",1,2)
end
function medkit_army_have()
  return vergas_lib.search_items("medkit_army",1,1)~= false
end
function medkit5_army_have()
  return vergas_lib.search_items("medkit_army",5,1)~= false
end
function give_5medkit_army()
  vergas_lib.search_items("medkit_army",5,2)
end
function medkit20_army_have()
  return vergas_lib.search_items("medkit_army",20,1)~= false
end
function give_20medkit_army()
  vergas_lib.search_items("medkit_army",20,2)
end
function give_20bandage()
  vergas_lib.search_items("bandage",20,2)
end
function bandage20_have()
  return vergas_lib.search_items("bandage",20,1)~= false
end
function give_5bandage()
  vergas_lib.search_items("bandage",5,2)
end
function bandage5_have()
  return vergas_lib.search_items("bandage",5,1)~= false
end
function give_10bandage()
  vergas_lib.search_items("bandage",10,2)
end
function bandage10_have()
  return vergas_lib.search_items("bandage",10,1)~= false
end
function give_5medkit()
  vergas_lib.search_items("medkit",5,2,true)
end
function medkit5_have()
  return vergas_lib.search_items("medkit",5,1,true)~= false
end
function give_3medkit()
  vergas_lib.search_items("medkit",3,2,true)
end
function medkit3_have()
  return vergas_lib.search_items("medkit",3,1,true)~= false
end
function give_2medkit()
  vergas_lib.search_items("medkit",2,2,true)
end
function medkit2_have()
  return vergas_lib.search_items("medkit",2,1,true)~= false
end
function medkit_have()
  return vergas_lib.search_items("medkit",1,1)~= false
end
function give_medkit()
  vergas_lib.search_items("medkit",1,2)
end
function give_antirad()
  vergas_lib.search_items("antirad",1,2)
end
function antirad_have()
  return vergas_lib.search_items("antirad",1,1)~= false
end
function give_2antirad()
  vergas_lib.search_items("antirad",2,2)
end
function have_2_antirad()
  return vergas_lib.search_items("antirad",2,1)~= false
end
function give_4antirad()
  vergas_lib.search_items("antirad",4,2)
end
function have_4_antirad()
  return vergas_lib.search_items("antirad",4,1)~= false
end
function give_fuzz_kolobok()
  sak_inventory.release_actor_items("af_dummy_kolobok", 1)
end
function fuzz_kolobok_have()
  return sak.have_items_count("af_dummy_kolobok",1,false,true)~=false
end
function give_dummy_3glassbeads()
  sak_inventory.release_actor_items("af_dummy_glassbeads",3)
end
function dummy_3glassbeads_have()
  return sak.have_items_count("af_dummy_glassbeads",3)~=false
end
function give_dummy_pellicle()
  sak_inventory.release_actor_items("af_dummy_pellicle", 1)
end
function dummy_pellicle_have()
  return sak.have_items_count("af_dummy_pellicle",1,false,true)~=false
end
function give_dummy_battery()
  sak_inventory.release_actor_items("af_dummy_battery", 1)
end
function dummy_battery_have()
  return sak.have_items_count("af_dummy_battery",1,false,true)~=false
end
function dummy_glassbeads_have()
  return sak.have_items_count("af_dummy_glassbeads",1,false,true)~=false
end
function give_dummy_glassbeads()
  sak_inventory.release_actor_items("af_dummy_glassbeads", 1)
end
function give_dummy_dummy()
  sak_inventory.release_actor_items("af_dummy_dummy", 1)
end
function dummy_dummy_have()
  return sak.have_items_count("af_dummy_dummy",1,false,true)~=false
end
function take_dummy_spring()
  sak.create_items(db.actor,"af_dummy_spring",1)
end
function take_dummy_art()
  local m=amk_vars.r_task_reward or 1
  sak.create_items(db.actor,table_dart[m],1)
end
function give_dummy_spring()
  sak_inventory.release_actor_items("af_dummy_spring", 1)
end
function dummy_spring_have()
  return sak.have_items_count("af_dummy_spring",1,false,true)~=false
end
function give_3rusty_sea_urchin(first_speaker, second_speaker)
  sak_inventory.release_actor_items("af_rusty_sea-urchin", 3)
end
function rusty_sea_urchin_3have()
  return sak.have_items_count("af_rusty_sea-urchin",3,false,true)~=false
end
function give_rusty_sea_urchin()
  sak_inventory.release_actor_items("af_rusty_sea-urchin", 1)
end
function rusty_sea_urchin_have()
  return sak.have_items_count("af_rusty_sea-urchin",1,false,true)~=false
end
function give_rusty_kristall()
  sak_inventory.release_actor_items("af_rusty_kristall", 1)
end
function rusty_kristall_have()
  return sak.have_items_count("af_rusty_kristall",1,false,true)~=false
end
function give_rusty_thorn()
  sak_inventory.release_actor_items("af_rusty_thorn", 1)
end
function rusty_thorn_have()
  return sak.have_items_count("af_rusty_thorn",1,false,true)~=false
end
function give_ameba_slug()
  sak_inventory.release_actor_items("af_ameba_slug", 1)
end
function ameba_slug_have()
  return sak.have_items_count("af_ameba_slug",1,false,true)~=false
end
function give_3rusty_thorn()
  sak_inventory.release_actor_items("af_rusty_thorn", 3)
end
function rusty_thorn_3have()
  return sak.have_items_count("af_rusty_thorn",3)~=false
end
function give_ameba_slime()
  sak_inventory.release_actor_items("af_ameba_slime", 1)
end
function ameba_slime_have()
  return sak.have_items_count("af_ameba_slime",1)~=false
end
function give_3ameba_slime()
  sak_inventory.release_actor_items("af_ameba_slime", 3)
end
function ameba_slime_3have()
  return sak.have_items_count("af_ameba_slime",3)~=false
end
function give_2fireball()
  sak_inventory.release_actor_items("af_fireball",2)
end
function fireball2_have()
  return sak.have_items_count("af_fireball",2)~=false
end
function give_fireball()
  sak_inventory.release_actor_items("af_fireball", 1)
end
function fireball_have()
  return sak.have_items_count("af_fireball",1)~=false
end
function give_night_star()
  sak_inventory.release_actor_items("af_night_star", 1)
end
function night_star_have()
  return sak.have_items_count("af_night_star",1,false,true)~=false
end
function electra_sparkler_have()
  return sak.have_items_count("af_electra_sparkler",1)~=false
end
function give_electra_sparkler()
  sak_inventory.release_actor_items("af_electra_sparkler", 1)
end
function electra_sparkler2_have()
  return sak.have_items_count("af_electra_sparkler",2)~=false
end
function give_2electra_sparkler()
  sak_inventory.release_actor_items("af_electra_sparkler", 2)
end

function take_electra_sparkler_dyn5()
  sak.create_items(db.actor,"af_electra_sparkler_dyn5d",1)
end
function give_dummy_buliz()
  sak_inventory.release_actor_items("af_dummy_buliz", 1)
end
function dummy_buliz_have()
  return sak.have_items_count("af_dummy_buliz",1)~=false
end
function fox_pay_money(actor, npc)
  treasure_manager.get_treasure_manager():give_treasure("esc_secret_truck_goods")
end
function have_cheques()
  return sak.have_items_count("bearer_cheque",1,true)~=false or sak.have_items_count("2bearer_cheque",1)~=false
end
function have_cheque()
  return sak.have_items_count("bearer_cheque",1,true)~=false
end
function give_cheque()
  sak_inventory.release_actor_items("bearer_cheque", 1)
end
function have_2_cheque()
  return sak.have_items_count("bearer_cheque",2)~=false or sak.have_items_count("2bearer_cheque",1)~=false
end
function have_4_cheque()
  return sak.have_items_count("bearer_cheque",4)~=false or sak.have_items_count("2bearer_cheque",2)~=false or (sak.have_items_count("bearer_cheque",2)~=false and sak.have_items_count("2bearer_cheque",1)~=false)
end
function have_2cheque()
  return sak.have_items_count("bearer_cheque",2)~=false
end
function have_cheque2()
  return sak.have_items_count("2bearer_cheque",1)~=false
end
function have_kulinar_cheque()
  return sak.have_items_count("bearer_cheque",1)~=false and vergas_lib.search_items("ammo_12x70_buck",300,1)~= false
end
function give_cheques()
  if sak.have_items_count("bearer_cheque",1) then
  sak_inventory.release_actor_items("bearer_cheque", 1)
  elseif sak.have_items_count("2bearer_cheque",1) then
  sak_inventory.release_actor_items("2bearer_cheque", 1)
  end
end
function give_2_cheque()
  if sak.have_items_count("bearer_cheque",2) then
  sak_inventory.release_actor_items("bearer_cheque", 2)
  elseif sak.have_items_count("2bearer_cheque",1) then
  sak_inventory.release_actor_items("2bearer_cheque", 1)
  end
end
function give_4_cheque()
  if sak.have_items_count("bearer_cheque",4) then
  sak_inventory.release_actor_items("bearer_cheque", 4)
  elseif sak.have_items_count("2bearer_cheque",2) then
  sak_inventory.release_actor_items("2bearer_cheque", 2)
  elseif sak.have_items_count("2bearer_cheque",1) and sak.have_items_count("bearer_cheque",2) then
  sak_inventory.release_actor_items("bearer_cheque", 2)
  sak_inventory.release_actor_items("2bearer_cheque", 1)
  end
end
function give_cheque2()
  sak_inventory.release_actor_items("2bearer_cheque", 1)
end
function give_kulinar_cheque()
  sak_inventory.release_actor_items("bearer_cheque", 1)
  vergas_lib.search_items("ammo_12x70_buck",300,2)
end
function give_half_vodka()
  --local count=math.ceil((#sak_inventory.eatable["vodka"])/2)
  local count=math.floor((#sak_inventory.eatable["vodka"])/2)
  if count>0 then
  sak_inventory.release_actor_items("vodka", count)
  end
end
  local dist_vodka_from_mil = 50
function out_vodka_from_mil()
  for a=100,45000,1 do
  local obj = g_sim:object(a)
    if obj then
      local posobj = obj.position
      local actorpos = db.actor:position()
      local npc_name = obj:name()
      if posobj:distance_to(actorpos) < dist_vodka_from_mil then
        if (obj.parent_id~=0 and (obj.parent_id==nil or obj.parent_id==BAD_OBJ_ID or g_sim:object(obj.parent_id):section_name()=="inventory_box" or g_sim:object(obj.parent_id):section_name()=="m_inventory_box" or g_sim:object(obj.parent_id):section_name()=="rucksack")) and (strpos(obj:section_name(),"vodka",1,true)) then
        g_sim:release(obj,true)
        end
      end
    end
  end
end
  local dist_wpn_from_mil = 50
function out_wpn_from_mil()
  for a=100,MAX_OBJ_ID do
  local obj = g_sim:object(a)
    if obj then
      local posobj = obj.position
      local actorpos = db.actor:position()
      local npc_name = obj:name()
      if posobj:distance_to(actorpos) < dist_wpn_from_mil then
        if strpos(obj:section_name(),"wpn_",1,true) and (obj.parent_id~=0 and (obj.parent_id==nil or obj.parent_id==BAD_OBJ_ID or (g_sim:object(obj.parent_id):section_name()=="inventory_box" or g_sim:object(obj.parent_id):section_name()=="m_inventory_box" or g_sim:object(obj.parent_id):section_name()=="rucksack") and g_sim:object(obj.parent_id) and g_sim:object(obj.parent_id):name()~="mil_lager_spec_hran")) then
        g_sim:release(obj,true)
        end
      end
    end
  end
end

function give_vodka()
  sak_inventory.release_actor_items("vodka", 1)
end
function give_2vodka()
  sak_inventory.release_actor_items("vodka",2)
end
function give_3vodka()
  sak_inventory.release_actor_items("vodka",3)
end
function give_4vodka()
  sak_inventory.release_actor_items("vodka",4)
end
function give_5vodka()
  sak_inventory.release_actor_items("vodka",5)
end
function give_7vodka()
  sak_inventory.release_actor_items("vodka",7)
end
function give_8vodka()
  sak_inventory.release_actor_items("vodka",8)
end
function give_10vodka()
  sak_inventory.release_actor_items("vodka",10)
end
function give_20vodka()
  sak_inventory.release_actor_items("vodka",20)
end
function give_15vodka()
  sak_inventory.release_actor_items("vodka",15)
end
function give_40vodka()
  sak_inventory.release_actor_items("vodka",40)
end

function have_kuz_vodka()
  local days = math.ceil(sak.day_money/15)
if days>5 then days=5 end
  return sak.have_items_count("vodka",days)~=false
end
function give_kuz_vodka()
  local days = math.ceil(sak.day_money/15)
if days>5 then days=5 end
  sak_inventory.release_actor_items("vodka",days)
end

function text_kuz_vodka()
  local days = math.ceil(sak.day_money/15)
  local text="ƒавай пока бутылку, а там видно будет..."
  if days==2 then text="ƒавай пару бутылок пока, а там видно будет..."
  elseif days==3 then text="ƒавай три бутылки, что то давно не привозили аптечки..."
  elseif days==4 then text="ƒавай четыре, аптечек в батальоне почти не осталось на складе..."
  elseif days>=5 then text="ƒавай п€ть пузырей, аптечки в жутком дефиците..."
  end
  db.actor:give_talk_message("%c[255,216,186,140]"..text,"ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function text_sher_vodka()
  local days = math.ceil(sak.day_money/15)
  local text="ƒавай пока бутылку, получишь гранатку... јга?"
  if days==2 then text="ƒавай пару бутылок пока, а там видно будет..."
  elseif days==3 then text="ƒавай три бутылки, что то давно гранат не привозили..."
  elseif days==4 then text="ƒавай четыре, гранат почти не осталось на складе..."
  elseif days>=5 then text="ƒавай п€ть пузырей, гранаты в жутком дефиците..."
  end
  db.actor:give_talk_message("%c[255,216,186,140]"..text,"ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function may_month()
  local days = sak.day_money
  return days<25
end
function not_may_month()
  local days = sak.day_money
  return days>=25
end
function not_may_2month()
  local days = sak.day_money
  return days>=65
end
function have_vodka()
  return sak.have_items_count("vodka",1)~=false
end
function have_2vodka()
  return sak.have_items_count("vodka",2)~=false
end
function have_3vodka()
  return sak.have_items_count("vodka",3)~=false
end
function have_4vodka()
  return sak.have_items_count("vodka",4)~=false
end
function have_5vodka()
  return sak.have_items_count("vodka",5)~=false
end
function have_7vodka()
  return sak.have_items_count("vodka",7)~=false
end
function have_8vodka()
  return sak.have_items_count("vodka",8)~=false
end
function have_10vodka()
  return sak.have_items_count("vodka",10)~=false
end
function have_15vodka()
  return sak.have_items_count("vodka",15)~=false
end
function have_20vodka()
  return sak.have_items_count("vodka",20)~=false
end
function have_40vodka()
  return sak.have_items_count("vodka",40)~=false
end
function have_20_ammo_buck()
  return vergas_lib.search_items("ammo_12x70_buck",20,1)~= false
end
function give_20_ammo_buck()
  vergas_lib.search_items("ammo_12x70_buck",20,2)
end
function have_30_ammo_buck()
  return vergas_lib.search_items("ammo_12x70_buck",30,1)~= false
end
function give_30_ammo_buck()
  vergas_lib.search_items("ammo_12x70_buck",30,2)
end
function have_50_ammo_buck()
  return vergas_lib.search_items("ammo_12x70_buck",50,1)~= false
end
function give_50_ammo_buck()
  vergas_lib.search_items("ammo_12x70_buck",50,2)
end
function have_20_ammo_zhekan()
  return vergas_lib.search_items("ammo_12x76_zhekan",20,1)~= false
end
function give_20_ammo_zhekan()
  vergas_lib.search_items("ammo_12x76_zhekan",20,2)
end
function have_30_ammo_zhekan()
  return vergas_lib.search_items("ammo_12x76_zhekan",30,1)~= false
end
function give_30_ammo_zhekan()
  vergas_lib.search_items("ammo_12x76_zhekan",30,2)
end
function have_50_ammo_zhekan()
  return vergas_lib.search_items("ammo_12x76_zhekan",50,1)~= false
end
function give_50_ammo_zhekan()
  vergas_lib.search_items("ammo_12x76_zhekan",50,2)
end
function have_100_ammo_zhekan()
  return vergas_lib.search_items("ammo_12x76_zhekan",100,1)~= false
end
function give_100_ammo_zhekan()
  vergas_lib.search_items("ammo_12x76_zhekan",100,2)
end
function have_30_ammo_dart()
  return vergas_lib.search_items("ammo_12x76_dart",30,1)~= false
end
function give_30_ammo_dart()
  vergas_lib.search_items("ammo_12x76_dart",30,2)
end
function give_drops()
  sak_inventory.release_actor_items("af_drops", 1)
end
function drops_have()
  return sak.have_items_count("af_drops",1)~=false
end
function give_blood()
  sak_inventory.release_actor_items("af_blood", 1)
end
function blood_have()
  return sak.have_items_count("af_blood",1)~=false
end
function give_2blood()
  sak_inventory.release_actor_items("af_blood", 2)
end
function blood2_have()
  return sak.have_items_count("af_blood",2)~=false
end
function take_2drops()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_drops_dyn"..rand.."d",2)
end

function take_drops_dyn()
  sak.create_items(db.actor,"af_drops_dyn4d",1)
end

function take_2blood()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_blood_dyn"..rand.."d",2)
end
function give_electra_flash()
  sak_inventory.release_actor_items("af_electra_flash", 1)
end
function electra_flash_have()
  return sak.have_items_count("af_electra_flash",1)~=false
end
function give_mincer_meat()
  sak_inventory.release_actor_items("af_mincer_meat", 1)
end
function mincer_meat_have()
  return sak.have_items_count("af_mincer_meat",1)~=false
end
function give_vyvert()
  sak_inventory.release_actor_items("af_vyvert", 1)
end
function vyvert_have()
  return sak.have_items_count("af_vyvert",1)~=false
end
function give_2vyvert()
  sak_inventory.release_actor_items("af_vyvert", 2)
end
function vyvert2_have()
  return sak.have_items_count("af_vyvert",2)~=false
end

function take_2vyvert()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_vyvert_dyn"..rand.."d",2)
end
function give_cristall_flower()
  sak_inventory.release_actor_items("af_cristal_flower", 1)
end
function cristall_flower_have()
  return sak.have_items_count("af_cristal_flower",1)~=false
end
function give_medusa()
  sak_inventory.release_actor_items("af_medusa", 1)
end
function medusa_have()
  return sak.have_items_count("af_medusa",1)~=false
end
function give_3medusa()
  sak_inventory.release_actor_items("af_medusa", 3)
end
function medusa_3have()
  return sak.have_items_count("af_medusa",3)~=false
end
function take_medusa()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_medusa_dyn"..rand.."d",1)
end
function take_2medusa()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_medusa_dyn"..rand.."d",2)
end
function give_10medusa()
  sak_inventory.release_actor_items("af_medusa", 10)
end
function medusa10_have()
  return sak.have_items_count("af_medusa",10)~=false
end
function give_7medusa()
  sak_inventory.release_actor_items("af_medusa", 7)
end
function medusa7_have()
  return sak.have_items_count("af_medusa",7)~=false
end
function give_gravi()
  sak_inventory.release_actor_items("af_gravi", 1)
end
function gravi_have()
  return sak.have_items_count("af_gravi",1)~=false
end
function take_gravi_dyn()
  sak.create_items(db.actor,"af_gravi_dyn5d",1)
end
function add_military_outfit()
  sak.create_items(db.actor,"military_outfit",1)
end
function give_agr_black_box()
  sak_inventory.release_actor_items("agr_black_box", 1)
end
function agr_black_box_have()
  return sak.have_items_count("agr_black_box",1)~=false
end
function add_vodka()
  sak.create_items(db.actor,"vodka",1)
end
function add_2vodka()
  sak.create_items(db.actor,"vodka",2)
end
function add_3vodka()
  sak.create_items(db.actor,"vodka",3)
end
function add_4vodka()
  sak.create_items(db.actor,"vodka",4)
end
function add_5vodka()
  sak.create_items(db.actor,"vodka",5)
end
function add_6vodka()
  sak.create_items(db.actor,"vodka",6)
end
function add_7vodka()
  sak.create_items(db.actor,"vodka",7)
end
function add_8vodka()
  sak.create_items(db.actor,"vodka",8)
end
function add_10vodka()
  sak.create_items(db.actor,"vodka",10)
end
function add_15vodka()
  sak.create_items(db.actor,"vodka",15)
end
function add_2medkit()
  sak.create_items(db.actor,"medkit",2)
end
function add_3medkit()
  sak.create_items(db.actor,"medkit",3)
end
function add_4medkit()
  sak.create_items(db.actor,"medkit",4)
end
function add_5medkit()
  sak.create_items(db.actor,"medkit",5)
end
function add_10medkit()
  sak.create_items(db.actor,"medkit",10)
end
function add_15medkit()
  sak.create_items(db.actor,"medkit",15)
end
function add_saiga()
  sak.create_items(db.actor,"wpn_saiga12c",1)
end
function add_bm()
  sak.create_items(db.actor,"wpn_bm16_full",1)
end
function add_sid_winchester()
  sak.create_items(db.actor,"wpn_winchester_m1",1)
end
function add_groza()
  sak.create_items(db.actor,"wpn_groza",1)
end
function add_val()
  sak.create_items(db.actor,"wpn_val",1)
end
--дл€ бартера с Ѕарменом
function add_wpn_usp()
  sak.create_items(db.actor,"wpn_usp",1)
end
function add_wpn_sig550()
  sak.create_items(db.actor,"wpn_sig550",1)
end

function add_wpn_ak47()
  sak.create_items(db.actor,"wpn_ak47",1)
end
function add_wpn_ak74_m5()
  sak.create_items(db.actor,"wpn_ak74_m5",1)
end
function add_wpn_ak47_old()
  sak.create_items(db.actor,"wpn_ak47_old",1)
end
function add_toz()
  sak.create_items(db.actor,"wpn_toz34",1)
end
function add_5ammo_9x39_pab9()
  sak.create_items(db.actor,"ammo_9x39_pab9",5)
end
function add_4ammo_9x39_sp5()
  sak.create_items(db.actor,"ammo_9x39_sp5",4)
end
function add_3ammo_9x39_ap()
  sak.create_items(db.actor,"ammo_9x39_ap",3)
end
function add_2ammo_9x39_ap()
  sak.create_items(db.actor,"ammo_9x39_ap",2)
end
function add_5ammo_9x39_ap()
  sak.create_items(db.actor,"ammo_9x39_ap",3)
end
function add_5ammo_556x45_ss190()
  sak.create_items(db.actor,"ammo_5.56x45_ss190",5)
end
function add_4ammo_556x45_ss190()
  sak.create_items(db.actor,"ammo_5.56x45_ss190",4)
end
function add_100_ammo_556x45_ss190()
  local npc=db.actor
  for i=1,3 do
    g_sim:create("ammo_5.56x45_ss190",npc:position(),
    npc:level_vertex_id(),
    npc:game_vertex_id(),
    npc:id())
  end
  g_sim:create_ammo("ammo_5.56x45_ss190", npc:position(),
    npc:level_vertex_id(),
    npc:game_vertex_id(),
    npc:id(),10)
  local task_texture, task_rect=get_texture_info("ui_iconsTotal_found_thing")
  local news_text ="%c[255,1,255,1]"..game.translate_string("general_in_item").."\\n".."%c[default] 100 патронов 5.56x45_ss190."
  npc:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
end
function add_50_ammo_556x45_ap()
  local npc=db.actor
  g_sim:create("ammo_5.56x45_ap",npc:position(),
    npc:level_vertex_id(),
    npc:game_vertex_id(),
    npc:id())
  g_sim:create_ammo("ammo_5.56x45_ap", npc:position(),
    npc:level_vertex_id(),
    npc:game_vertex_id(),
    npc:id(),20)
  local task_texture, task_rect=get_texture_info("ui_iconsTotal_found_thing")
  local news_text ="%c[255,1,255,1]"..game.translate_string("general_in_item").."\\n".."%c[default] 50 патронов 5.56x45_ap."
  npc:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
end
function add_3ammo_556x45_ap()
  sak.create_items(db.actor,"ammo_5.56x45_ap",3)
end
function add_2ammo_556x45_ap()
  sak.create_items(db.actor,"ammo_5.56x45_ap",2)
end
function add_10ammo_556x45_ap()
  sak.create_items(db.actor,"ammo_5.56x45_ap",10)
end
function add_3ammo_9x18_fmj()
  sak.create_items(db.actor,"ammo_9x18_fmj",3)
end
function add_2ammo_545x39_ap()
  sak.create_items(db.actor,"ammo_5.45x39_ap",2)
end
function add_ammo_545x39_ap()
  sak.create_items(db.actor,"ammo_5.45x39_ap",1)
end
function add_10ammo_545x39_ap()
  sak.create_items(db.actor,"ammo_5.45x39_ap",10)
end
function add_5ammo_5_45_fmj()
  sak.create_items(db.actor,"ammo_5.45x39_fmj",5)
end
function add_3ammo_5_45_fmj()
  sak.create_items(db.actor,"ammo_5.45x39_fmj",3)
end
function add_4ammo_5_45_fmj()
  sak.create_items(db.actor,"ammo_5.45x39_fmj",4)
end
function add_ammo_5_45_fmj()
  sak.create_items(db.actor,"ammo_5.45x39_fmj",1)
end
function add_ammo_5_45_fmj2()
  sak.create_items(db.actor,"ammo_5.45x39_fmj",2)
end
function add_ammo_7_62_fmj3()
  sak.create_items(db.actor,"ammo_7.62x39_fmj",3)
end
function add_ammo_7_62_fmj2()
  sak.create_items(db.actor,"ammo_7.62x39_fmj",2)
end
function add_ammo_7_62_fmj4()
  sak.create_items(db.actor,"ammo_7.62x39_fmj",4)
end
function add_ammo_7_62_fmj()
  sak.create_items(db.actor,"ammo_7.62x39_fmj",1)
end
function add_ammo_7_62_ap3()
  sak.create_items(db.actor,"ammo_7.62x39_ap",3)
end
function add_7ammo_7_62_ap()
  sak.create_items(db.actor,"ammo_7.62x39_ap",7)
end
function add_ammo_7_62_ap()
  sak.create_items(db.actor,"ammo_7.62x54_ap",1)
end
function add_ammo_7_62_ap2()
  sak.create_items(db.actor,"ammo_7.62x54_ap",2)
end
function add_ammo_7_62_ap5()
  sak.create_items(db.actor,"ammo_7.62x54_ap",5)
end
function add_ammo_m2092()
  sak.create_items(db.actor,"ammo_m209",2)
end
function add_ammo_m2093()
  sak.create_items(db.actor,"ammo_m209",3)
end
function add_ammo_m2094()
  sak.create_items(db.actor,"ammo_m209",4)
end
function add_ammo_m2095()
  sak.create_items(db.actor,"ammo_m209",5)
end
function add_ammo_m2098()
  sak.create_items(db.actor,"ammo_m209",8)
end
function add_ammo_m20910()
  sak.create_items(db.actor,"ammo_m209",10)
end
function add_ammo_rgd2()
  sak.create_items(db.actor,"grenade_rgd5",2)
end
function add_ammo_rgd3()
  sak.create_items(db.actor,"grenade_rgd5",3)
end
function add_ammo_rgd4()
  sak.create_items(db.actor,"grenade_rgd5",4)
end
function add_ammo_rgd5()
  sak.create_items(db.actor,"grenade_rgd5",5)
end
function add_ammo_rgd8()
  sak.create_items(db.actor,"grenade_rgd5",8)
end
function add_ammo_12x70_buck()
  sak.create_items(db.actor,"ammo_12x70_buck",1)
end
function add_ammo_12x70_buck2()
  sak.create_items(db.actor,"ammo_12x70_buck",2)
end
function add_ammo_12x70_buck3()
  sak.create_items(db.actor,"ammo_12x70_buck",3)
end
function add_ammo_12x70_buck4()
  sak.create_items(db.actor,"ammo_12x70_buck",4)
end
function add_ammo_12x70_buck5()
  sak.create_items(db.actor,"ammo_12x70_buck",5)
end
function add_greens_kolbasa()
  local count=(nlc_vars.greens_kolbasa or 0)+1
  nlc_vars.greens_kolbasa = count
  sak.create_items(db.actor,"green_kolbasa",1)
end
function add_greens_kolbasa2()
  local count=(nlc_vars.greens_kolbasa or 0)+2
  nlc_vars.greens_kolbasa = count
  sak.create_items(db.actor,"green_kolbasa",2)
end
function add_greens_kolbasa3()
  local count=(nlc_vars.greens_kolbasa or 0)+3
  nlc_vars.greens_kolbasa = count
  sak.create_items(db.actor,"green_kolbasa",3)
end
function add_greens_kolbasa4()
  local count=(nlc_vars.greens_kolbasa or 0)+4
  nlc_vars.greens_kolbasa = count
  sak.create_items(db.actor,"green_kolbasa",4)
end
function add_greens_kolbasa5()
  local count=(nlc_vars.greens_kolbasa or 0)+5
  nlc_vars.greens_kolbasa = count
  sak.create_items(db.actor,"green_kolbasa",5)
end
function give_strelok_pda()
  sak_inventory.release_actor_items("strelok_pda",1)
end
function strelok_pda_have()
  return sak.have_items_count("strelok_pda",1)~=false
end
function give_rad_kontainer()
  sak_inventory.release_actor_items("inventory_sakbox_rad",1)
end
function rad_kontainer_have()
  return sak.have_items_count("inventory_sakbox_rad",1)~=false
end
function scintist_pda_have()
  return sak.have_items_count("scaintist_pda",1)~=false
end
function give_scintist_pda()
  sak_inventory.release_actor_items("scaintist_pda",1)
end
function give_bar_ivancov_playboy()
  sak_inventory.release_actor_items("playboy10",1)
end
function bar_ivancov_playboy_have()
  return sak.have_items_count("playboy10",1)~=false
end
function strelok_pda2_have()
  return sak.have_items_count("af_dummy_green_medusa",1)~=false
end
function give_strelok_pda2()
  sak_inventory.release_actor_items("af_dummy_green_medusa",1)
end
function give_chimera_kogot()
  sak_inventory.release_actor_items("mutant_chimera_kogot",3)
end
function chimera_kogot_have()
  return sak.have_items_count("mutant_chimera_kogot",3)~=false
end
function give_five_teil()
  sak_inventory.release_actor_items("mutant_dog_tail",5)
end
function five_teil_have()
  return sak.have_items_count("mutant_dog_tail",5)~=false
end
function escape_lager_volk_document_have()
  return sak.have_items_count("sak_document2",1)~=false
end
function escape_lager_volk_document_not_have()
  return sak.have_items_count("sak_document2",1)==false
end
function give_sescape_lager_volk_document()
  sak_inventory.release_actor_items("sak_document2", 1)
end
function rad_document_have()
  return sak.have_items_count("sak_document",1)~=false
end
function rad_document_not_have()
  return sak.have_items_count("sak_document",1)==false
end
function give_rad_document()
  sak_inventory.release_actor_items("sak_document", 1)
end
function take_agr_saiga()
  sak.create_items(db.actor,"wpn_saiga12c_m1",1)  
end
function give_yan_scientist_teleport_01()
  nlc_vars.telepribor = nil
  sak.create_items(db.actor,"sak_resiver_yantar",1)
end
function give_yan_scientist_teleport_02()
  nlc_vars.telepribor = nil
  sak.create_items(db.actor,"sak_resiver2_yantar",1)
end
function skaner_1_in_place()
  local scan=false
  local id=nlc_vars.telepribor or -1
  local obj=g_sim:object(id)
  if obj then
    local map=g_sim:level_name(game_graph():vertex(obj.m_game_vertex_id):level_id())
    local pos=obj.position
    if map=="l07_military" and (pos.y>-7 and pos.x<-243 and pos.x>-253 and pos.z<302 and pos.z>290) then
    scan=true
    end
  end
  return scan
end
function skaner_1_out_place()
  return not skaner_1_in_place()
end
function skaner_2_in_place()
  local scan=false
  local id=nlc_vars.telepribor or -1
  local obj=g_sim:object(id)
  if obj then
    local map=g_sim:level_name(game_graph():vertex(obj.m_game_vertex_id):level_id())
    local pos=obj.position
    if map=="l01_escape" and (pos.y>28 and pos.x<82 and pos.x>30 and pos.z<162 and pos.z>152) then
    scan=true
    end
  end
  return scan
end
function skaner_2_out_place()
  return not skaner_2_in_place()
end
function mil_volk_resiver_have()
  return sak.have_items_count("sak_resiver",1)~=false
end
function give_mil_volk_resiver()
  sak_inventory.release_actor_items("sak_resiver", 1)
end
function notebook_have()
  return sak.have_items_count("note-book",1)~=false
end
function give_notebook(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "note-book", "out")
end
function give_doktor_book()
  sak_inventory.release_actor_items("sak_book4", 1)
end
function dummy_battery_red_have()
  return sak.have_items_count("af_red_dummy_battery",1)~=false
end
function give_dummy_battery_red()
  sak_inventory.release_actor_items("af_red_dummy_battery", 1)
end
function dummy_pellicle_red_have()
  return sak.have_items_count("af_red_dummy_pellicle",1)~=false
end
function give_dummy_pellicle_red()
  sak_inventory.release_actor_items("af_red_dummy_pellicle", 1)
end
function simbiont_have()
  return sak.have_items_count("af_dummy_simbion",1)~=false
end
function give_simbiont()
  sak_inventory.release_actor_items("af_dummy_simbion", 1)
end
function dummy_spring_red_have()
  return sak.have_items_count("af_red_dummy_spring",1)~=false
end
function give_dummy_spring_red()
  sak_inventory.release_actor_items("af_red_dummy_spring", 1)
end
function take_dummy_spring_red()
  sak.create_items(db.actor,"af_red_dummy_spring",1)
end
function take_soul()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_soul_dyn"..rand.."d",1)
end
function diplomat_have()
  return sak.have_items_count("diplomat",1)~=false
end
function give_diplomat()
  sak_inventory.release_actor_items("diplomat", 1)
end
function take_mica()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_ameba_mica_dyn"..rand.."d",1)
end
function computer_have()
  return sak.have_items_count("computer",1)~=false
end
function give_computer()
  sak_inventory.release_actor_items("computer", 1)
end
function take_moonlight()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_electra_moonlight_dyn"..rand.."d",1)
end
function take_moonlight_dyn()
  sak.create_items(db.actor,"af_electra_moonlight_dyn4d",1)
end
--[[function take_sescape_lager_volk_ak()
  sak.create_items(db.actor,"wpn_ak74u_old",1)
end--]]
function add_wpn_ak74()
  sak.create_items(db.actor,"wpn_ak74",1)
end
function esc_petruha_toz_have()
  return sak.have_items_count("wpn_toz34",1)~=false
end
function give_esc_petruha_toz(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "wpn_toz34", "out")
  second_speaker:set_relation(game_object.friend, first_speaker)
end
function give_yan_kruglov_green_art()
  local rand=amk_vars.r_treas_items or 1
  local arts={"af_dummy_green_blood","af_dummy_green_vyvert","af_dummy_green_medusa"}
  sak_inventory.release_actor_items(arts[rand], 1)
end
function take_new_decoder()
  sak.create_items(db.actor,"detector_elite_sak",1)
end
function take_playboy()
  sak.create_items(db.actor,"playboy_12",1)
end
function yan_kruglov_green_art_have()
  local rand=amk_vars.r_treas_items or 1
  local arts={"af_dummy_green_blood","af_dummy_green_vyvert","af_dummy_green_medusa"}
  return sak.have_items_count(arts[rand],1)~=false
end
function give_playboy()
  sak_inventory.release_actor_items("playboy_12", 1)
end
function esc_shustryi_medusa_have()
  return sak.have_items_count("af_medusa",1)~=false
end
function give_esc_shustryi_medusa(first_speaker, second_speaker)
  sak_inventory.release_actor_items("af_medusa", 1)
  second_speaker:set_relation(game_object.friend, first_speaker)
end
function esc_shustryi_outfit_have()
  return sak.have_items_count("outfit_bandit_m1",1)~=false
end
function give_esc_shustryi_outfit()
  sak_inventory.release_actor_items("outfit_bandit_m1", 1)
end
function take_item_esc_shustryi_outfit()
  sak.create_items(db.actor,"detector_simple",1)
end
function add_spot_to_hospital()
  db.actor:give_info_portion("info_way158a")
  local obj2 = g_sim:story_object(story_ids.esc_exit_to_hos_158)
  level.map_add_object_spot_ser(obj2.id, "level_changer_self", "to_hospital")
end
function add_spot_x16()
  local obj2 = g_sim:story_object(story_ids.exit_to_brainlab_01)
  if obj2 then
  level.map_add_object_spot_ser(obj2.id, "level_changer_self", "√де-то тут вход в ’16")
  end
end
function gar_dram_novice_mp5_m1_have()
  return sak.have_items_count("wpn_mp5_m1",1)~=false
end
function give_gar_dram_novice_mp5_m1(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "wpn_mp5_m1", "out")
  dialogs.relocate_item_section(second_speaker, "ammo_9x18_fmj", "out")
  second_speaker:set_relation(game_object.friend, first_speaker)
end

function gar_hellcar_outfit_have()
  return sak.have_items_count("stalker_outfit_m3",1)~=false
end
function give_gar_hellcar_outfit(first_speaker, second_speaker)
  sak_inventory.release_actor_items("stalker_outfit_m3", 1)
  second_speaker:set_relation(game_object.friend, first_speaker)
end
function agr_krot_PDA_have()
  return sak.have_items_count("agroprom_pda",1)~=false
end
function give_agr_krot_PDA(first_speaker, second_speaker)
  sak_inventory.release_actor_items("agroprom_pda", 1)
  second_speaker:set_relation(game_object.friend, first_speaker)
end
function add_gift_ivancov()
  sak.create_items(db.actor,"ammo_7.62x39_ap",2)
  sak.create_items(db.actor,"medkit_army",2)
  sak.create_items(db.actor,"ammo_vog-25",5)
end
function gar_dolg_flesh_eye_have()
  return sak.have_items_count("mutant_flesh_eye",4)~=false
end

function give_gar_dolg_flesh_eye(first_speaker, second_speaker)
  sak_inventory.release_actor_items("mutant_flesh_eye",4)
  second_speaker:set_relation(game_object.friend, first_speaker)
end

function gar_dolg_krovosos_jaw_have()
  return sak.have_items_count("mutant_krovosos_jaw",3)~=false
end

function give_gar_dolg_krovosos_jaw()
  sak_inventory.release_actor_items("mutant_krovosos_jaw",3)
end

function gar_dolg_psevdodog_tail_have()
  return sak.have_items_count("mutant_psevdodog_tail",5)~=false
end

function give_gar_dolg_psevdodog_tail()
  sak_inventory.release_actor_items("mutant_psevdodog_tail",5)
end
function add_gar_dolg_bring()
  sak.create_items(db.actor,"af_rusty_sea-urchin_dyn4d",1)
end

function bar_dolg_base_guard_art_have()
  local rand=amk_vars.r_treas_items or 1
  local arts={"af_dummy_green_medusa","af_dummy_green_blood","af_dummy_green_vyvert"}
  return sak.have_items_count(arts[rand],1)~=false
end
function take_green_vyvert()
  local rand=amk_vars.r_treas_items or 1
  local arts={"af_dummy_green_medusa","af_dummy_green_blood","af_dummy_green_vyvert"}
  sak.create_items(db.actor,arts[rand],1)
end
function give_bar_dolg_base_guard_art(first_speaker, second_speaker)
  local rand=amk_vars.r_treas_items or 1
  local arts={"af_dummy_green_medusa","af_dummy_green_blood","af_dummy_green_vyvert"}
  sak_inventory.release_actor_items(arts[rand],1)
  second_speaker:set_relation(game_object.friend, first_speaker)
end
function abuse_to_fox(first_speaker, second_speaker)
  second_speaker:set_relation(game_object.neutral, first_speaker)
  db.actor:give_info_portion("escape_fox_abuse")
end
function fox_pay_money()
  --local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_rusty_thorn_dyn4d",1)
end
function esc_bridge_vodka_have()
  return sak.have_items_count("vodka",10)~=false
end
function mil_lukash_dolg_nagrad()
  sak.create_items(db.actor,"af_dummy_battery",1)
end
function give_esc_bridge_vodka()
  sak_inventory.release_actor_items("vodka",10)
end
function give_esc_bridge_ammo()
  sak.create_items(db.actor,"ammo_5.45x39_ap",3)
end
function esc_fox_medkit_have()
  return vergas_lib.search_items("medkit",10,1)~= false
end
function give_esc_fox_medkit()
  vergas_lib.search_items("medkit",10,2)
end

function redcatcher_albom_have()
  return sak.have_items_count("redcatcher_albom",1)~=false
end
function give_redcatcher_albom()
  sak_inventory.release_actor_items("redcatcher_albom",1)
end
function take_redcatcher_albom()
  sak.create_items(db.actor,"redcatcher_albom",1)
end
function off_agroprom_box()
  local obj=g_sim:story_object(story_ids.agr_quest_case_02)
  if obj then
    g_sim:release(obj)
  end
end

--[[function take_mil_trader_ammo()
  local npc=db.actor
  local obj=alife():create("inventory_sakbox_mil_svoboda", npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
  local pk = get_netpk(obj,1)
  local data = pk:get()
  data.custom_data = table_mayatniks[lua_random(1,#table_mayatniks)]
  pk:set(data)
  sak.relocate_item(npc, "in", "inventory_sakbox_mil_svoboda", 1)
end--]]

function give_esc_trader_ammo()
  sak_inventory.release_actor_items("inventory_sakbox_mil_svoboda", 1)
end
function add_esc_trader_ammo()
  sak.create_items(db.actor,"inventory_sakbox_01",1)
end

function give_mil_trader_ammo()
  sak_inventory.release_actor_items("inventory_sakbox_01", 1)
end

function esc_trader_ammo_have()
  return sak.have_items_count("inventory_sakbox_mil_svoboda",1)~=false
end

function mil_trader_ammo_have()
  return sak.have_items_count("inventory_sakbox_01",1)~=false
end

function give_ratcatcher_food(first_speaker, second_speaker)
  sak_inventory.release_actor_items("bread",20)
  sak_inventory.release_actor_items("conserva",20)
  sak_inventory.release_actor_items("kolbasa",20)
  sak_inventory.release_actor_items("vodka",5)
  second_speaker:set_relation(game_object.friend, first_speaker)
end
function add_barmen_find_item()
  local points={
  {-232.61698913574,28.373668670654,-85.214828491211,68471,3076},
  {-233.13415527344,28.401670455933,-90.139869689941,67597,3076},
  {-227.13482666016,27.767774581909,-93.275100708008,74307,3076}
  }
  for a=1,#points do
  amk.spawn_item("ecolog_device",sak.v3f(points[a][1],points[a][2],points[a][3]),points[a][5],points[a][4])
  end
end  
function add_ecolog_find_item()  
  local points={
  {196.353515625,28.058179855347,-226.43449401855,563636,3130},
  {194.33270263672,28.449327468872,-234.81425476074,561275,3130},
  {181.56039428711,27.844184875488,-234.41131591797,546093,3130},
  {174.21365356445,27.436065673828,-231.27116394043,538160,3130}
  }
  for a=1,2 do
  local rand=lua_random(1,#points)
  amk.spawn_item("ecolog_device",sak.v3f(points[rand][1],points[rand][2],points[rand][3]),points[rand][5],points[rand][4])
  end
end
function give_mil_Svoboda_trader_plan()
  sak_inventory.release_actor_items("sak_plan", 1)
end
function add_sak_plan()
  local rand=(amk_vars.r_treas_items or 1)*5
  local points={
22.983282089233,4.7107396125793,26.518951416016,80560,3263,
237.63459777832,-3.4720945358276,565.9752197265,679463,4102,
-185.87057495117,1.2867486476898,422.03298950195,49325,3361
}
amk.spawn_item("sak_plan",sak.v3f(points[rand-4],points[rand-3],points[rand-2]),points[rand],points[rand-1])
end
function ratcatcher_food_have()
  return sak.have_items_count("bread",20)~=false and sak.have_items_count("conserva",20)~=false and sak.have_items_count("vodka",5)~=false and sak.have_items_count("kolbasa",20)~=false
end
function tushkano_have()
  return sak.have_items_count("mutant_face_tushkano",10)~=false and sak.have_items_count("vodka",10)~=false
end
function give_tushkano()
  sak_inventory.release_actor_items("mutant_face_tushkano",10)
  sak_inventory.release_actor_items("vodka",10)
end
function mil_Svoboda_trader_plan_have()
  return sak.have_items_count("sak_plan",1)~=false
end

function mil_Svoboda_trader_outfit_have()
  return sak.have_items_count("soldier_outfit",2)~=false
end

function give_mil_Svoboda_trader_outfit()
  sak_inventory.release_actor_items("soldier_outfit", 1)

end

function take_val_pula_ammo()
  sak.create_items(db.actor,"inventory_sakbox_01",1)
end
function give_gar_hellcar_ammo()
  sak_inventory.release_actor_items("inventory_sakbox_01", 1)
end
function val_pula_ammo_have()
  return sak.have_items_count("inventory_sakbox_01",1)~=false
end

function give_val_pula_boar_leg()
  sak_inventory.release_actor_items("mutant_boar_leg",8)
  sak_inventory.release_actor_items("vodka",8)
end
function add_green_blood()
  local rand=amk_vars.r_treas_items or 1
  local arts={"af_dummy_green_vyvert","af_dummy_green_medusa","af_dummy_green_blood"}
  sak.create_items(db.actor,arts[rand],1)
end
function val_pula_boar_leg_have()
  return sak.have_items_count("mutant_boar_leg",8)~=false and sak.have_items_count("vodka",8)~=false
end

function give_ratcatcher_order()
  sak_inventory.release_actor_items("rad_document7",1)
  sak.create_items(db.actor,"af_red_dummy_battery",1)
end

function ratcatcher_order_have()
  return sak.have_items_count("rad_document7",1)~=false
end

function val_escort_PDA_have()
  return sak.have_items_count("und_pda",1)~=false
end

function give_val_escort_PDA(first_speaker, second_speaker)
  sak_inventory.release_actor_items("und_pda",1)
  second_speaker:set_relation(game_object.friend, first_speaker)
end

function bar_dolg_petrenko_gaussgan_have()
  return sak.have_items_count("wpn_gungauss",1)~=false
end
function gg_not_gaussgan_have()
  return not bar_dolg_petrenko_gaussgan_have()
end

function give_bar_dolg_petrenko_gaussgan(first_speaker, second_speaker)
  sak_inventory.release_actor_items("wpn_gungauss",1)
  second_speaker:set_relation(game_object.friend, first_speaker)
end

function add_wpn_gungauss()
  sak.create_items(db.actor,"wpn_gungauss",1)
end

function bar_dolg_petrenko_electra_flash_have()
  return sak.have_items_count("af_electra_flash",1)~=false
end

function give_bar_dolg_petrenko_electra_flash()
  sak_inventory.release_actor_items("af_electra_flash",1)
end

--[[function take_bar_dolg_petrenko_exo()
  local npc=db.actor
  local obj=alife():create("inventory_sakbox_dolg_petrenko", npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
  local pk = get_netpk(obj,1)
  local data = pk:get()
  data.custom_data = table_mayatniks[lua_random(1,#table_mayatniks)]
  pk:set(data)
  sak.relocate_item(npc, "in", "inventory_sakbox_dolg_petrenko", 1)
end--]]

function give_yan_scientist_exo()
  sak_inventory.release_actor_items("inventory_sakbox_dolg_petrenko", 1)
end
function add_yan_scientist_exo()
  sak.create_items(db.actor,"exo_outfit_m1",2)
end
function give_bar_dolg_petrenko_exo()
  sak_inventory.release_actor_items("exo_outfit_m1",2)
end

function yan_scientist_exo_have()
  return sak.have_items_count("inventory_sakbox_dolg_petrenko",1)~=false
end

function bar_dolg_petrenko_exo_have()
  return sak.have_items_count("exo_outfit_m1",2)~=false
end

function take_sak_repair_box()
  sak.create_items(db.actor,"inventory_sakbox_repair_box",1)
end

function give_esc_trader_sak_repair()
  sak_inventory.release_actor_items("inventory_sakbox_repair_box", 1)
  sak.create_items(db.actor,"inventory_sakbox_02",1)
end

function give_sak_repair_box()
  sak_inventory.release_actor_items("inventory_sakbox_02", 1)
end

function esc_trader_repair_box_have()
  return sak.have_items_count("inventory_sakbox_repair_box",1)~=false
end

function sak_repair_box_have()
  return sak.have_items_count("inventory_sakbox_02",1)~=false
end

function sak_find_seif_have()
  return sak.have_items_count("inventory_sakbox_03",1)~=false
end

function give_sak_find_seif ()
  sak.give_seif ("inventory_sakbox_03")
end

function take_sak_reward_outfit()
  sak.create_items(db.actor,"quest_manycase_01",1)
end

function gg_new_makintosh()
  if db.actor:has_info("krysyk_give_pda") or db.actor:has_info("gar_dm_bandits_secret") or db.actor:has_info("stepanych_shkura_start_info") then
  return true
  else
  return false
  end
end
function not_have_infos_green()
  if db.actor:has_info("info_green_medusa") and db.actor:has_info("info_green_vyvert") and db.actor:has_info("info_green_blood") then
  return false
  else
  return true
  end
end
function gg_new_about_cherep()
  if db.actor:has_info("mil_dolg_dialog_already") or db.actor:has_info("mil_patrol_glavn_know") then
  return true
  else
  return false
  end
end
function gg_new_about_marsh()
  if db.actor:has_info("info_way166a") or db.actor:has_info("info_way178a") or db.actor:has_info("info_way183a") then
  return true
  else
  return false
  end
end
function gg_not_new_about_marsh()
  return not gg_new_about_marsh()
end
function give_mil_trader_sak_reward_outfit()
  sak_inventory.release_actor_items("quest_manycase_01", 1)
  sak.create_items(db.actor,"militaryspec_outfit",1)
end
function give_sak_reward_outfit()
  sak_inventory.release_actor_items("militaryspec_outfit", 1)
end
function mil_trader_sak_reward_outfit_have()
  return sak.have_items_count("quest_manycase_01",1)~=false
end
function sak_reward_outfit_have()
  return sak.have_items_count("militaryspec_outfit",1)~=false
end
function sak_have_start()
  if db.actor:has_info("sak_gold_fish_start") or db.actor:has_info("sak_find_seif_start") or db.actor:has_info("sak_repair_box_start") or db.actor:has_info("sak_reward_outfit_start") then
  return true
  else
  return false
  end
end
function sak_have_have()
  if db.actor:has_info("sak_gold_fish_have") or db.actor:has_info("sak_find_seif_have") or db.actor:has_info("sak_repair_box_have") or db.actor:has_info("sak_reward_outfit_have") then
  return true
  else
  return false
  end
end

-------------------- квест —ахарова на поиск документов в ’-18
function add_docs_X18()							-- спаун документов в ’-18 дл€ —ахарова.
	local war_docs={
		{29.375196456909,-13.533881187439,40.21166229248,3320,1158},
		{22.589498519897,-14.826943397522,77.195014953613,3320,1158},
		{17.93267250061,-16.409547805786,29.559535980225,5580,1159},
		{3.4916789531708,-10.813512802124,27.932222366333,3315,1158},
		{-2.0975592136383,-10.814540863037,25.899175643921,2459,1145},
		{-32.248611450195,-10.814558029175,7.5913920402527,471,1147},
		{-40.481513977051,-10.818881988525,7.8685126304626,219,1148},
		{-27.001190185547,-10.813380241394,-14.08543586731,644,1154},
		{-15.263740539551,-10.714294433594,-22.070484161377,1124,1151},
		{-44.442459106445,-12.944392204285,-21.629943847656,123,1153},
		{-36.24047088623,-13.007162094116,-16.390144348145,334,1153},
		{16.849252700806,-10.815569877625,-1.9368379116058,5346,1135},
		{28.388679504395,-10.815103530884,3.7722778320313,6853,1136},
		{34.256034851074,-10.817984580994,-7.1270346641541,7175,1137},
		{27.344202041626,-10.816309928894,-16.473928451538,6668,1138},
		{15.481623649597,-10.814817428589,-16.985813140869,5104,1139},
		{29.545036315918,-5.0249938964844,-14.154643058777,6819,1140},
		{29.490291595459,-5.0188407897949,-15.180458068848,6815,1140},
		{29.586784362793,-5.5068454742432,-16.712614059448,6811,1140},
		{29.466293334961,-5.0602669715881,-17.359975814819,6809,1140},
		{29.626182556152,-5.1726231575012,-18.266500473022,6807,1140},
		{28.75732421875,-6.6202926635742,-16.390943527222,6813,1140}
	}

	nlc_vars.count_docs_x18 = lua_random(1,10)		-- определ€ем количество документов в ’-18 дл€ спауна
	nlc_vars.count_done1_docs_x18 = 0			-- инициализируем переменную с общим количеством документов из ’-18 сданных —ахарову (ћеченный может подходить и сдавать документы несколько раз)

	for n = 1, nlc_vars.count_docs_x18 do
		local war_docs_item = lua_random(1,#war_docs)	-- определ€ем координаты дл€ спауна документов
		local war_docs_visual=lua_random(2,9)		-- определ€ем визуал дл€ спауна документов
		local obj=amk.spawn_item("x18_document",sak.v3f(war_docs[war_docs_item][1],war_docs[war_docs_item][2],war_docs[war_docs_item][3]),war_docs[war_docs_item][5],war_docs[war_docs_item][4])
		if obj then
			local pk = get_netpk(obj,1)
			local data = pk:get()
			data.visual_name = "new_item\\documents_"..war_docs_visual
			data.physic_type=3
			pk:set(data)
		end
		table.remove(war_docs,war_docs_item)		-- удал€ем координаты на которых уже был спаун документов
	end
end

function docs_X18_have()					-- проверка, имеютс€ ли документы из ’-18 дл€ —ахарова в инвентаре ћеченного
	return sak.have_items_count("x18_document",1)~=false
end

function docs_X18_nagrad1()					-- забираем документы из ’-18 дл€ —ахарова у ћеченного, считаем их количество, даем предварительную награду.
	local count_done2_docs_x18 = 0				-- инициализируем переменную с количеством документов из ’-18 сданных —ахарову в этот раз (ћеченный может подходить и сдавать документы несколько раз)
	for kk,k in pairs(sak_inventory.rucksack) do
		if strpos(kk, "x18_document",1,true) then	-- в инвентаре найдены документы из ’-18
			sak_inventory.release_actor_items("x18_document", #k)			-- забираем документы из ’-18 из инвентар€ ћеченного
			count_done2_docs_x18 = count_done2_docs_x18 + #k			-- увеличиваем количество найденных документов из ’-18 в этот раз
		end
	end
	if nlc_vars.count_done1_docs_x18 == nil then						-- инициализаци€ должна была быть, но вдруг.... Ќапример, если вз€ть квест на старой версии игры, а сдавать на новой.
		nlc_vars.count_done1_docs_x18 = 0
	end
	nlc_vars.count_done1_docs_x18 = nlc_vars.count_done1_docs_x18 + count_done2_docs_x18	-- увеличиваем общее количество найденных документов из ’-18
	dialogs.relocate_money(db.actor,count_done2_docs_x18*1000,"in")				-- перечисл€ем на депозит ћеченного деньги за найденные в этот раз документы
end

function docs_X18_have_done()				-- проверка, сдал ли ћеченный все документы из ’-18 дл€ —ахарова
	if nlc_vars.count_docs_x18 == nil then
		nlc_vars.count_docs_x18 = 1		-- инициализаци€ должна была быть, но вдруг.... Ќапример, если вз€ть квест на старой версии игры, а сдавать на новой. ¬ этом случае ћеченному достаточно будет принести один документ.
	end
	return nlc_vars.count_done1_docs_x18 >= nlc_vars.count_docs_x18		-- «десь >=, а не == потому что вдруг :)  «она...
end
function docs_X18_not_have_done()
	return not docs_X18_have_done()
end



function yan_scientist_books_have()
  return sak.have_items_count("sak_book1",1)~=false and sak.have_items_count("sak_book2",1)~=false and sak.have_items_count("sak_book3",1)~=false
end
function give_yan_scientist_books()
  sak_inventory.release_actor_items("sak_book1",1)
  sak_inventory.release_actor_items("sak_book2",1)
  sak_inventory.release_actor_items("sak_book3",1)
end
function yan_kruglov_decoder_have()
  return sak.have_items_count("decoder1",1)~=false
end
function give_yan_kruglov_decoder()
  sak_inventory.release_actor_items("decoder1",1)
end
--[[function take_yan_kruglov_art()
  local npc=db.actor
  local obj=alife():create("inventory_sakbox_yan_kruglov", npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
  local pk = get_netpk(obj,1)
  local data = pk:get()
  data.custom_data = table_mayatniks[lua_random(1,#table_mayatniks)]
  pk:set(data)
  sak.relocate_item(npc, "in", "inventory_sakbox_yan_kruglov", 1)
end
function add_rad_kontainer()
  local obj=alife():create("inventory_sakbox_rad", sak.v3f(378,-51,-179.20),101537,2097)
  local pk = get_netpk(obj,1)
  local data = pk:get()
  data.custom_data = table_mayatniks[lua_random(1,#table_mayatniks)]
  pk:set(data)
end

function added_kont_leshyi()
  local obj=alife():create("inventory_sakbox_gar_flame", sak.v3f(57.41,6.4,405.93),344549,198)
  local pk = get_netpk(obj,1)
  local data = pk:get()
  data.custom_data = table_mayatniks[lua_random(1,#table_mayatniks)]
  pk:set(data)
end
function borov_kont()
  local obj=alife():create("inventory_sakbox_borov", sak.v3f(176.83,8.5,-375.96),377568,938)
  local pk = get_netpk(obj,1)
  local data = pk:get()
  data.custom_data = table_mayatniks[lua_random(1,#table_mayatniks)]
  pk:set(data)
end--]]
function give_esc_trader_yan_kruglov_art()
  sak_inventory.release_actor_items("inventory_sakbox_yan_kruglov", 1)
  sak.create_items(db.actor,"quest_manycase_01_kruglov",1)
end
function give_yan_kruglov_art()
  sak_inventory.release_actor_items("quest_manycase_01_kruglov", 1)
end
function esc_trader_yan_kruglov_art_have()
  return sak.have_items_count("inventory_sakbox_yan_kruglov",1)~=false
end
function yan_kruglov_art_have()
  return sak.have_items_count("quest_manycase_01_kruglov",1)~=false
end
function take_bar_ivancov_rg6()
  sak.create_items(db.actor,"wpn_rg-6",1)
end
function give_mil_ivancov_rg(first_speaker, second_speaker)
  --sak_inventory.release_actor_items("wpn_rg-6", 1)
  dialogs.relocate_item_section(second_speaker, "wpn_rg-6", "out")
end
function take_mil_ivancov_cais()
  sak.create_items(db.actor,"quest_manycase_01_ivancov",1)
end
function give_bar_ivancov_rg6(first_speaker, second_speaker)
  sak_inventory.release_actor_items("quest_manycase_01_ivancov", 1)
  second_speaker:set_relation(game_object.friend, first_speaker)
end
function mil_trader_bar_ivancov_rg6_have()
  return sak.have_items_count("wpn_rg-6",1)~=false
end
function bar_ivancov_rg6_have()
  return sak.have_items_count("quest_manycase_01_ivancov",1)~=false
end
function quest_manycase_01_mil_kurjer_have()
  return sak.have_items_count("quest_manycase_01_mil_kurjer",1)~=false
end
function give_quest_manycase_01_mil_kurjer()
  sak_inventory.release_actor_items("quest_manycase_01_mil_kurjer", 1)
end
function take_quest_manycase_01_mil_kurjer()
  sak.create_items(db.actor,"quest_manycase_01_mil_kurjer",1)
end
function take_blockpost_case()
  sak.create_items(db.actor,"quest_case_01",1)
end
function give_blockpost_case()
  sak_inventory.release_actor_items("quest_case_01", 1)
end
function blockpost_case_have()
  return sak.have_items_count("quest_case_01",1)~=false
end
function give_paper_box()
  sak_inventory.release_actor_items("paper_box_green",1)
end
function have_paper_box()
  return sak.have_items_count("paper_box_green",1)~=false
end
function add_paper_box()
  sak.create_items(db.actor,"paper_box_green",1)
end
function esc_find_groza_have()
  return sak.have_items_count("wpn_groza",1)~=false or sak.have_items_count("wpn_groza_old",1)~=false or sak.have_items_count("wpn_groza_m1",1)~=false
end
function give_find_groza(first_speaker, second_speaker)
  local item_in_slot = second_speaker:item_in_slot(2)
  if item_in_slot then
    g_sim:release(g_sim:object(item_in_slot:id()), true)
  end
  if sak.have_items_count("wpn_groza",1)~=false then
  dialogs.relocate_item_section(second_speaker, "wpn_groza", "out")
  g_sim:create("ammo_9x39_ap", second_speaker:position(), second_speaker:level_vertex_id(), second_speaker:game_vertex_id(), second_speaker:id())
  elseif sak.have_items_count("wpn_groza_m1",1)~=false then
  dialogs.relocate_item_section(second_speaker, "wpn_groza_m1", "out")
  g_sim:create("ammo_5.45x39_ap", second_speaker:position(), second_speaker:level_vertex_id(), second_speaker:game_vertex_id(), second_speaker:id())
  elseif sak.have_items_count("wpn_groza_old",1)~=false then
  dialogs.relocate_item_section(second_speaker, "wpn_groza_old", "out")
  g_sim:create("ammo_9x39_ap", second_speaker:position(), second_speaker:level_vertex_id(), second_speaker:game_vertex_id(), second_speaker:id())
  end
  second_speaker:set_relation(game_object.friend, first_speaker)
end
function give_find_af_dummy_glassbeads()
  sak_inventory.release_actor_items("af_dummy_glassbeads", 1)
end
function yan_scientist_find_af_dummy_glassbeads_have()
  return sak.have_items_count("af_dummy_glassbeads",1)~=false
end
function give_find_dinamit()
  sak_inventory.release_actor_items("dynamite", 1)
end
function add_dinamit()
  sak.create_items(db.actor,"dynamite",1)
end
function mil_lukash_find_dinamit_have()
  return sak.have_items_count("dynamite",1)~=false
end
function give_find_case()
  sak_inventory.release_actor_items("quest_case_06", 1)
end
function yan_scientist_find_case_have()
  return sak.have_items_count("quest_case_06",1)~=false
end
function yan_scientist_not_find_case_have()
  return not yan_scientist_find_case_have()
end
function give_find_2case()
  sak_inventory.release_actor_items("quest_case_05", 1)
end
function bar_dolg_leader_find_case_have()
  return sak.have_items_count("quest_case_05",1)~=false
end


local armor_profit_margin = 4

function kruglov_start_time()
  timers.start_timer("kruglov_ros_time",0,22,21,"sak.kruglov_end_time()")
end

function add_ara_outfit()
  sak.create_items(db.actor,"killer_outfit",1)
end
function add_ara_outfit_gaz()
  sak.create_items(db.actor,"killer_gaz_outfit_m1",1)
end
function add_ara_scientific()
  sak.create_items(db.actor,"merc_scientific_outfit",1)
end
function add_ara_exo()
  sak.create_items(db.actor,"killer_blue_exoskeleton",1)
end
function add_ara_lr300()
  local mod_wpn = "wpn_lr300"
  local obj = g_sim:create(mod_wpn, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
  sak.relocate_item(db.actor, "in", mod_wpn, 1)
  schedule.add ("unload_weapon", "sak_dialog.weapon_unload("..obj.id..")", 250)
end
function add_ara_sig550()
  local mod_wpn = "wpn_sig550"
  local obj = g_sim:create(mod_wpn, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
  sak.relocate_item(db.actor, "in", mod_wpn, 1)
  schedule.add ("unload_weapon", "sak_dialog.weapon_unload("..obj.id..")", 250)
end
function add_ara_famas_f1()
  local mod_wpn = "wpn_famas_f1"
  local obj = g_sim:create(mod_wpn, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
  sak.relocate_item(db.actor, "in", mod_wpn, 1)
  schedule.add ("unload_weapon", "sak_dialog.weapon_unload("..obj.id..")", 250)
end
function add_ara_wpn_fn2000()
  local mod_wpn = "wpn_fn2000"
  local obj = g_sim:create(mod_wpn, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
  sak.relocate_item(db.actor, "in", mod_wpn, 1)
  schedule.add ("unload_weapon", "sak_dialog.weapon_unload("..obj.id..")", 250)
end
function add_ara_g36()
  local mod_wpn = "wpn_g36"
  local obj = g_sim:create(mod_wpn, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
  sak.relocate_item(db.actor, "in", mod_wpn, 1)
  schedule.add ("unload_weapon", "sak_dialog.weapon_unload("..obj.id..")", 250)
end

function release_addons(sobj,wpn,obj)
  if sobj~=nil then
    local pk = get_netpk(sobj)
    local data = pk:get()
    local a_fl = data.addon_flags
    local h_scope = read_if_exist(system_ini(),wpn,"scope_status",nil)
    local h_sil = read_if_exist(system_ini(),wpn,"silencer_status",nil)
    local h_gren = read_if_exist(system_ini(),wpn,"grenade_launcher_status",nil)
    if h_scope==2 then
      h_scope = read_string_if_exist(system_ini(),wpn,"scope_name",nil)
      if h_scope~=nil and(a_fl==1 or a_fl==3 or a_fl==5 or a_fl==7) then
        h_scope = g_sim:create(h_scope, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(),db.actor:id())
      end
    end
    if h_sil==2 then
      h_sil = read_string_if_exist(system_ini(),wpn,"silencer_name",nil)
      if h_sil~=nil and a_fl >= 4 then
        h_sil = g_sim:create(h_sil, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(),db.actor:id())
      end
    end
    if h_gren==2 then
      h_gren = read_string_if_exist(system_ini(),wpn,"grenade_launcher_name",nil)
      if h_gren~=nil and(a_fl==2 or a_fl==3 or a_fl==6 or a_fl==7) then
        h_gren = g_sim:create(h_gren, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(),db.actor:id())
      end
    end
    --[[local ammo = obj:get_ammo_in_magazine()
    local name = obj:name()
    local ammot = data.ammo_type
    local section_ammo = restriction_stock.weapons_ammo_sections(name,ammot)
    if section_ammo~=nil and ammo >= 1 then
      amk.spawn_ammo_in_inv(section_ammo, ammo, db.actor)
    end--]]
  end
end
function get_vars(amkvar)
  local strg = nlc_vars[amkvar]
  if strg~=nil then
    wpnsec = string.sub(strg,2,string.len(strg))
    stcode = tonumber(string.sub(strg,1,1))
  else
    wpnsec = nil
    stcode = 0
  end
end
function read_if_exist(ltx, section, value, default)
  if ltx:line_exist(section,value) then
  return ltx:r_float(section,value)
  else
  return default
  end
end
function read_string_if_exist(ltx, section, value, default)
  if ltx:line_exist(section,value) then
  return ltx:r_string(section,value)
  else
  return default
  end
end
function give_money_100000(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  relocate_money(npc,100000,1)
end
function give_money_75000(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  relocate_money(npc,75000,1)
end
function give_money_150000(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  relocate_money(npc,150000,1)
end

function give_money_400000(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  relocate_money(npc,400000,1)
end

function give_money_30000(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  relocate_money(npc,30000,1)
end

function give_money_50000(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  relocate_money(npc,50000,1)
end

function relocate_money(victim, num, type)
  if db.actor and victim then
    if type=="in" then
      db.actor:give_money(num)
      --game_stats.money_quest_update(num)
    elseif type==1 then
      db.actor:give_money(-num)
      --game_stats.money_quest_update(-num)
    end
    news_manager.relocate_money(db.actor, type, num)
  end
end
function same_case_have()
  return sak.have_items_count("same_quest_case",1)~=false
end
function soul_have()
  return sak.have_items_count("af_soul",1,false,true)~=false
end
function soul3_have()
  return sak.have_items_count("af_soul",3,false,true)~=false
end
function kristall_have()
  return sak.have_items_count("af_cristall",1,false,true)~=false
end
function moonlight_have()
  return sak.have_items_count("af_electra_moonlight",1,false,true)~=false
end
function mica2_have()
  return sak.have_items_count("af_ameba_mica",2,false,true)~=false
end
function mica3_have()
  return sak.have_items_count("af_ameba_mica",3,false,true)~=false
end
function mica_have()
  return sak.have_items_count("af_ameba_mica",1,false,true)~=false
end
function sak_gold_fish_have()
  return sak.have_items_count("af_gold_fish",1,false,true)~=false
end
function give_sak_gold_fish()
  sak_inventory.release_actor_items("af_gold_fish", 1)
end
function text_money_skrjaga_water_dialog()
  local day_money = math.ceil(sak.day_money/12)
  local cost1=(10+day_money*5)
  db.actor:give_talk_message("%c[255,216,186,140] ѕо сегодн€шнему нашему курсу "..cost1.." патронов к натовским пукалкам...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function skrjaga_water_money_have()
  local day_money = math.ceil(sak.day_money/12)
  local cost1=(10+day_money*5)
  return vergas_lib.search_items("ammo_5.56x45",cost1,1)~= false end
function give_skrjaga_water_money()
  local day_money = math.ceil(sak.day_money/12)
  local cost1=(10+day_money*5)
  vergas_lib.search_items("ammo_5.56x45",cost1,2)
end
function text_money_cook_water_dialog()
  local day_money = math.ceil(sak.day_money/6)
  local cost1=(1000+day_money*100)
  db.actor:give_talk_message("%c[255,216,186,140]"..cost1.." р€бчиков не пожалей и будет тебе щастье...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function cook_water_money_have()
  local day_money = math.ceil(sak.day_money/6)
  return db.actor:money()>=(1000+day_money*100) end
function give_cook_water_money(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  local day_money = math.ceil(sak.day_money/6)
  relocate_money(npc,(1000+day_money*100),1)
end
function text_money_esc_water_dialog()
  local day_money = math.ceil(sak.day_money/8)
  local cost1=(400+day_money*100)
  db.actor:give_talk_message("%c[255,216,186,140]–убликов "..cost1.."?","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function esc_water_money_have()
  local day_money = math.ceil(sak.day_money/8)
  return db.actor:money()>=(400+day_money*100) end
function give_esc_water_money(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  local day_money = math.ceil(sak.day_money/8)
  relocate_money(npc,(400+day_money*100),1)
end
function not_bar_water()
  local randd,randh=math.abs(level.get_time_days()+sak.day_money),level.get_time_hours()
  local rand=randh+randd
  while rand>23 do rand=rand-24 end
  for  i=0,1 do
  if rand==(i*6+2) or rand==(i*6+1) then return true end
  end
  return false
end
function bar_water_have()
  return not not_bar_water()
end
function not_mil_water()
  local randd,randh=math.abs(level.get_time_days()+sak.day_money),level.get_time_hours()
  local rand=randh+randd
  while rand>23 do rand=rand-24 end
  for  i=0,1 do
  if rand==(i*6+5) or rand==(i*6+6) then return true end
  end
  return false
end
function mil_water_have()
  return not not_mil_water()
end
function text_money_sidor_capsule_dialog()
  local day_money = math.ceil(sak.day_money/8)
  local cost1=(1000+day_money*1000)
  db.actor:give_talk_message("%c[255,216,186,140]“ак что давай "..cost1.."... рубликов. ј € аппарат подготовлю. Ќу, или артефакт, простой, первого уровн€, если бумажек жалко...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function sidor_capsule_money_have()
  local day_money = math.ceil(sak.day_money/8)
  return db.actor:money()>=(1000+day_money*1000) end
function give_sidor_capsule_money(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  local day_money = math.ceil(sak.day_money/8)
  relocate_money(npc,(1000+day_money*1000),1)
end
function text_money_sidor_flame_load_dialog()
  local day_money = math.floor(sak.day_money/3)
  local cost1=(5000+day_money*1000)
  db.actor:give_talk_message("%c[255,216,186,140]"..cost1.." рубликов обойдЄтс€... ј если жалко - то давай артефактик какой нибудь...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function sidor_flame_load_money_have()
  local day_money = math.floor(sak.day_money/3)
  return db.actor:money()>=(5000+day_money*1000) end
function give_sidor_flame_load_money(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  local day_money = math.floor(sak.day_money/3)
  relocate_money(npc,(5000+day_money*1000),1)
end
function text_money_barmen_capsule_dialog()
  local day_money = math.ceil(math.sqrt(sak.day_money))
  local cost1=(4000+day_money*800)
  db.actor:give_talk_message("%c[255,216,186,140]¬сего навсего "..cost1.."... рубликов - и считай капсула уже вскрыта! Ќу, или артефактик какой, простенький...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function barmen_capsule_money_have()
  local day_money = math.ceil(math.sqrt(sak.day_money))
  return db.actor:money()>=(4000+day_money*800) end
function give_barmen_capsule_money(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  local day_money = math.ceil(math.sqrt(sak.day_money))
  relocate_money(npc,(4000+day_money*800),1)
end

function text_money_voronin_seif_dialog()
	local day_money = math.ceil(math.sqrt(sak.day_money))
	local cost1=(3000+day_money*800)
	local cost2=(10000+day_money*2000)
	db.actor:give_talk_message("%c[255,216,186,140]давай перечисли мне "..cost1.." за разовый доступ или за свободный доступ "..cost2.." и три дн€ в любой момент можешь рытьс€ в своЄм хабаре...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function voronin_seif_money_have()
	local day_money = math.ceil(math.sqrt(sak.day_money))
	return db.actor:money()>=(3000+day_money*800)
end
function voronin_seif_money_not_have()
	return not voronin_seif_money_have()
end
function give_voronin_seif_money(t1,t2)
	local npc=t1
	if npc:id()==db.actor:id() then npc=t2 end
	local day_money = math.ceil(math.sqrt(sak.day_money))
	relocate_money(npc,(3000+day_money*800),1)
end
function voronin_seif_money_dolg()
	local day_money = math.ceil(math.sqrt(sak.day_money))
	local summ = 2*(3000+day_money*800)
	nlc_vars.voronin_dolg = summ
	db.actor:give_info_portion("voronin_dolg_have")
end
function voronin_dolg_money_have()
	local summ = nlc_vars.voronin_dolg or 15000
	local day_money = math.ceil(math.sqrt(sak.day_money))
	return db.actor:money()>=((3000+day_money*800)+summ)
end
function give_voronin_dolg(t1,t2)
	local npc=t1
	if npc:id()==db.actor:id() then npc=t2 end
	local summ = nlc_vars.voronin_dolg or 15000
	local day_money = math.ceil(math.sqrt(sak.day_money))
	relocate_money(npc,((3000+day_money*800)+summ),1)
	db.actor:disable_info_portion("voronin_dolg_have")
end
function voronin_seif2_money_have()
	local day_money = math.ceil(math.sqrt(sak.day_money))
	return db.actor:money()>=(10000+day_money*2000)
end
function give_voronin_seif2_money(t1,t2)
	local npc=t1
	if npc:id()==db.actor:id() then npc=t2 end
	local day_money = math.ceil(math.sqrt(sak.day_money))
	relocate_money(npc,(10000+day_money*2000),1)
end

function text_money_lukash_seif_dialog()
  local day_money = math.ceil(math.sqrt(sak.day_money))
  local cost1=(5000+day_money*900)
  db.actor:give_talk_message("%c[255,216,186,140]¬сего навсего "..cost1.."... —мешно даже говорить...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function lukash_seif_money_have()
  local day_money = math.ceil(math.sqrt(sak.day_money))
  return db.actor:money()>=(5000+day_money*900) 
end
function give_lukash_seif_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  local day_money = math.ceil(math.sqrt(sak.day_money))
  relocate_money(npc,(5000+day_money*900),1)
end

function text_money_stas_seif_dialog()
  local day_money = math.ceil(math.sqrt(sak.day_money))
  local cost1=(1900+day_money*700)
  db.actor:give_talk_message("%c[255,216,186,140]давай перечисли мне "..cost1.." за разовый доступ и за хабар можешь не беспокоитьс€...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function stas_seif_money_have()
  local day_money = math.ceil(math.sqrt(sak.day_money))
  return db.actor:money()>=(1900+day_money*700) 
end
function give_stas_seif_money(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  local day_money = math.ceil(math.sqrt(sak.day_money))
  relocate_money(npc,(1900+day_money*700),1)
end

function itemoutfit_money_have()
  local day_money = math.ceil(math.sqrt(sak.day_money/2))
  return db.actor:money()>=(600+day_money*400) 
end
function give_itemoutfit_money(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  local day_money = math.ceil(math.sqrt(sak.day_money/2))
  relocate_money(npc,(600+day_money*400),1)
end
function item_weapon_money_have()
  local day_money = math.ceil(math.sqrt(sak.day_money/2))
  return db.actor:money()>=(400+day_money*300) 
end
function give_item_weapon_money(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  local day_money = math.ceil(math.sqrt(sak.day_money/2))
  relocate_money(npc,(400+day_money*300),1)
end
function text_money_item_dialog()
  local day_money = math.ceil(math.sqrt(sak.day_money/2))
  local cost1=(600+day_money*400)
  local cost2=(400+day_money*300)
  db.actor:give_talk_message("%c[255,216,186,140]«а комплект дл€ ремонта броника - "..cost1.." рубликов. \\nќружейный ремкомплект - "..cost2.." тех же дензнаков.","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end

function text_money_esc_akkum_dialog()
  local day=sak.day_money-5 if day<0 then day=0 end
  local day_money = math.ceil(day/2)
  local cost1=(200+day_money*200) if cost1>5000 then cost1=5000 end
  db.actor:give_talk_message("%c[255,216,186,140]ѕерекачивай "..cost1.." рубликов и давай разр€женный аккумул€тор...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function esc_akkum_money_have()
  local day=sak.day_money-5 if day<0 then day=0 end
  local day_money = math.ceil(day/2)
  local cost1=(200+day_money*200) if cost1>5000 then cost1=5000 end
  return db.actor:money()>=cost1 
end
function esc_akkum_money_3000()
  local day=sak.day_money-5 if day<0 then day=0 end
  local day_money = math.ceil(day/2)
  local cost1=(200+day_money*200)
  return cost1>=2500 end
function give_esc_akkum_money(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  local day=sak.day_money-5 if day<0 then day=0 end
  local day_money = math.ceil(day/2)
  local cost1=(200+day_money*200) if cost1>5000 then cost1=5000 end
  relocate_money(npc,cost1,1)
end

function text_money_bar_akkum_dialog()
  local day=sak.day_money-5 if day<0 then day=0 end
  local day_money = math.ceil(day/3)
  local cost1=(1200+day_money*300) if cost1>8000 then cost1=8000 end
  db.actor:give_talk_message("%c[255,216,186,140]перечисли "..cost1.." рубликов и получишь в обмен на разр€женный, полностью залитый энергией...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function bar_akkum_money_have()
  local day=sak.day_money-5 if day<0 then day=0 end
  local day_money = math.ceil(day/3)
  local cost1=(1200+day_money*300) if cost1>8000 then cost1=8000 end
  return db.actor:money()>=cost1 
end
function give_bar_akkum_money(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  local day=sak.day_money-5 if day<0 then day=0 end
  local day_money = math.ceil(day/3)
  local cost1=(1200+day_money*300) if cost1>8000 then cost1=8000 end
  relocate_money(npc,cost1,1)
end

function text_money_bar_water_dialog()
  local day=sak.day_money-3 if day<0 then day=0 end
  local day_money = math.ceil(day/5)
  local cost1=(600+day_money*100) if cost1>2500 then cost1=2500 end
  db.actor:give_talk_message("%c[255,216,186,140]перечисли "..cost1.." рубликов и можешь набрать воды вон в умывальнике, возле дизел€...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function bar_water_money_have()
  local day=sak.day_money-3 if day<0 then day=0 end
  local day_money = math.ceil(day/5)
  local cost1=(600+day_money*100) if cost1>2500 then cost1=2500 end
  return db.actor:money()>=cost1 
end
function give_bar_water_money(t1,t2)
  local npc=t1 if npc:id()==db.actor:id() then npc=t2 end
  local day=sak.day_money-3 if day<0 then day=0 end
  local day_money = math.ceil(day/5)
  local cost1=(600+day_money*100) if cost1>2500 then cost1=2500 end
  relocate_money(npc,cost1,1)
end

function text_vorobey_gift()
  local day=sak.day_money-30 if day<0 then day=0 end
  local day_money = math.ceil(day/2)
  local cost1=(3000+day_money*400)
day_money = math.ceil(day/7)
  local gr=(3+day_money)
  db.actor:give_talk_message("%c[255,216,186,140]ћогу деньгами насыпать "..cost1.." рубликов, неплохо а?\\n»ли вот есть гранаты к подствольнику "..gr.." штучек. —оглашайс€, ну!","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function add_vorobey1_gift()
  local day=sak.day_money-30 if day<0 then day=0 end
  local day_money = math.ceil(day/2)
  local cost1=(3000+day_money*400)
  dialogs.relocate_money(db.actor,cost1,"in")
end
function add_vorobey2_gift()
  local day=sak.day_money-30 if day<0 then day=0 end
  local day_money = math.ceil(day/7)
  local gr=(3+day_money)
  sak.create_items(db.actor,"ammo_vog-25",gr)
end

function osvedomitel_artmods_yes()
  local r_t=amk_vars.r_task_reward or 1
  local randd,randh,randm=math.abs(level.get_time_days()-r_t),level.get_time_hours(),level.get_time_minutes()
  local rand=randh+randd
while rand>6 do rand=rand-6 end
  if rand>=2 and randm>rand+(r_t*3) then return true end
  return false
end
function osvedomitel_artmods_not()
  return not osvedomitel_artmods_yes()
end
  local zub_rand,zub_cost1,zub_cost2,zub_hr=1,50000,100000,1
function osvedomitel_artmods_have()
  local aid="artmod_"
  local at=sak_artmods.artmod_resiepts
  local day_money = math.ceil(sak.day_money/4)
  local hrand=level.get_time_hours()
  local hr=(hrand+day_money)
while hr>6 do hr=hr-6 end
  local art={
game.translate_string(at[aid.."1"..hr][7]),
game.translate_string(at[aid.."2"..hr][7]),
game.translate_string(at[aid.."3"..hr][7]),
game.translate_string(at[aid.."4"..hr][7]),
game.translate_string(at[aid.."5"..hr][7]),
game.translate_string(at[aid.."6"..hr][7])}
  local cost = {
(20000+day_money*500),
(25000+day_money*600),
(30000+day_money*700),
(35000+day_money*800),
(40000+day_money*900),
(50000+day_money*1000)}
  local frases = {
"рубликов,",
"рваников,",
"рублей,",
"их же, дерев€ных.",
"гривен. Ўучу - тоже рублей.",
"фунтов-стерлингов... ’а! Ќаших, «оновских, конечно."
}
  local r_t=amk_vars.r_task_reward or 1
  local randd=math.abs(level.get_time_days()-tonumber(r_t))+1
while randd>3 do randd=randd-3 end
  db.actor:give_talk_message("%c[255,216,186,140]1 - "..art[randd].." за "..cost[randd].." "..frases[randd].."\\n2 - "..art[randd+3].." за "..cost[randd+3].." "..frases[randd+3],"ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
  zub_rand=randd
  zub_cost1=cost[randd]
  zub_cost2=cost[randd+3]
  zub_hr=hr
end
function osvedomitel_artmods_have_1()
  return db.actor:money()>=zub_cost1 end
function osvedomitel_artmods_have_2()
  return db.actor:money()>=zub_cost2 end

function give_osvedomitel_artmods_1(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,zub_cost1,1)
end
function give_osvedomitel_artmods_2(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,zub_cost2,1)
end
function add_osvedomitel_artmods_1()
  local aid="artmod_"
  local at=sak_artmods.artmod_resiepts
  local hr=zub_hr
  local n=zub_rand
  local info=(at[aid..n..hr][5])
  local text=game.translate_string("enc_"..(at[aid..n..hr][7]))
--ODS("[~T].~C0C в инфодаем "..info.."~C07")
  db.actor:disable_info_portion(info)
  db.actor:give_info_portion(info)
  db.actor:give_talk_message("%c[255,216,186,140]"..text.."...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function add_osvedomitel_artmods_2()
  local aid="artmod_"
  local at=sak_artmods.artmod_resiepts
  local hr=zub_hr
  local n=zub_rand+3
  local info=(at[aid..n..hr][5])
  local text=game.translate_string("enc_"..(at[aid..n..hr][7]))
  db.actor:disable_info_portion(info)
  db.actor:give_info_portion(info)
  db.actor:give_talk_message("%c[255,216,186,140]"..text.."...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
  local hr_amk=1
function osvedomitel_amkres_have()
  local at=sak_artmods.amk_resiepts
  local day_money = math.ceil(sak.day_money/4)
  local hrand_amk=level.get_time_hours()
--hr_amk=(hrand_amk+day_money)
-- mike равномерный почасовой сдвиг в рецептах
  local day=timers.Get_Game_Days()
  hr_amk=hrand_amk+day
-----------------
while hr_amk>26 do hr_amk=hr_amk-26 end
  local art1=(at[hr_amk][1])
  local art2=(at[hr_amk][3])
  local from_sect1=game.translate_string(amk.get_inv_name(art1))
  local from_sect2=game.translate_string(amk.get_inv_name(art2))
  local cost1=(80000+day_money*2000)
  db.actor:give_talk_message("%c[255,216,186,140] ак уникальный артефакт "..from_sect2.." получить из арта "..from_sect1.." за совершенно символическую сумму в "..cost1.." рубликов...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function osvedomitel_amkres_have_1()
  local day_money = math.ceil(sak.day_money/4)
  return db.actor:money()>=(80000+day_money*2000) end
function give_osvedomitel_amkres_1(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  local day_money = math.ceil(sak.day_money/4)
  relocate_money(npc,(80000+day_money*2000),1)
end

function add_osvedomitel_amkres_1()
  local at=sak_artmods.amk_resiepts
  local info=(at[hr_amk][2])
  local txt=string.gsub(info, "info_", "enc_")
  local text=game.translate_string(txt.."_text")
  db.actor:disable_info_portion(info)
  db.actor:give_info_portion(info)
  db.actor:give_talk_message("%c[255,216,186,140]"..text.."...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function add_osvedomitel_amkres_4()
  local at=sak_artmods.amk_resiepts
  local info=(at[4][2])
  local txt=string.gsub(info, "info_", "enc_")
  local text=game.translate_string(txt.."_text")
  db.actor:disable_info_portion(info)
  db.actor:give_info_portion(info)
  db.actor:give_talk_message("%c[255,216,186,140]"..text.."...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function add_osvedomitel_amkres_7()
  local at=sak_artmods.amk_resiepts
  local info=(at[7][2])
  local txt=string.gsub(info, "info_", "enc_")
  local text=game.translate_string(txt.."_text")
  db.actor:disable_info_portion(info)
  db.actor:give_info_portion(info)
  db.actor:give_talk_message("%c[255,216,186,140]"..text.."...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function add_osvedomitel_amkres_11()
  local at=sak_artmods.amk_resiepts
  local info=(at[11][2])
  local txt=string.gsub(info, "info_", "enc_")
  local text=game.translate_string(txt.."_text")
  db.actor:disable_info_portion(info)
  db.actor:give_info_portion(info)
  db.actor:give_talk_message("%c[255,216,186,140]"..text.."...","ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end

function actor_has_money_30000() return db.actor:money()>=30000 end
function actor_has_money_50000() return db.actor:money()>=50000 end
function actor_has_money_75000() return db.actor:money()>=75000 end
function actor_has_money_100000() return db.actor:money()>=100000 end
function actor_has_money_150000() return db.actor:money()>=150000 end
function actor_has_money_400000() return db.actor:money()>=400000 end
function actor_200_have() return db.actor:money()>=200 end
function actor_400_have() return db.actor:money()>=400 end
function actor_500_have() return db.actor:money()>=500 end
function actor_600_have() return db.actor:money()>=600 end
function actor_700_have() return db.actor:money()>=700 end
function actor_750_have() return db.actor:money()>=750 end
function actor_1000_have() return db.actor:money()>=1000 end
function actor_1000_not_have() return not actor_1000_have() end
function actor_1500_have() return db.actor:money()>=1500 end
function actor_1950_have() return db.actor:money()>=1950 end
function actor_2000_have() return db.actor:money()>=2000 end
function actor_2250_have() return db.actor:money()>=2250 end
function actor_2500_have() return db.actor:money()>=2500 end
function actor_3000_have() return db.actor:money()>=3000 end
function actor_4000_have() return db.actor:money()>=4000 end
function actor_5000_have() return db.actor:money()>=5000 end
function actor_6000_have() return db.actor:money()>=6000 end
function actor_9000_have() return db.actor:money()>=9000 end
function actor_10000_have() return db.actor:money()>=10000 end
function actor_15000_have() return db.actor:money()>=15000 end
function actor_20000_have() return db.actor:money()>=20000 end
function actor_25000_have() return db.actor:money()>=25000 end
function actor_30000_have() return db.actor:money()>=30000 end
function actor_35000_have() return db.actor:money()>=35000 end
function actor_40000_have() return db.actor:money()>=40000 end
function actor_45000_have() return db.actor:money()>=45000 end
function actor_50000_have() return db.actor:money()>=50000 end
function actor_55000_have() return db.actor:money()>=55000 end
function actor_100000_have() return db.actor:money()>=100000 end
function actor_115000_have() return db.actor:money()>=115000 end
function actor_250000_have() return db.actor:money()>=250000 end

function take_100_money(t1,t2) dialogs.relocate_money(db.actor,100,"in") end
function take_200_money(t1,t2) dialogs.relocate_money(db.actor,200,"in") end
function take_250_money(t1,t2) dialogs.relocate_money(db.actor,250,"in") end
function take_300_money(t1,t2) dialogs.relocate_money(db.actor,300,"in") end
function take_400_money(t1,t2) dialogs.relocate_money(db.actor,400,"in") end
function take_500_money(t1,t2) dialogs.relocate_money(db.actor,500,"in") end
function take_750_money(t1,t2) dialogs.relocate_money(db.actor,750,"in") end
function take_1000_money(t1,t2) dialogs.relocate_money(db.actor,1000,"in") end
function take_1500_money(t1,t2) dialogs.relocate_money(db.actor,1500,"in") end
function take_2000_money(t1,t2) dialogs.relocate_money(db.actor,2000,"in") end
function take_2500_money(t1,t2) dialogs.relocate_money(db.actor,2500,"in") end
function take_3000_money(t1,t2) dialogs.relocate_money(db.actor,3000,"in") end
function take_5000_money(t1,t2) dialogs.relocate_money(db.actor,5000,"in") end
function take_10000_money(t1,t2) dialogs.relocate_money(db.actor,10000,"in") end
function take_15000_money(t1,t2) dialogs.relocate_money(db.actor,15000,"in") end
function take_30000_money(t1,t2) dialogs.relocate_money(db.actor,30000,"in") end
function take_35000_money(t1,t2) dialogs.relocate_money(db.actor,35000,"in") end
function take_40000_money(t1,t2) dialogs.relocate_money(db.actor,40000,"in") end
function take_50000_money(t1,t2) dialogs.relocate_money(db.actor,50000,"in") end
function take_70000_money(t1,t2) dialogs.relocate_money(db.actor,70000,"in") end

function give_bad_flamethrower()
  sak_inventory.release_actor_items("flamethrower_bad", 1)
end
function flamethrower_bad_have()
  return sak.have_items_count("flamethrower_bad",1)~=false
end
function add_gorelka()
  sak.create_items(db.actor,"gorelka",1)
end
function have_manometr()
  return sak.have_items_count("manometr",1)~=false
end
function have_gorelka()
  return sak.have_items_count("gorelka",1)~=false
end
function have_trubka()
  return sak.have_items_count("trubka",1)~=false
end
function give_soul()
  sak_inventory.release_actor_items("af_soul", 1)
  end
function give_3soul()
  sak_inventory.release_actor_items("af_soul", 3)
end
function give_kristall()
  sak_inventory.release_actor_items("af_cristall", 1)
end
function give_moonlight()
  sak_inventory.release_actor_items("af_electra_moonlight", 1)
end
function give_mica()
  sak_inventory.release_actor_items("af_ameba_mica", 1)
end
function in_all_money()
  local summ_old=db.actor:money()
  local summ=(nlc_vars.actor_many or 0)
  db.actor:give_money(summ-summ_old)
  nlc_vars.actor_many = nil
end
function in_all_jank_money()
  local summ=(nlc_vars.actor_many or 0)
  db.actor:give_money(summ)
  nlc_vars.actor_many = nil
end
function out_all_money()
  local summ=db.actor:money()
  nlc_vars.actor_many = summ
  db.actor:give_money(-summ)
end
function in_saharov_money()
  local summ=(nlc_vars.saharov_many or 0)
  --nlc_vars.saharov_many = summ
  db.actor:give_money(summ)
  sak.flag_sah=true
end
function out_saharov_money()
  local summ=db.actor:money()
  nlc_vars.saharov_many = summ
  sak.flag_sah=false
end
function neum_out_all_money(npc, actor)
  local summ=npc:money()
  dialogs.relocate_money(actor, summ, "out")
  local obj=npc:object("lot_many")
  if obj then
  sak_inventory.release_actor_items("lot_many",1)
  end
end
function give_200_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,200,1)
end

function give_400_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,400,1)
end
function give_2000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,2000,1)
end
function give_2250_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,2250,1)
end
function give_1950_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,1950,1)
end
function give_2500_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,2500,1)
end
function give_4000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,4000,1)
end
function give_3000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,3000,1)
end
function give_1500_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,1500,1)
end
function give_1000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,1000,1)
end
function give_10000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,10000,1)
end
function give_15000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,15000,1)
end
function give_5000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,5000,1)
end
function give_6000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,6000,1)
end
function give_40000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,40000,1)
end
function give_45000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,45000,1)
end
function give_50000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,50000,1)
end
function give_55000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,55000,1)
end
function give_100000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,100000,1)
end
function give_115000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,115000,1)
end
function give_500_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,500,1)
end
function give_600_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,600,1)
end
function give_700_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,700,1)
end
function give_750_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,750,1)
end
function give_20000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,20000,1)
end
function give_25000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,25000,1)
end
function give_9000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,9000,1)
end
function give_30000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,30000,1)
end
function give_35000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,35000,1)
end
function give_250000_money(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  relocate_money(npc,250000,1)
end
function is_val_vlad(t1,t2)
  local npc=t1
  if npc:id()==db.actor:id() then
    npc=t2
  end
  return npc:name()=="val_vlad"
end

function pesh_out_all_item()
  out_all_item(5872)
end


local non_trnsf_item = nlc_container.important_items
--[[ {
["podsumok"]=true,
["razgruzka"]=true,
["rykzack_feik"]=true,
["af_dummy_black_tip"]=true,
["bag_on_belt"]=true
}
--]]
function out_all_item(sid) -- TODO: в св€зи с переделкой инвентар€, кое что тут наверн€ка сломалось
  local in_object = level_object_by_sid(sid)
  local out_object = db.actor
  for i,k in pairs(sak_inventory.slots) do
    if (i~="bolt" and i~="device_torch" and i~="device_pda") then
      local item = client_obj(k[1])
      out_object:transfer_item(item, in_object)
    end
  end
  for i,k in pairs(sak_inventory.belt_items) do
    for j = 1, #k do
      local item = client_obj(k[j])
      out_object:transfer_item(item, in_object)
    end
  end
  for i,k in pairs(sak_inventory.rucksack) do
    if not non_trnsf_item[i] then
      for j = 1, #k do
        local item = client_obj(k[j])
        out_object:transfer_item(item, in_object)
      end
    end
  end
  for i,k in pairs(sak_inventory.eatable) do
    if not non_trnsf_item[i] then
      for j = 1, #k do
        local item = client_obj(k[j])
        out_object:transfer_item(item, in_object)
      end
    end
  end
  --[[
  local tbl_hran = razgruzka.get_inv_hran()
  if tbl_hran then
    for a,i in pairs(tbl_hran) do
      if string.sub (a, 1, 4) == "ammo" then
        local box_size = vergas_lib.get_box_size(a)
        local sum_ammo=tonumber(i)
        while sum_ammo >= box_size do
        misc.spawn_obj(a, in_object:position(), in_object:id())
        sum_ammo = sum_ammo - box_size
        end
        if sum_ammo > 0 then
        misc.spawn_obj(a, in_object:position(), in_object:id(), sum_ammo)
        end
      else
        if a ~= "detector_simple_fake" then
          misc.spawn_multi(a, in_object:position(), in_object:id(), tonumber(i))
        end
      end
    end
  end
  nlc_vars.inv_hran = nil
  --]]
  if in_object.online then
    g_sim:set_switch_online(in_object.id, false)
    g_sim:set_switch_offline(in_object.id, true)
    amk.convert_npc[in_object.id]=1
  end
  sak_inventory.need_update_inventory()
end

function time_tomorrow()
  return level.get_time_hours()>=6
end
function time_not_tomorrow()
  return not time_tomorrow()
end

function treasure_timer(key)
 local list = {}
 list.t_stas     = "time_start_stas_seif"
 list.t_docent   = "time_start_docent_seif"
 list.t_lukash   = "time_start_lukash_seif"
 list.t_voronin  = "time_start_voronin_seif"
 return list[key] or key
end

function start_time(name_timer)
  local gtime = timers.Get_Game_Minutes()
  --ODS("[~T].~C0C сейчас сохран€ем "..gtime.."~C07")
  if nlc_vars.dialog_timers == nil then
     nlc_vars.dialog_timers = {}
  end
  name_timer = treasure_timer(name_timer) -- decode attempts
  nlc_vars.dialog_timers[name_timer] = gtime
end

function dialog_timer_value(name_timer, default)
  if nlc_vars.dialog_timers == nil then
     nlc_vars.dialog_timers = {}
  end
  default = default or 0
  return nlc_vars.dialog_timers[name_timer] or default
end

function is_ready_time(name_timer, timer, default)
  local gtime = timers.Get_Game_Minutes() --misc.game_time_minutes()
  local ftime = dialog_timer_value (name_timer, default)
  --ODS("[~T].~C0C сейчас "..gtime.."  сохранено:  "..ftime.."~C07")
  -- в случае чего вычитаетс€ мес€ц
  if ftime > gtime then ftime = ( ftime - 31 * 24 * 60 ) end
  -- адаптаци€ дл€ ремонтников, только если таймер взведен
  if (ftime ~= 0) and (gtime - ftime) >= timer then
     return true
  else
     return false
  end
end

function not_ready_time(name_timer, timer) -- возвращает тру, если врем€ ещЄ не вышло
 return not is_ready_time(name_timer, timer)
end

local function num(v, default)
 return tonumber(v or default)
end

function treasure_time_have(name_time, days, hours, minutes)
 name_time = treasure_timer(name_time)
 local start = dialog_timer_value(name_time) -- врем€ когда нычку оплатили
 local time  = (num(days, 0) * 24 + num(hours, 0)) * 60 + num(minutes, 0)
 local rest  = time - (timers.Get_Game_Minutes() - start) -- сколько осталось оплаченного времени
 wprintf(" #TIME_HAVE: dialog timer~C0A '%s'~C07 start =~C0D %d ~C07, rest =~C0D %d~C07", name_time, start, rest)
 if 0 == start then
    return false
 else
    return rest > 0
 end
end

function treasure_time_over(name_time, days, hours, minutes)
 return not treasure_time_have(name_time, days, hours, minutes)
end

function clear_ready_time(name_timer)
  nlc_vars.dialog_timers[name_timer] = nil
end

--------- падение репутации ћеченного у сталкеров
function sid_repa_no_good()
	timers.start_timer("sid_repa",0,17,11,"sak_dialog.up_repa(-550)")
end
function hellcar_repa_no_good()
	timers.start_timer("hell_repa",0,0,19,"sak_dialog.all_repa_no_good()")
end
function all_repa_no_good()
	db.actor:change_character_reputation(-50)
	local name,sname = amk_names_lists.get_strings()
	sak.send_tip("¬идел, как один сталкер с харей покорЄженной, парн€ завалил. ќт такого всЄ, что хочешь ждать можно.",name.." "..sname,0,15,"uniq","news","gray")
	local name2,sname2 = amk_names_lists.get_strings()
	sak.send_tip("Ёто кто такой? «нал € одного. ћорда ужас!  опчЄный или не... Ќа мы букву... ¬ общем пон€тно всЄ с таким.",name2.." "..sname2,15,15,"uniq","news","gray")
	timers.start_timer("hell_repa",0,5,11,"sak_dialog.up_repa(-250)")
end
function low_repa()
	db.actor:change_character_reputation(-100)
end
function low_repa_for_kill()
	db.actor:change_character_reputation(-1000)
end
function up_repa(num)
	db.actor:change_character_reputation(num)
	if num<-100 then
		local name,sname = amk_names_lists.get_strings()
		sak.send_tip("Ќарод, слыхали? ќдин сталкер по кличке ћеченный таким козлом оказалс€! —воих мужиков кидает... —кот.",name.." "..sname,0,15,"uniq","sak","green")
		local name2,sname2 = amk_names_lists.get_strings()
		sak.send_tip("ƒа убивать за такое нужно! Ќа месте! „тоб другим неповадно было!",name2.." "..sname2,15,15,"uniq","sak","green")
	end
end

--------- проверка падени€ репутации ћеченного у Ўерстюка и Ѕорова
function reputation_down_check()	-- вызываетс€ периодически, см. AddRegularTask в alpet\task_smart_udp.script

	-- проверка падени€ репутации у Ўерстюка
	if nlc_vars.reputation_down_sherstuk_check_flag == nil then
		nlc_vars.reputation_down_sherstuk_check_flag = true
	end
	if nlc_vars.reputation_down_sherstuk_check_flag and db.actor:has_info("sherstuk_enemy") then
		nlc_vars.reputation_down_sherstuk_check_flag = false
		timers.start_timer("reputation_down_sherstuk_report1",0,0,15,"sak_dialog.reputation_down_sherstuk_report1()")
	end

	-- проверка падени€ репутации у Ѕорова
	if nlc_vars.reputation_down_borov_check_flag == nil then
		nlc_vars.reputation_down_borov_check_flag = true
	end
	if nlc_vars.reputation_down_borov_check_flag and db.actor:has_info("actor_enemy_for_bandit") then
		nlc_vars.reputation_down_borov_check_flag = false
		timers.start_timer("reputation_down_bandit_report1",0,0,15,"sak_dialog.reputation_down_bandit_report1()")
	end

end
function reputation_down_sherstuk_report1()
	local name,sname = amk_names_lists.get_strings()
	sak.send_tip("¬идел, как один сталкер с харей покорЄженной, военного завалил.  ак бы Ўерстюк не обиделс€...",name.." "..sname,0,15,"uniq","news","gray")
	local name2,sname2 = amk_names_lists.get_strings()
	sak.send_tip("Ёто кто такой? я тут одного сталкера видел, морда ужас!",name2.." "..sname2,15,15,"uniq","news","gray")
	sak.send_tip("Ќе помню как звали,  опченный или ћочЄнный...",name.." "..sname,30,15,"uniq","news","gray")
	timers.start_timer("reputation_down_sherstuk_report2",0,1,0,"sak_dialog.reputation_down_sherstuk_report2()")
end
function reputation_down_sherstuk_report2()
	local name,sname = amk_names_lists.get_strings()
	sak.send_tip("Ќарод, слыхали? ќдин сталкер по кличке ћеченный, завалил военного. “еперь к Ўерстюку не подойдешь. —трел€ет...",name.." "..sname,0,15,"uniq","sak","green")
	local name2,sname2 = amk_names_lists.get_strings()
	sak.send_tip("Ѕлин, а € только к Ўерстюку за патронами собралс€! ¬от зачем он это сделал? „то в «оне стрел€ть в не в кого? ћутантов ему мало?",name2.." "..sname2,15,15,"uniq","sak","green")
	sak.send_tip("ƒа дурак он отмороженный. „то с него вз€ть...",name.." "..sname,30,15,"uniq","sak","green")
end
function reputation_down_bandit_report1()
	local name,sname = amk_names_lists.get_strings()
	sak.send_tip("¬идел, как один сталкер с харей покорЄженной, бандита завалил. Ќа базе у Ѕорова кипиш...",name.." "..sname,0,15,"uniq","news","gray")
	local name2,sname2 = amk_names_lists.get_strings()
	sak.send_tip("Ёто кто такой? я тут одного сталкера видел, морда ужас!",name2.." "..sname2,15,15,"uniq","news","gray")
	sak.send_tip("Ќе помню как звали,  опченный или ћочЄнный...",name.." "..sname,30,15,"uniq","news","gray")
	timers.start_timer("reputation_down_bandit_report2",0,1,0,"sak_dialog.reputation_down_bandit_report2()")
end
function reputation_down_bandit_report2()
	local name,sname = amk_names_lists.get_strings()
	sak.send_tip("Ќарод, слыхали? ќдин сталкер по кличке ћеченный, завалил бандита пр€мо на базе Ѕорова. “еперь братки озверели, стрел€ют в сталкеров без предупреждени€. јккуратнее там...",name.." "..sname,0,15,"uniq","sak","green")
	local name2,sname2 = amk_names_lists.get_strings()
	sak.send_tip("» зачем он это сделал? „то в «оне стрел€ть в не в кого? ћутантов ему мало?",name2.." "..sname2,15,15,"uniq","sak","green")
	sak.send_tip("ƒа дурак он отмороженный. „то с него вз€ть...",name.." "..sname,30,15,"uniq","sak","green")
end

function marsh_oksana_foto()
  db.actor:give_talk_message("", "ui\\ui_sak",Frect():set(1050,700,250,250),"iconed_foto_item")
end
function esc_case_foto()
  db.actor:give_talk_message("", "ui\\ui_icon_equipment",Frect():set(500,0,100,100),"iconed_foto_item")
end
function fake_new_1_remove()
  remove_npc_from_npc_targets("fake_new_1")
end
function fake_new_2_remove()
  remove_npc_from_npc_targets("fake_new_2")
end
function fake_new_3_remove()
  remove_npc_from_npc_targets("fake_new_3")
end
function fake_new_4_remove()
  remove_npc_from_npc_targets("fake_new_4")
end
function fake_new_5_remove()
  remove_npc_from_npc_targets("fake_new_5")
end
function fake_new_6_remove()
  remove_npc_from_npc_targets("fake_new_6")
end
function fake_new_7_remove()
  remove_npc_from_npc_targets("fake_new_7")
end
function fake_new_8_remove()
  remove_npc_from_npc_targets("fake_new_8")
end
function fake_new_9_remove()
  remove_npc_from_npc_targets("fake_new_9")
end
function fake_new_10_remove()
  remove_npc_from_npc_targets("fake_new_10")
end
function fake_new_11_remove()
  remove_npc_from_npc_targets("fake_new_11")
end
function fake_new_12_remove()
  remove_npc_from_npc_targets("fake_new_12")
end
function fake_new_13_remove()
  remove_npc_from_npc_targets("fake_new_13")
end
function fake_new_14_remove()
  remove_npc_from_npc_targets("fake_new_14")
end
  local lua_random_npces={}
function register_lua_random_npc(obj)
  if IsStalker(obj) then
  local community = obj:community()
    if obj.alive~=nil and obj:alive()==true and alife():level_name(game_graph():vertex(obj.m_game_vertex_id):level_id())~=alife():level_name(alife():level_id()) and (community=="stalker" or community=="dolg" or community=="freedom" or community=="green" or community=="ecolog") then
    --ODS("#~C0 неписи: "..obj:profile_name().." :~C07")
      table.insert(lua_random_npces,{id=obj.id,prof=obj:profile_name()})
    end
  end
end
function unregister_lua_random_npc(obj)
  if IsStalker(obj) then
    if lua_random_npces~=nil then
      for kk,vv in pairs(lua_random_npces) do
        if vv.id==obj.id then
          table.remove(lua_random_npces, kk)
        end
      end
    end
  end
end

function load_npc_targets()
  return xray_vars.load_table(nlc_vars, "npc_targets", {})
end

function stalker_show(tip)
  local targets=load_npc_targets()
  for kk,vv in pairs(targets) do
    if vv.tips==tip then
    show_search_stalker(vv.id)
    break
    end
  end
end
function stalker_bar_show()
  local bar_npces={}
  for a,i in pairs(db.storage) do
    objg=client_obj(a)
    if objg then
      if objg and IsStalker(objg) and objg:alive() and objg:character_community()=="stalker" and objg:story_id()==NONE_CL_SID and objg:position():distance_to(db.actor:position())>25 then
      table.insert(bar_npces,a)
      end
    end
  end
  if table.getn(bar_npces)>0 then
  local rand=lua_random(1,table.getn(bar_npces))
  show_search_stalker(bar_npces[rand])
  add_npc_id_to_npc_targets(bar_npces[rand],"bar_red_x16_dialog","bar_red_x16")
  end
end
function search_npc(profil,dialog,tips)
  local npces={}
  for kk,vv in pairs(lua_random_npces) do
    if vv.prof==profil then
      table.insert(npces,vv.id)
    end
  end
  if table.getn(npces)>0 then
  add_npc_id_to_npc_targets(npces[1],dialog,tips)
  return true
  end
  return false
end
function show_search_stalker(npc_id)
  local text_who,text_where
  text_who,text_where=format_search_text(npc_id)
  if text_who~=nil and text_who~="" and text_where~=nil and text_where~="" then
    db.actor:give_talk_message(text_who,"ui\\ui_iconsTotal",Frect():set(0,0,0,0), "simple_answer_item")
    db.actor:give_talk_message(text_where,"ui\\ui_iconsTotal",Frect():set(0,0,0,0), "simple_answer_item")
  end
end
function format_search_text(id)
  local rwd={}
  local text_who, text_where="",""
  local obj=g_sim:object(id)
  if obj==nil then return "" end
  local m_level = news_main.get_point_description(news_main.get_object_levelname(obj), news_main.get_object_position(obj))
  local name=news_main.get_npc_name(obj)
    text_who="«овут его "..name
    text_where=m_level.." вроде он был последний раз..."
  return text_who, text_where
end
function add_npc_id_to_npc_targets(id,dialog,tip)
  local targets=load_npc_targets()
    local item = { id=id,dialog=dialog,tips=tip }
  table.insert(targets,item)  -- наполнение как у стандартного массива
  -- wprintf("targets dump:")
  -- misc.dump_table(targets)
  nlc_vars.npc_targets = targets
    -- wprintf(" saved: ")
    -- misc.dump_table(nlc_vars.npc_targets(true))
    --
end
  sak_dialog.add_npc_id_to_npc_targets = add_npc_id_to_npc_targets

function remove_npc_from_npc_targets(tip)
  local targets=load_npc_targets()
  for n,v in pairs(targets) do
    if v.tips==tip then
      table.remove(targets,n)
    end
  end
    nlc_vars.npc_targets = targets
end

function kill_targets()
  return load_npc_targets()
end
function out_esc_bandits()
  local ids,cnt = registry.clsid_objects(CLID_STALKER, CLID_STALKER, true, nil, 15)
  for n=1,cnt do
  local id = ids[n]
  local obj=client_obj(id)
    if obj and obj:name() and strpos(obj:name(),"esc_factory_bandit",1,true) then
      g_sim:release(g_sim:object(id), true)
    end
  end
end

function hellcars_today()
  local ghour = level.get_time_hours()
  if ghour<20 then return true
  else return false
  end
end
function hellcars_tomoro()
   return not hellcars_today()
end
function have_any_art()
  for i,k in pairs(sak_inventory.rucksack) do
    if strposx(i, "af_") and not strposx(i, "af_full_akkum") and not strposx(i, black_tip.section)  then
      return true
    end
  end
end

function give_specified_art(list) -- получить артефтакт, если его секци€ внесена в таблицу
  -- типичный многомерный цикл розыска пересечени€ секций и существующих предметов
  for num, sec in ipairs(list)  do
    for i, names in pairs(sak_inventory.rucksack) do
      if strposx(i, sect) then
        for ii, name in ipairs(names) do
         local obj = g_sim:object(name)
         if obj then
            g_sim:release(obj, true)
            sak.relocate_item(db.actor, "out", sect, 1)
            return true
         end -- if exist obj
        end -- for each name
      end -- if section good
    end -- for rucksack
 end -- for list
 return false
end

function give_any_art()
  if      give_specified_art(table_aart) then
  elseif  give_specified_art(table_bart) then
  elseif  give_specified_art(table_capsule) then
  elseif  give_specified_art(table_cart) then
   return give_specified_art(table_dart)
  end
  return true
end

function rand_plus()
  local rand = amk_vars.r_treas_items or 1
  local art  = amk_vars.r_art or 2
  local r    = (rand+art) % 3
  return r
end
function rand_1_pda_repair_dialog()
  return rand_plus()==0
end
function rand_2_pda_repair_dialog()
  return rand_plus()==1
end
function rand_3_pda_repair_dialog()
  return rand_plus()==2
end
function pda_repair_dialog_done()
  local art = amk_vars.r_art or 3
  amk_vars.r_art = art + 1
end
function rand_1_dialog()
  local rand=amk_vars.r_treas_items or 1
  if rand==1 then
     return true
  end
end
function rand_2_dialog()
  local rand=amk_vars.r_treas_items or 1
  if rand==2 then
     return true
  end
end
function rand_3_dialog()
  local rand=amk_vars.r_treas_items or 1
  if rand==3 then
     return true
  end
end
function is_darkscape()
  return level.name()=="k01_darkscape"
end
function time_is_01()
  local m_h = level:get_time_hours()
  return m_h==1
end
function time_is_02()
  local m_h = level:get_time_hours()
  return m_h==2
end
function time_is_03()
  local m_h = level:get_time_hours()
  return m_h==3
end
function time_is_04()
  local m_h = level:get_time_hours()
  return m_h==4
end
function time_is_05()
  local m_h = level:get_time_hours()
  return m_h==5
end
function time_is_06()
  local m_h = level:get_time_hours()
  return m_h==6
end
function time_is_07()
  local m_h = level:get_time_hours()
  return m_h==7
end
function time_is_08()
  local m_h = level:get_time_hours()
  return m_h==8
end
function time_is_09()
  local m_h = level:get_time_hours()
  return m_h==9
end
function time_is_10()
  local m_h = level:get_time_hours()
  return m_h==10
end
function time_is_11()
  local m_h = level:get_time_hours()
  return m_h==11
end
function time_is_12()
  local m_h = level:get_time_hours()
  return m_h==12
end
function time_is_13()
  local m_h = level:get_time_hours()
  return m_h==13
end
function time_is_14()
  local m_h = level:get_time_hours()
  return m_h==14
end
function time_is_15()
  local m_h = level:get_time_hours()
  return m_h==15
end
function time_is_16()
  local m_h = level:get_time_hours()
  return m_h==16
end
function time_is_17()
  local m_h = level:get_time_hours()
  return m_h==17
end
function time_is_18()
  local m_h = level:get_time_hours()
  return m_h==18
end
function time_is_19()
  local m_h = level:get_time_hours()
  return m_h==19
end
function time_is_20()
  local m_h = level:get_time_hours()
  return m_h==20
end
function time_is_21()
  local m_h = level:get_time_hours()
  return m_h==21
end
function time_is_22()
  local m_h = level:get_time_hours()
  return m_h==22
end
function time_is_23()
  local m_h = level:get_time_hours()
  return m_h==23
end
function time_is_24()
  local m_h = level:get_time_hours()
  return m_h==0 or m_h==24
end
function rand_game_1()
  local m=amk_vars.r_treas_items or 1
  return m==1
end
function rand_game_2()
  local m=amk_vars.r_treas_items or 1
  return m==2
end
function rand_game_3()
  local m=amk_vars.r_treas_items or 1
  return m==3
end
function have_info_flamethrower()
  if db.actor:has_info("flame_reload_receipt_have") or db.actor:has_info("game_over") then
  return true
  else
  return false
  end
end
function esc_solder_rand_rec()
    local m=amk_vars.r_treas_items or 1
  if (m==1 and not db.actor:has_info("info_amk_recipt_steel_kolobok")) or (m==2 and not db.actor:has_info("info_amk_recipt_shkura")) or (m==3 and not db.actor:has_info("info_amk_recipt_tears_fire")) then
  return true
  else
  return false
  end
end
function add_mil_trader_art()
  local m=amk_vars.r_task_reward or 1
  local k=(amk_vars.r_treas_items or 1)+2
  if m==1 then
  sak.create_items(db.actor,"af_rusty_sea-urchin_dyn"..k.."d",1)
  elseif m==2 then
  sak.create_items(db.actor,"af_night_star_dyn"..k.."d",1)
  elseif m==3 then
  sak.create_items(db.actor,"af_gold_fish_dyn"..k.."d",1)
  elseif m==4 then
  sak.create_items(db.actor,"af_electra_moonlight_dyn"..k.."d",1)
  else
  sak.create_items(db.actor,"af_cristall_dyn"..k.."d",1)
  end
end

function esc_solder_not_rand_rec()
  return not esc_solder_rand_rec()
end
function klava_done()
  if db.actor:has_info("vergas_klava_done") or not db.actor:has_info("new_vergas_klava_rep") or (db.actor:has_info("new_vergas_klava_rep") and db.actor:has_info("vergas_klava_rep_info")) then
    return true
  else
    return false
  end
end
function not_klava_done()
  return not klava_done()
end
local vergas_rs=lua_random(1,4)
function vergas_rep_have()
  local vergas_rems=nlc_vars.vergas_rem or 0
  if vergas_rems<=vergas_rs then return true
  else
  return false
  end
end
function vergas_rep_not_have()
  return not vergas_rep_have()
end
function vergas_rep_add()
  local vergas_rems=nlc_vars.vergas_rem or 0
  nlc_vars.vergas_rem = (vergas_rems+1)
end

function kompass_have()
  return sak.have_items_count("af_compass",1)~=false
end
function relocate_kompass_esc_mar(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"esc_tele_mar")
end
function relocate_kompass_esc_dsc(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"esc_tele_dsc")
end
function relocate_kompass_esc_mil(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"esc_tele_mil")
end
function relocate_kompass_esc_yan(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"esc_tele_yan")
end
function relocate_kompass_esc_prip(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"esc_tele_prip")
end
function relocate_kompass_yan_esc(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"yan_tele_esc")
end
function relocate_kompass_yan_mil(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"yan_tele_mil")
end
function relocate_kompass_yan_prip(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"yan_tele_prip")
end
function relocate_kompass_mil_esc(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"mil_tele_esc")
end
function relocate_kompass_mil_yan(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"mil_tele_yan")
end
function relocate_kompass_mil_prip(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"mil_tele_prip")
end
function relocate_kompass_prip_esc(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"prip_tele_esc")
end
function relocate_kompass_prip_yan(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"prip_tele_yan")
end
function relocate_kompass_prip_mil(first_speaker, second_speaker)
  relocate_kompass(first_speaker, second_speaker,"prip_tele_mil")
end
function relocate_kompass(first_speaker, second_speaker,way)
  for i,k in pairs(sak_inventory.rucksack) do
    if strpos(i,"af_compass") and not strpos(i,"af_compass_dyn6d") then
    local obj_id=k[1]
    local obj=g_sim:object(obj_id)
      if obj then
      local pk = get_netpk(obj,1)
      local data = pk:get()
      data.custom_data = way
      pk:set(data)
      sak_inventory.relocate_actor_items(second_speaker,"af_compass",1)
      break
      end
    end
  end
end
function return_kompass(first_speaker,second_speaker)
  for n=1,6 do
    local obj=first_speaker:object("af_compass_dyn"..n.."d")
    if obj then
    first_speaker:transfer_item(obj, second_speaker)
    sak.relocate_item(second_speaker, "in", "af_compass", 1)
    end
  end
end
  local stas_art="medusa"
function stas_give_gameart(first_speaker, second_speaker)
  for i=1, table.getn(table_aart) do
    if sak.have_items_count(table_aart[i],1) then
      sak_inventory.relocate_actor_items(second_speaker,table_aart[i],1)
      stas_art=table_aart[i]
      break
    end
  end
end
function stas_return_gameart(first_speaker, second_speaker)
  for n=1,6 do
    local obj=first_speaker:object(stas_art.."_dyn"..n.."d")
    if obj then
    first_speaker:transfer_item(obj, second_speaker)
    sak.relocate_item(second_speaker, "in", stas_art, 1)
    break
    end
  end
end
function stas_out_gameart(first_speaker, second_speaker)
  for n=1,6 do
    local obj=first_speaker:object(stas_art.."_dyn"..n.."d")
    if obj then
    misc.release_obj(obj, 'stas_out_gameart')
    break
    end
  end
end
function gg_hangry()
  local s_healh=params.actor_satiety_health()
  return s_healh<0.3
end
function gg_very_hangry()
  local s_healh=params.actor_satiety_health()
  return s_healh<0.04
end
function gg_vrach()
  return gg_character(1)
end
function gg_botan()
  return gg_character(2)
end
function gg_oper()
  return gg_character(3)
end
function gg_bandit()
  return gg_character(4)
end
function gg_spec()
  return gg_character(5)
end
function gg_hunter()
  return gg_character(6)
end
function gg_igrok()
  return gg_character(7)
end
function gg_character(tip)
  local character=math.floor(( (amk_vars.r_task_reward or 1)+(amk_vars.x18_iq_check or 1) )/2)
  return character==tip
end

function goodwill_above(needed) -- above or equal (!)
 if not dialog_params then
    return false
 end
 needed = tonumber(needed or 0)

 dump_table(dialog_params)
 npc_id = dialog_params.speaker_id
 if npc_id == 0 then
    npc_id = dialog_params.speaker2_id
 end

 local sp1 = client_obj(0)
 local sp2 = client_obj(npc_id)
 if sp1 and sp2 then
   local now = sp2:goodwill(sp1)
   wprintf(" check goodwill~C0A %s~C07 to~C0A %s~C0D %d~C0B >=~C0D %d~C07", sp2:name(), sp1:name(), now, needed)
   if now >= needed then
      return true
   end
 end
 return false
end

function goodwill_less(needed)
 return not goodwill_above(needed)
end


function item_add(section, count)
  sak.create_items(db.actor, section, count)
end

function item_add_random(section, max_count)
  local rand=lua_random(1, max_count)
  sak.create_items(db.actor, section, rand)
end

function item_have(section)
  return sak.have_items_count(section) ~= false
end

function item_give(section, count, reward_pts)
  sak_inventory.release_actor_items(section, count)
  if reward_pts then
     xr_statistic.quest_success("st_items_delivered", reward_pts)
  end
end


function add_max_nagrad()
  sak.create_items(db.actor,"vodka",1)
  sak.create_items(db.actor,"wpn_eagle_m1",1)
end
function add_flesh_leather()
  sak.create_items(db.actor,"flesh_leather",1)
end
function flesh_leather_have()
  return sak.have_items_count("flesh_leather",1)~=false
end
function give_flesh_leather()
  sak_inventory.release_actor_items("flesh_leather", 1)
end
function flesh_2leather_have()
  return sak.have_items_count("flesh_leather",2)~=false
end
function give_flesh_2leather()
  sak_inventory.release_actor_items("flesh_leather", 2)
end
function flesh_3leather_have()
  return sak.have_items_count("flesh_leather",3)~=false
end
function give_flesh_3leather()
  sak_inventory.release_actor_items("flesh_leather", 3)
end
function flesh_4leather_have()
  return sak.have_items_count("flesh_leather",4)~=false
end
function give_flesh_4leather()
  sak_inventory.release_actor_items("flesh_leather", 4)
end
function add_stepanych_1plash()
  sak.create_items(db.actor,"bandit_veteran_outfit",1)
end
function add_stepanych_1plash_gas()
  sak.create_items(db.actor,"bandit_veteran_outfit_gas",1)
end
function add_stepanych_2plash()
  sak.create_items(db.actor,"bandit_master_outfit",1)
end
function add_stepanych_2plash_gas()
  sak.create_items(db.actor,"bandit_master_outfit_gas",1)
end

function flesh_shkura_have()
  return sak.have_items_count("mutant_flesh_shkura",1)~=false
end
function give_flesh_shkura()
  sak_inventory.release_actor_items("mutant_flesh_shkura", 1)
end
function flesh_2shkura_have()
  return sak.have_items_count("mutant_flesh_shkura",2)~=false
end
function give_flesh_2shkura()
  sak_inventory.release_actor_items("mutant_flesh_shkura", 2)
end
function flesh_4shkura_have()
  return sak.have_items_count("mutant_flesh_shkura",4)~=false
end
function give_flesh_4shkura()
  sak_inventory.release_actor_items("mutant_flesh_shkura", 4)
end
function add_meshok()
  sak.create_items(db.actor,"solt_bag",1)
end
function meshok_have()
  return sak.have_items_count("solt_bag",1)~=false
end
function give_meshok()
  sak_inventory.release_actor_items("solt_bag", 1)
end
function add_acid_banka()
  sak.create_items(db.actor,"acid_banka",1)
end
function acid_banka_have()
  return sak.have_items_count("acid_banka",1)~=false
end
function give_acid_banka()
  sak_inventory.release_actor_items("acid_banka", 1)
end
function add_cristall_flower()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_cristal_flower_dyn"..rand.."d",1)
end
function add_drops()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_drops_dyn"..rand.."d",1)
end
function add_blood()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_blood_dyn"..rand.."d",1)
end
function add_vyvert()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_vyvert_dyn"..rand.."d",1)
end
function take_vyvert()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_vyvert_dyn"..rand.."d",1)
end
function add_medusa()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_medusa_dyn"..rand.."d",1)
end
function add_gravi()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_gravi_dyn"..rand.."d",1)
end
function add_mincer_meat()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_mincer_meat_dyn"..rand.."d",1)
end
function add_electra_flash()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_electra_flash_dyn"..rand.."d",1)
end
function add_electra_sparkler()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_electra_sparkler_dyn"..rand.."d",1)
end
function add_electra_moonlight_capsule()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_electra_moonlight_capsule_dyn"..rand.."d",1)
end
function add_fireball()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_fireball_dyn"..rand.."d",1)
end
function add_ameba_slug()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_ameba_slug_dyn"..rand.."d",1)
end
function add_rusty_kristall()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_rusty_kristall_dyn"..rand.."d",1)
end
function add_night_star()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_night_star_dyn"..rand.."d",1)
end
function add_gold_fish()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_gold_fish_dyn"..rand.."d",1)
end
function add_soul()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_soul_dyn"..rand.."d",1)
end
function add_electra_moonlight()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_electra_moonlight_dyn"..rand.."d",1)
end
function add_cristall()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_cristall_dyn"..rand.."d",1)
end
function add_ameba_mica()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_ameba_mica_dyn"..rand.."d",1)
end
function add_rusty_sea_urchin()
  local rand=lua_random(1,4)
  sak.create_items(db.actor,"af_rusty_sea-urchin_dyn"..rand.."d",1)
end
function add_dummy_spring()
  sak.create_items(db.actor,"af_dummy_spring",1)
end
function add_dummy_dummy()
  sak.create_items(db.actor,"af_dummy_dummy",1)
end
function add_dummy_battery()
  sak.create_items(db.actor,"af_dummy_battery",1)
end
function add_dummy_pellicle()
  sak.create_items(db.actor,"af_dummy_pellicle",1)
end
function add_dummy_glassbeads()
  sak.create_items(db.actor,"af_dummy_glassbeads",1)
end

function take_2_ak74()
  sak.create_items(db.actor, "vodka",5)
  --sak.create_items(db.actor, "ammo_super_gauss",30)
  --sak.create_items(db.actor, "af_babka_3",1)
  --sak.create_items(db.actor, "af_spirit_4",2)
  --sak.create_items(db.actor, "dollars5",2)
  --sak.create_items(db.actor, "dollars1",2)
end
function take_sakharov_mil_kurjer_1nagrad()
  sak.create_items(db.actor, "ammo_12x76_zhekan",10)
end
function take_sakharov_mil_kurjer_2nagrad()
  sak.create_items(db.actor,"medkit_scientic",5)
  sak.create_items(db.actor,"antirad",5)
  sak.create_items(db.actor,"suhpay",5)
end
function add_outfit_neumeha()
  local points={
  1.1544072628021,7.4998812675476,18.371746063232,241841,488,
  -28.24542427063,4.9999976158142,-3.1245086193085,231059,682,
  16.459121704102,-1.9259337186813,2.3280971050262,236709,487,
  41.057662963867,2.4978001117706,-16.402126312256,279274,663,
  28.686042785645,4.8176741600037,-32.532073974609,278644,663,
  34.529563903809,9.2246599197388,-20.568384170532,278644,663,
  69.733047485352,0.54690098762512,20.116687774658,305852,671,
  61.037391662598,1.2793383598328,-20.495662689209,304519,671,
  -17.107900619507,0.98500883579254,-11.403326034546,304519,671,
  -11.100729942322,-0.20154552161694,35.173683166504,230399,490
}
  local rand=lua_random(1,10)*5
  local obj=amk.spawn_item("physic_destroyable_object",sak.v3f(points[rand-4],points[rand-3],points[rand-2]),points[rand],points[rand-1])
  if obj then
    local pk = get_netpk(obj,1)
    local data = pk:get()
    data.visual_name = "physics\\box\\box_wood_01.ogf"
    data.custom_data = "[drop_box]\ncommunity = def_box\nitems = stalker_outfit_m3"
    data.mass = 10
    pk:set(data)
  end
end

function add_boloto_dinamit()
  g_sim:create("dynamite",sak.v3f(273.89840698242,9.7082767486572,66.893074035645),311890,3527)
end
function add_sanat_dinamit()
  g_sim:create("dynamite",sak.v3f(-103.876633,34.247833,615.258545),162,3028)
end
function add_kishka_dinamit()
  g_sim:create("dynamite",sak.v3f(238.81538391113,-3.7692546844482,566.88269042969),679465,4102)
end
function add_sidor_dinamit()
  g_sim:create("dynamite",sak.v3f(-164.822265625,-19.815210342407,-129.96162414551),81353,55)
end

function add_drunk_abakan()
  local points={
  {-16.97483062744,14.2,46.94319915771,9400,3327},
  {-18.81781578064,14.2,49.63105010986,9005,3327},
  {2.2395524978638,15.7,37.87773895263,14221,3330},
  {82.932456970215,10.2,33.28562927246,38642,3333},
  {81.270751953125,10.2,40.08720397949,38189,3333},
  {76.121879577637,10.1,26.44740104675,36735,3333},
  {64.034172058105,11.5,52.59435272216,32969,3336},
  }
  local rand=lua_random(#points)
  g_sim:create("wpn_abakan_m2",sak.v3f(points[rand][1],points[rand][2],points[rand][3]),points[rand][4],points[rand][5])
end
function add_drunk_dolg_treasure()
  local treases={2113,5864}
  local sid=lua_random(1,#treases)
  local obj= g_sim:story_object(treases[sid])
  if obj then
     misc.spawn_to("drunk_dolg_letter", obj)
     misc.spawn_to("vodka", obj)
  end
end
function add_hunters_treasure1()
  local obj1 = g_sim:story_object(story_ids.dsc_inventory_box_10)
  if obj1 then
  local item = ""
  local count = lua_random(4,5)
    for i=1,count do
    item = nagrad.level_4[lua_random(table.getn(nagrad.level_4))]
    g_sim:create(item,obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    end
  end
end
function add_stalker_treasure()
  local obj1 = g_sim:story_object(story_ids.red_treasure_4)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3", "“айник сталкера")  
  if obj1 then
    g_sim:create("af_soul_capsule_dyn2d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("af_cristall_capsule_dyn2d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("af_gold_fish_capsule_dyn3d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("af_night_star_capsule_dyn3d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("af_electra_flash_dyn4d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
end
function add_skull_gift()
  local obj1 = g_sim:story_object(story_ids.bar_inventory_box_0006)
  if obj1 then
  local item = ""
  local count = lua_random(1,2)
    for i=1,count do
    item = table_dart[lua_random(table.getn(table_dart))]
    g_sim:create(item,obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    end
  end
end
function add_hunters_treasure2()
  local obj1 = g_sim:story_object(story_ids.mar_q_n_13)
  if obj1 then
  local item = ""
  local count = lua_random(4,5)
    for i=1,count do
    item = nagrad.level_3[lua_random(table.getn(nagrad.level_3))]
    g_sim:create(item,obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    end
  end
end
function add_hunters_treasure3()
  local obj1 = g_sim:story_object(story_ids.red_treasure_25)
  if obj1 then
  local item = ""
  local count = lua_random(4,5)
    for i=1,count do
    item = nagrad.level_5[lua_random(table.getn(nagrad.level_5))]
    g_sim:create(item,obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    end
  end
end
function add_hunters_toz_in1()
  local obj1 = g_sim:story_object(story_ids.dsc_inventory_box_17)
  g_sim:create("wpn_toz34_m1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
function add_hunters_toz_in2()
  local obj1 = g_sim:story_object(story_ids.dsc_inventory_box_03)
  g_sim:create("wpn_toz34_m1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
function add_hunters_toz_in3()
  local obj1 = g_sim:story_object(story_ids.dsc_inventory_box_05)
  g_sim:create("wpn_toz34_m1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
function add_hunters_toz_in4()
  local obj1 = g_sim:story_object(story_ids.dsc_inventory_box_07)
  g_sim:create("wpn_toz34_m1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
function fill_agr_u_treasure()
  local obj1 = g_sim:story_object(story_ids.agr_und_inventory_box)
  g_sim:create("redcatcher_albom",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
end
function fill_red_terasure()
  local obj1 = g_sim:story_object(story_ids.red_inventory_box_01)
  local rand = lua_random(3,5)
  for a=1,rand do
    local section=table_bart[lua_random(1,#table_bart)]
    local b=lua_random(2,4)
    if not strpos(section, "_new",1,true) and not strpos(section, "_dummy_",1,true) then
    section=section.."_dyn"..b.."d"
    end
    g_sim:create(section,obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  g_sim:create("red_shtreck_letter",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
end
function fill_food_prip()
  local rand = lua_random(3,5)
  for a=1,rand do
    g_sim:create("bread",vector():set(-2.82+(a*0.03),-4.05,192.28+(a*0.03)),97081,2195)
  end
  rand = lua_random(3,6)
  for a=1,rand do
    g_sim:create("kolbasa",vector():set(-2.82+(a*0.05),-4.05,193.12+(a*0.03)),97951,2195)
  end
end

function dar_document3_have()
  return sak.have_items_count("dar_document3",1) and not sak.have_items_count("dar_document5",1)
end
function give_dar_document3()
  sak_inventory.release_actor_items("dar_document3",1)
end
function dar_document5_have()
  return sak.have_items_count("dar_document5",1) and not sak.have_items_count("dar_document3",1)
end
function give_dar_document5()
  sak_inventory.release_actor_items("dar_document5",1)
end
function dar_document35_have()
  return sak.have_items_count("dar_document5",1) and sak.have_items_count("dar_document3",1)
end
function give_dar_document35()
  sak_inventory.release_actor_items("dar_document3",1)
  sak_inventory.release_actor_items("dar_document5",1)
end
function fill_bar_new_game()
  local obj1 = g_sim:story_object(story_ids.bar_inventory_box)
  g_sim:create("razgruzka",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("podsumok",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
end
function start_time_ivancov_good()
  timers.start_timer("time_ivancov_done",0,17,15,"sak.ivancov_case_good()")
end
function start_time_ivancov_good_done()
  timers.start_timer("time_ivancov_good_done",1,19,15,"sak.ivancov_case_good()")
end
function fill_ivancov_treasure()
    local obj1 = g_sim:story_object(story_ids.bar_inventory_box_0018)
    local rand = lua_random(3,5)
  for a=1,rand do
    local section=table_aart[lua_random(1,#table_bart)]
    local b=lua_random(2,4)
    if not strpos(section, "_new",1,true) and not strpos(section, "_dummy_",1,true) then
    section=section.."_dyn"..b.."d"
    end
    g_sim:create(section,obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
end
function start_time_ivancov_case()
  timers.start_timer("time_ivancov_case",1,1,15,"ivancov_case_enemy()")
end
function stop_time_ivancov_case()
  timers.stop_timer("time_ivancov_case")
end
function ivancov_case_enemy()
  local ivancov=level_object_by_sid(505)
  if ivancov then
    ivancov:set_relation(game_object.enemy, db.actor)
  end
  xr_gulag.setGulagEnemy("bar_dolg_general", db.actor)
  xr_gulag.setGulagEnemy("bar_zastava", db.actor)
  xr_gulag.setGulagEnemy("bar_zastava_2", db.actor)
end
function dolg_mil_enemy()
  xr_gulag.setGulagEnemy("mil_dolg", db.actor)
end
function mil_dolg_payment()
  local art=rand_bart()
  sak.create_items(db.actor,art,1)
  relocate_money(db.actor, 25000, "in")
end

function text_talk_dialog(text_talk)
  db.actor:give_talk_message("%c[255,216,186,140]"..blowout_when.." "..text_talk,"ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
end
function give_marsh_tuzla_document()
  sak_inventory.release_actor_items("marsh_tuzla_document",1)
end
function marsh_tuzla_document_have()
  return sak.have_items_count("marsh_tuzla_document",1)~=false
end
function give_atp_bandit_pda()
  sak_inventory.release_actor_items("bar_lucky_pda",1)
end
function atp_bandit_pda_have()
  return sak.have_items_count("bar_lucky_pda",1)~=false
end
function atp_bandit_pda_not_have()
  return not atp_bandit_pda_have()
end
function spawn_items_on_escape()
  sak_spawn.spawn_items_on_levels("l01_escape")
end
function spawn_items_on_lost_village()
  sak_spawn.spawn_items_on_levels("lost_village")
end
function spawn_items_on_marsh()
  sak_spawn.spawn_items_on_levels("marsh")
end
function spawn_items_on_garbage()
  sak_spawn.spawn_items_on_levels("l02_garbage")
end
function spawn_items_on_agroprom()
  sak_spawn.spawn_items_on_levels("l03_agroprom")
end
function spawn_items_on_darkvalley()
  sak_spawn.spawn_items_on_levels("l04_darkvalley")
end
function spawn_items_on_bar()
  sak_spawn.spawn_items_on_levels("l05_bar")
end
function spawn_items_on_rostok()
  sak_spawn.spawn_items_on_levels("l06_rostok")
end
function spawn_items_on_military()
  sak_spawn.spawn_items_on_levels("l07_military")
end
function spawn_items_on_yantar()
  sak_spawn.spawn_items_on_levels("l08_yantar")
end
function add_bar_dolg_debt_dialog()
  search_npc("mil_Svoboda_regular","bar_dolg_debt_dialog","bar_dolg_debt_1")
end

function add_foto_lisyi()
  sak.create_items(db.actor, "foto_lisyi",1)
end
function add_mayatnik_lysyi()
  --sak.create_items(db.actor, "af_mayatnik_radar_new",2)
  sak.create_items(db.actor, "af_gold_fish",2)  
end
function add_udacha_art()
  sak.create_items(db.actor, "af_unknown_21_new",1)
end
function add_sbruy_desertir()
  sak.create_items(db.actor, "dolg_gaz_outfit_m1",1)
  sak.create_items(db.actor, "wpn_abakan",1)
end
function add_video_casset()
  sak.create_items(db.actor, "video_casset",1)
end
function batt_torch_have()
  return sak.have_items_count("batt_torch",10)~=false
end
function give_batt_torch()
  sak_inventory.release_actor_items("batt_torch", 10)
end
function add_doc_blood()
  sak.create_items(db.actor, "doc_blood",11)
end
function add_bes_pda()
  sak.create_items(db.actor, "bes_pda",1)
end
function add_tm_conserva()
  sak.create_items(db.actor, "conserva_tm",5)
end
function add_skryaga_foto()
  sak.create_items(db.actor, "skryaga_foto",1)
end
function add_dolg_outfit()
  sak.create_items(db.actor, "dolg_outfit",1)
end
function add_stalkers_letter()
  sak.create_items(db.actor, "stalker_letter",1)
end

function add_barmen_kill_stalker_1()
  --sak.create_items(db.actor, "stalker_letter",1)
  sak.create_items(db.actor, "af_unknown_9_new",1)
  sak.create_items(db.actor, "af_unknown_17_new",1)
end
function add_barmen_kill_stalker_2()
  --sak.create_items(db.actor, "stalker_letter",1)
  sak.create_items(db.actor, "af_unknown_8_new",1)
end
function add_personal_things()
  sak.create_items(db.actor, "personal_things",1)
end
function personal_things_have()
  return sak.have_items_count("personal_things",1)~=false
end
function give_personal_things()
  sak_inventory.release_actor_items("personal_things", 1)
end
function add_device_pda_npc_gg()
  sak.create_items(db.actor, "device_pda_npc_gg",1)
end
function device_pda_npc_gg_have()
  return sak.have_items_count("device_pda_npc_gg",1)~=false
end
function give_device_pda_npc_gg()
  sak_inventory.release_actor_items("device_pda_npc_gg", 1)
end
function flask_army_have()
  return sak.have_items_count("flask_army",1)~=false
end
function add_scarman_remember()
  sak.send_tip("Ётот мужик со шрамом...  то-то знакомый, вроде?","¬оспоминание",2,20,"g_g","rememb","yellow")
end

function luber_ammunition()
  treasure_manager.get_treasure_manager():give_treasure("aver_secret_luber_ammunition")
end
function rashpil_treasure()
  treasure_manager.get_treasure_manager():give_treasure("dsc_secret_rashpil")
end
function add_rashpil_letter()
  sak.create_items(db.actor, "rashpil_letter",1)
end
function have_rashpil_letter()
  return sak.have_items_count("rashpil_letter",1)~=false
end
function give_rashpil_letter()
  sak_inventory.release_actor_items("rashpil_letter",1)
end
function rashpil_2treasure()
  local obj1 = g_sim:story_object(story_ids.dsc_inventory_box_09)
  local rand = lua_random(10,20)
  for a=1,rand do
      g_sim:create("grenade_f1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  local spot=lua_random(1,4)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure"..spot, "“айник с гранатами")
end
function lost_pda_1spot()
  local obj1 = g_sim:story_object(story_ids.aver_metka_01)
  if obj1 then
  local spot=lua_random(1,4)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure"..spot, "¬роде как пещерка со складом должна быть.")
  end
end

function add_belt_2_art()
  sak.create_items(db.actor, "belt_2_art",1)
end
function add_belt_3_art()
  sak.create_items(db.actor, "belt_3_art",1)
end
function add_belt_4_art()
  sak.create_items(db.actor, "belt_4_art",1)
end
function add_belt_5_art()
  sak.create_items(db.actor, "belt_5_art",1)
end
function add_belt_6_art()
  sak.create_items(db.actor, "belt_6_art",1)
end
function have_belt_2_art()
  return sak.have_items_count("belt_2_art",1)
end
function have_belt_3_art()
  return sak.have_items_count("belt_3_art",1)
end
function have_belt_4_art()
  return sak.have_items_count("belt_4_art",1)
end
function have_belt_5_art()
  return sak.have_items_count("belt_5_art",1)
end
function give_belt_2_art()
  sak_inventory.release_actor_items("belt_2_art",1)
end
function give_belt_3_art()
  sak_inventory.release_actor_items("belt_3_art",1)
end
function give_belt_4_art()
  sak_inventory.release_actor_items("belt_4_art",1)
end
function give_belt_5_art()
  sak_inventory.release_actor_items("belt_5_art",1)
end
function add_akkum()
  sak.create_items(db.actor, "item_battery_02",1)
end
function give_akkum()
  sak_inventory.release_actor_items("item_battery_02",1)
end
function add_3_big_akkum()
  sak.create_items(db.actor, "item_battery_03",3)
end
function have_big_akkum()
  return sak.have_items_count("item_battery_03",1)
end

function give_af_full_akkum()
  sak_inventory.release_actor_items("af_full_akkum",1)
end
function af_full_akkum_2have()
  return sak.have_items_count("af_full_akkum",2)
end
function give_2af_full_akkum()
  sak_inventory.release_actor_items("af_full_akkum",2)
end
function add_trubka()
  sak.create_items(db.actor, "trubka",1)
end
function add_af_full_akkum()
  sak.create_items(db.actor, "af_full_akkum",1)
end
function add_vyvert_5d()
  sak.create_items(db.actor, "af_vyvert_dyn5d",1)
end
function add_kulinar_voron_box()
  sak.create_items(db.actor, "kulinar_voron_box",1)
  start_time("start_kulinar_voron_time")
end
function kulinar_voron_box_have()
  return sak.have_items_count("kulinar_voron_box",1)
end
function give_kulinar_voron_box()
  sak_inventory.release_actor_items("kulinar_voron_box",1)
end
function af_full_akkum_have()
  return sak.have_items_count("af_full_akkum",1)
end
function have_akkum()
  return sak.have_items_count("item_battery_02",1)
end
function add_point_1_scaner()
  local obj = g_sim:story_object(story_ids.scaner_1_space_restrictor)
  if obj then
     amk.add_spot_on_map(obj.id, "crlc_small","ћесто установки сканера є3")
  end
end
function add_point_2_scaner()
  local obj = g_sim:story_object(story_ids.scaner_2_space_restrictor)
  if obj then
     amk.add_spot_on_map(obj.id, "crlc_small","ћесто установки сканера є4")
  end
end
function add_point_3_scaner()
  local obj = g_sim:story_object(story_ids.scaner_3_space_restrictor)
  if obj then
     amk.add_spot_on_map(obj.id, "crlc_small","ћесто установки сканера є5")
  end
end
function add_uncoder()
  sak.create_items(db.actor, "uncoder",1)
end
function give_uncoder()
  sak_inventory.release_actor_items("uncoder",1)
end
function have_uncoder()
  return sak.have_items_count("uncoder",1)
end
function add_new_uncoder()
  sak.create_items(db.actor, "self_made_decoder",1)
end
function add_scaner()
  sak.create_items(db.actor, "scanner_anomaly",1)
end
function give_scaner()
  sak_inventory.release_actor_items("scanner_anomaly",1)
end
function have_scaner()
  return sak.have_items_count("scanner_anomaly",1)
end
function add_scaner_artefact()
  sak.create_items(db.actor, "scanner_artefact",1)
end
function give_scaner_artefact()
  sak_inventory.release_actor_items("scanner_artefact",1)
end
function have_scaner_artefact()
  return sak.have_items_count("scanner_artefact",1)
end
function add_blockpost_case()
  sak.create_items(db.actor, "quest_case_01",1)
  local obj = g_sim:story_object(story_ids.esc_quest_case_01)
  if obj then
     g_sim:release(obj, true)
  end
end
function add_art_capsule()
  local art_capsule=(nlc_vars.capsule_ready or "af_night_star_capsule")
  local art = string.gsub(art_capsule, "_capsule", "")
  sak.create_items(db.actor, art,1)
  nlc_vars.capsule_ready = nil
end
function add_podsumok()
  sak.create_items(db.actor, "podsumok",1)
end
function add_bearer_cheque()
  sak.create_items(db.actor, "bearer_cheque",1)
end
function add_2bearer_cheque()
  sak.create_items(db.actor, "2bearer_cheque",1)
end
function add4_bearer_cheque()
  sak.create_items(db.actor, "bearer_cheque",4)
end
function out_podsumok()
  local obj = g_sim:story_object(story_ids.esc_podsumok_01)
  if obj then
  g_sim:release(obj, true)
  end
end
function take_drag_cat_eyes()
  sak.create_items(db.actor, "drag_cat_eyes",1)
end
function add_razgruzka()
  sak.create_items(db.actor, "razgruzka",1)
end
function have_im_chain()
  return sak.have_items_count("im_chain",1)~=false
end
function add_1_ammo_ak()
  sak.create_items(db.actor, "ammo_ak",1)
end
function add_5_ammo_ak()
  sak.create_items(db.actor, "ammo_ak",5)
end
function add_10_ammo_ak()
  sak.create_items(db.actor, "ammo_ak",10)
end
function add_25_ammo_ak()
  sak.create_items(db.actor, "ammo_ak",25)
end
function give_food_by_tm()
  sak_inventory.release_actor_items("bread",10)
  sak_inventory.release_actor_items("conserva",10)
end
function have_food_by_tm()
  return sak.have_items_count("bread",10)~=false and sak.have_items_count("conserva",10)~=false
end
function give_food_by_shema()
  sak_inventory.release_actor_items("bread",5)
  sak_inventory.release_actor_items("conserva",5)
  vergas_lib.search_items("energy_drink",10,2)
end
function have_food_by_shema()
  return sak.have_items_count("bread",5)~=false and sak.have_items_count("conserva",5)~=false and vergas_lib.search_items("energy_drink",10,1)~=false
end

function actor_yantar_teleport_have()
 local obj_t=amk_vars.sak_teleport or 0
 if obj_t==0 then return false else return true end end
function actor_yantar_teleport_not_have()
 local obj_t=amk_vars.sak_teleport or 0
 if obj_t==0 then return true else return false end end
function actor_doktor_teleport_have()
 local obj_t=amk_vars.sak_teleport or 0
 if obj_t==0 then return false else return true end end
function actor_doktor_teleport_not_have()
 local obj_t=amk_vars.sak_teleport or 0
 if obj_t==0 then return true else return false end end

function give_wpnm16()
	if sak.have_items_count("wpn_m16a4",1) then
		sak_inventory.release_actor_items("wpn_m16a4",1)
	elseif sak.have_items_count("wpn_q_m16a4",1) then
		sak_inventory.release_actor_items("wpn_q_m16a4",1)
	end
end
function have_wpnm16()
  return sak.have_items_count("wpn_m16a4",1)~=false or sak.have_items_count("wpn_q_m16a4",1)~=false
end

function take_treasure_kirpich(first_speaker, second_speaker)
  treasure_manager.get_treasure_manager():give_treasure("mar_secret_kirpich")
end
function give_psy_helmet()
  if sak.have_items_count("good_psy_helmet",1)~=false then
        sak_inventory.release_actor_items("good_psy_helmet",1)
       nlc_vars.psy_helmet = "good_psy_helmet"
  else
     sak_inventory.release_actor_items("bad_psy_helmet",1)
     nlc_vars.psy_helmet = "bad_psy_helmet"
  end
end

function add_psy_helmet()
  local psy_helmet=(nlc_vars.psy_helmet or "bad_psy_helmet")
  sak.create_items(db.actor, psy_helmet,1)
  nlc_vars.psy_helmet = nil
end
function add_val_escort_PDA()
  sak.create_items(db.actor, "und_pda",1)
  local npc=level_object_by_sid(9542)
  if npc and npc:alive() and npc.online then
  npc:set_character_community("stalker",0,0)
  else
  local obj=g_sim:story_object(story_ids.shersh)
    if obj then
      local pk = get_netpk(obj)
      local data = pk:get()
      data.community_index=3
      pk:set(data)
    end
  end
end
function add_2empty_bank()
  sak.create_items(db.actor, "banka",2)
end
function give_2full_bank(first_speaker, second_speaker)
  --out_item_section_from_actor(first_speaker, second_speaker, "banka_full",2)
  sak_inventory.relocate_actor_items(second_speaker,"banka_full",2)
end
function have_2full_bank()
  return sak.have_items_count("banka_full",2)~=false
end
function give_full_bank(first_speaker, second_speaker)
  sak_inventory.relocate_actor_items(second_speaker,"banka_full",1)
end
function have_full_bank()
  return sak.have_items_count("banka_full",1)~=false
end

function have_strelok_flash()
  return sak.have_items_count("gunslinger_flash",1)
end
function give_strelok_flash()
  sak_inventory.release_actor_items("gunslinger_flash",1)
end
function add_strelok_flash()
  sak.create_items(db.actor, "gunslinger_flash",1)
end
function take_detector_sakbuzz_simple()
  sak.create_items(db.actor, "detector_sakbuzz_simple",1)
end
function take_psy_pribor()
  sak.create_items(db.actor, "decoder2",1)
end
function give_psy_pribor()
  sak_inventory.release_actor_items("decoder2",1)
end
function have_3_card()
  return sak.have_items_count("rad_cart",3)~=false
end
function havent_3_card()
  return sak.have_items_count("rad_cart",3)==false
end
function give_3_card()
  sak_inventory.release_actor_items("rad_cart",3)
end
function add_docs_rad_psy()
  sak.create_items(db.actor, "docs_rad_psy",1)
end
function have_docs_rad_psy()
  return sak.have_items_count("docs_rad_psy",1)~=false
end
function give_docs_rad_psy()
  sak_inventory.release_actor_items("docs_rad_psy",1)
end
function add_docs_2_rad_psy()
  sak.create_items(db.actor, "docs_2_rad_psy",1)
end
function have_docs_2_rad_psy()
  return sak.have_items_count("docs_2_rad_psy",1)~=false
end
function give_docs_2_rad_psy()
  sak_inventory.release_actor_items("docs_2_rad_psy",1)
end
function give_same_case()
  sak_inventory.release_actor_items("same_quest_case",1)
end
function have_psy_pribor()
  return sak.have_items_count("decoder2",1)~=false
end
function havent_psy_pribor()
  return sak.have_items_count("decoder2",1)==false
end
function add_klyk_med_spot1()
  sak.add_klyk_med_spots(9301)
end
function add_klyk_med_spot2()
  sak.add_klyk_med_spots(9302)
end
function add_klyk_med_spot3()
  sak.add_klyk_med_spots(9303)
end
function remove_klyk_med_spot1()
  sak.remove_klyk_med_spots(9301)
end
function remove_klyk_med_spot2()
  sak.remove_klyk_med_spots(9302)
end
function remove_klyk_med_spot3()
  sak.remove_klyk_med_spots(9303)
end
function add_yan_izm_spot1()
  sak.add_yan_izm_spots(9307)
end
function add_yan_izm_spot2()
  sak.add_yan_izm_spots(9308)
end
function add_yan_izm_spot3()
  sak.add_yan_izm_spots(9309)
end
function remove_yan_izm_spot1()
  sak.remove_klyk_med_spots(9307)
end
function remove_yan_izm_spot2()
  sak.remove_klyk_med_spots(9308)
end
function remove_yan_izm_spot3()
  sak.remove_klyk_med_spots(9309)
end
function add_rad_izm_spot1()
  sak.add_rad_izm_spots(9310)
end
function add_rad_izm_spot2()
  sak.add_rad_izm_spots(9311)
end
function add_rad_izm_spot3()
  sak.add_rad_izm_spots(9312)
end
function remove_rad_izm_spot1()
  sak.remove_rad_izm_spots(9310)
end
function remove_rad_izm_spot2()
  sak.remove_rad_izm_spots(9311)
end
function remove_rad_izm_spot3()
  sak.remove_rad_izm_spots(9312)
end

function add_ecolog_weapon()
  local sid_ecolog = { story_ids.bar_ecolog_professor,
                       story_ids.bar_ecolog_crush_1,
                       story_ids.bar_ecolog_crush_2,
                       story_ids.bar_ecolog_crush_3 }
  local g_sim = alife()
  for i=1,table.getn(sid_ecolog) do
  local obj = g_sim:story_object(sid_ecolog[i])
    if obj then
      g_sim:create("wpn_ak74u", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
      g_sim:create_ammo("ammo_5.45x39_ap", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id,120)
    end
  end
end
function monolit_instruments_spawn()
  g_sim:create("monolit_instruments_case", sak.v3f(188.23,-0.14,-184.93),335280,402)
end
function take_toz34m(first_speaker, second_speaker)
  --first_speaker:transfer_item(first_speaker:object("wpn_toz34_m1"), db.actor)
  --sak.relocate_item(second_speaker, "in", "wpn_toz34_m1", 1)
  first_speaker:transfer_item(first_speaker:object("wpn_hunters_toz_new"), db.actor)
  sak.relocate_item(second_speaker, "in", "wpn_hunters_toz_new", 1)  
end
function take_mutant_psevdodog_tail(first_speaker, second_speaker)
  local obj = misc.spawn_to ("mutant_psevdodog_tail", db.actor)
  if obj then
      schedule.add ("t_m_p_t","sak_dialog.take_psev_tail("..obj.id..")",200)
      sak.relocate_item(second_speaker, "in", "mutant_psevdodog_tail", 1)
  end
end
function take_psev_tail(id)
  params.obj_condition (id, 0.11)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = 0.11
  pk:set(data)
end
function take_fort_m(first_speaker, second_speaker)
  first_speaker:transfer_item(first_speaker:object("wpn_fort_m1"), db.actor)
  sak.relocate_item(second_speaker, "in", "wpn_fort_m1", 1)
end

function have_flamethrower()
  return sak.have_items_count("wpn_flame",1)~=false
end
function give_flamethrower()
  sak_inventory.release_actor_items("wpn_flame",1)
end
function have_reload_fuel()
  return sak.have_items_count("amk_kanistra",1)~=false and sak.have_items_count("amk_ballon",1)~=false
end
function give_reload_fuel()
  sak_inventory.release_actor_items("amk_kanistra",1)
  sak_inventory.release_actor_items("amk_ballon",1)
end
function have_flame_reload_items()
  return sak.have_items_count("amk_kanistra",3)~=false and sak.have_items_count("amk_ballon",3)~=false
end
function give_flame_reload_items()
  sak_inventory.release_actor_items("amk_kanistra",3)
  sak_inventory.release_actor_items("amk_ballon",3)
end

function have_flame_reload_kanistra()
  return sak.have_items_count("amk_kanistra",1)~=false
end

function have_flame_reload_ballon()
  return sak.have_items_count("amk_ballon",1)~=false
end

function take_treasure_by_toz(first_speaker, second_speaker)
  treasure_manager.get_treasure_manager():give_treasure("val_secret_oreh")
end
function take_treasure_oreh_by_shkura(first_speaker, second_speaker)
  treasure_manager.get_treasure_manager():give_treasure("dead_secret_oreh")
end
function fill_dead_oreh_treasure()
  local obj1=g_sim:story_object(story_ids.dc_inventory_box_cherdak_build)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","√де-то тут хабар ѕризрака")  
  if not obj1 then return end
  --sak.create_items(obj1, { "medkit_army", "antirad", "ammo_9x19_pbp", "ammo_5.45x39_ap", "ammo_vog-25p" }, 10)
    g_sim:create("wpn_m110",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("af_cry_4",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  for i=1,10 do
    g_sim:create("antirad",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("medkit_army",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_7.62x51_fmj",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_7.62x51_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)		
  end
  for i=1,5 do
    g_sim:create("conserva",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("energy_drink",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)		
  end  
end
function take_detector_sakbuzz_elite()
  sak.create_items(db.actor, "detector_sakbuzz_elite",1)
end
function take_level_changer_by_toz(first_speaker, second_speaker)
  sak.add_new_garbage_116()
  sak.add_new_darkvalley_117()
end
function give_1_dm_bandits(first_speaker, second_speaker)
  --dialogs.relocate_item_section(second_speaker, "wpn_toz34_m1", "out")
  dialogs.relocate_item_section(second_speaker, "wpn_hunters_toz_new", "out")  
end
function have_1_dm_bandits()
  --return sak.have_items_count("wpn_toz34_m1",1)~=false
  return sak.have_items_count("wpn_hunters_toz_new",1)~=false  
end
function take_psy_shield()
  sak.create_items(db.actor, "item_psi_helmet_02",1)
end
function give_psy_shield()
  sak_inventory.release_actor_items("item_psi_helmet_02",1)
end
function have_psy_shield()
  return sak.have_items_count("item_psi_helmet_02",1)
end
function not_have_psy_shield()
  return not have_psy_shield()
end

function give_flame_reload_kanistra()
  if sak.have_items_count("amk_kanistra",3)~=false then
    sak_inventory.release_actor_items("amk_kanistra",3)
    local cnt=(nlc_vars.kanistra_screw or 0)
    nlc_vars.kanistra_screw = cnt+3
  elseif sak.have_items_count("amk_kanistra",2)~=false then
    sak_inventory.release_actor_items("amk_kanistra",2)
    local cnt=(nlc_vars.kanistra_screw or 0)
    nlc_vars.kanistra_screw = cnt+2
  elseif sak.have_items_count("amk_kanistra",1)~=false then
    sak_inventory.release_actor_items("amk_kanistra",1)
    local cnt=(nlc_vars.kanistra_screw or  0)
    nlc_vars.kanistra_screw = cnt+1
  end
end

function give_flame_reload_ballon()
  if sak.have_items_count("amk_ballon",3)~=false then
    sak_inventory.release_actor_items("amk_ballon",3)
    local cnt=(nlc_vars.ballon_screw or 0)
    nlc_vars.ballon_screw = cnt+3
  elseif sak.have_items_count("amk_ballon",2)~=false then
    sak_inventory.release_actor_items("amk_ballon",2)
    local cnt=(nlc_vars.ballon_screw or 0)
    nlc_vars.ballon_screw = cnt+2
  elseif sak.have_items_count("amk_ballon",1)~=false then
    sak_inventory.release_actor_items("amk_ballon",1)
    local cnt=(nlc_vars.ballon_screw or 0)
    nlc_vars.ballon_screw = cnt+1
  end
end

function have_flame_reload_not_ballons()
  local cnt=(nlc_vars.ballon_screw or 0)
  return cnt<3
end
function have_flame_reload_all_ballons()
  local cnt=(nlc_vars.ballon_screw or 0)
  local cnt2=(nlc_vars.kanistra_screw or 0)
  return cnt>=3 and cnt2<3
end
function have_flame_reload_not_kanistras()
  local cnt=(nlc_vars.kanistra_screw or 0)
  return cnt<3
end
function have_flame_reload_all_kanistras()
  local cnt=(nlc_vars.ballon_screw or 0)
  local cnt2=(nlc_vars.kanistra_screw or 0)
  return cnt<3 and cnt2>=3
end
function have_flame_reload_full()
  local cnt=(nlc_vars.ballon_screw or 0)
  local cnt2=(nlc_vars.kanistra_screw or 0)
  return cnt>=3 and cnt2>=3
end

function clear_flame_reload_shurup()
  nlc_vars.ballon_screw = nil
  nlc_vars.kanistra_screw = nil
end
function give_klava_feik()
  sak_inventory.release_actor_items("klava_feik",1)
end
function add_klava()
  sak.create_items(db.actor, "klava",1)
end
function have_klava_feik()
  return sak.have_items_count("klava_feik",1)~=false
end
function add_klava()
  sak.create_items(db.actor, "klava",1)
end
function take_black_tip()
  if black_tip.have_black_tip() then return end
  sak.create_items(db.actor, black_tip.section, 1)
end
function out_black_tip()
  sak_inventory.release_actor_items(black_tip.section, 1)
  db.actor:disable_info_portion ("info_black_tip")
  nlc_vars.catched_bt = nil  
end
function have_black_tip()
  return ( black_tip.have_black_tip() ~= false )
end

function no_have_black_tip()
  return ( black_tip.have_black_tip() == false )
end
function add_yad()
  sak.create_items(db.actor, "yad2",1)
end

function give_black_tip()
  sak_inventory.release_actor_items(black_tip.section, 1)
end
function take_gift_by_weapon()
  sak.add_new_military()
  treasure_manager.get_treasure_manager():give_treasure("mil_secret_kruglov")
  relocate_money(db.actor, 2500, "in")
end
function take_gift_by_flash()
  sak.add_new_military()
  treasure_manager.get_treasure_manager():give_treasure("mil_secret_kruglov")
  relocate_money(db.actor, 25000, "in")
end
function take_gift_by_fmradio()
  sak.add_new_military()
  treasure_manager.get_treasure_manager():give_treasure("mil_secret_kruglov")
  relocate_money(db.actor, 5000, "in")
end
function take_yan_secret_kruglov()
  treasure_manager.get_treasure_manager():give_treasure("yan_secret_kruglov")
end
function take_gift_by_letter()
  --sak.add_new_military()
  sak.create_items(db.actor, "ecolog_outfit",1)
  relocate_money(db.actor, 1500, "in")
end
function take_gift_by_krysuk()
  sak.create_items(db.actor, "bandit_master_outfit",1)
end
function has_upgrade_info()
  if db.actor:has_info("agr_krot_secret_info") or db.actor:has_info("bar_darklab_document_gain") then return true else return false end
end
function havent_kruglov_weapon_done()
  if db.actor:has_info("kruglov_weapon_have_1") and db.actor:has_info("kruglov_weapon_have_2") and db.actor:has_info("kruglov_weapon_have_3") and db.actor:has_info("kruglov_weapon_have_4") then return false else return true end
end
function have_kruglov_weapon_done()
  if db.actor:has_info("kruglov_weapon_have_1") and db.actor:has_info("kruglov_weapon_have_2") and db.actor:has_info("kruglov_weapon_have_3") and db.actor:has_info("kruglov_weapon_have_4") then return true else return false end
end
function volkodav_have_start()
  if db.actor:has_info("volkodav_dt_shema_start") or db.actor:has_info("volkodav_dt_art_start") then return true else return false end
end
function volkodav_have_done()
  if db.actor:has_info("volkodav_dt_shema_done") or db.actor:has_info("volkodav_dt_art_done") then return true else return false end
end
function have_af_glassbeads()
  return sak.have_items_count("af_glassbeads",1)
end
function give_af_glassbeads()
  sak_inventory.release_actor_items("af_glassbeads",1)
end
function have_af_dummy_glassbeads()
  return sak.have_items_count("af_dummy_glassbeads",1)
end
function give_af_dummy_glassbeads()
  sak_inventory.release_actor_items("af_dummy_glassbeads",1)
end
function take_af_dummy_glassbeads()
  sak.create_items(db.actor, "af_dummy_glassbeads",1)
end
function add_agr_shema()
  sak.create_items(db.actor, "agr_shema",1)
end
function give_x16_documents()
  sak_inventory.release_actor_items("lab_x16_documents",1)
end
function add_x16_flash()
  sak.create_items(db.actor, "x16_flash",1)
end
function have_x16_flash()
  return sak.have_items_count("x16_flash",1)
end
function give_x16_flash()
  sak_inventory.release_actor_items("x16_flash",1)
end
function have_zub_flash()
  return sak.have_items_count("zub_flash",1)
end
function give_zub_flash()
  sak_inventory.release_actor_items("zub_flash",1)
end
function add_zub_flash()
  sak.create_items(db.actor, "zub_flash",1)
end
function give_agr_shema()
  sak_inventory.release_actor_items("agr_shema",1)
end
function add_bar_ecolog_flash()
  sak.create_items(db.actor, "bar_ecolog_flash",1)
end
function give_bar_ecolog_flash()
  sak_inventory.release_actor_items("bar_ecolog_flash",1)
end


sidor_blowout_dialog={
  "потр€сЄт нас.",
  "снова ударит.",
  "будем все, как тараканы разбегатьс€.",
  "мало не покажетс€..."
}
docent_blowout_dialog={
  "как жахнет!",
  "мало не покажетс€..."
}
saharov_blowout_dialog={
  "думаю начнЄтс€...",
  "может начатьс€ новый цикл."
}

blowout_when = ""

function do_blow_time()
  local when = ""
  if ((amk_vars.blowout or -1) > -1 and (amk_vars.blowout or -1) < 5) then return end
  local name, delay = timers.check_timer("blow_shift","amk_mod.Run_Blowout_pp()")
  local diff =(delay) / 60
  if (diff < 1) then
    when = "вот-вот наверно, минут через дес€ть, может двадцать"
  elseif (diff < 2) then
    when = "через час-другой"
  elseif (diff >= 2 and diff <=4) then
    when = "через пару часов"
  elseif (diff > 4 and diff <=8) then
    when = "часов через 6-7"
  elseif (diff > 8) then
    local m_h = level:get_time_hours()
    local n_h = m_h + diff
    if (n_h >= 9 and n_h < 11) then when = "утром" end
    if (n_h >= 11 and n_h < 14) then when = "днем" end
    if (n_h >= 14 and n_h < 18) then when = "после обеда" end
    if (n_h >= 18 and n_h < 22) then when = "вечером" end
    if (n_h >= 22 and n_h < 30) then when = "ночью" end
    if (n_h >= 30 and n_h < 34) then when = "завтра утром" end
    if (n_h >= 34 and n_h < 38) then when = "завтра днем" end
    if (n_h >= 38 and n_h < 42) then when = "завтра после обеда" end
    if (n_h >= 42 and n_h < 50) then when = "завтра ночью" end
    if (n_h >= 50) then when = "через день, может больше" end
  end
  blowout_when = when
end

function select_blowout_dialog(name)
  local lines = sak_dialog[name]
  local m = lua_random(#lines)
  return lines[m]
end

function sidor_blowout_dialog_end()
  local m_end = select_blowout_dialog("sidor_blowout_dialog")
  text_talk_dialog(m_end)
end
function docent_blowout_dialog_end()
  local m_end = select_blowout_dialog("docent_blowout_dialog")
  text_talk_dialog(m_end)
end
function saharov_blowout_dialog_end()
  local m_end = select_blowout_dialog("saharov_blowout_dialog")
  text_talk_dialog(m_end)
end


function give_bun_docs(first_speaker, second_speaker)
  out_item_section_from_actor(first_speaker, second_speaker, "bun_document", "all")
end
function x8_docs_have()
  return sak.have_items_count("x8_document",1)
end
function give_x8_docs(first_speaker, second_speaker)
  local kol=out_item_section_from_actor(first_speaker, second_speaker, "x8_document", "all")
  local n=(nlc_vars.kol_x8_docs or 0)
  nlc_vars.kol_x8_docs = (n+kol)
end
function show_x8_docs(first_speaker, second_speaker)
  local kol=#sak_inventory.rucksack["x8_document"]
  sak.relocate_item(db.actor, "out", "x8_document", kol)
  nlc_vars.kol_x8_docs = (kol)
end
function return_x8_docs(first_speaker, second_speaker)
  local n=(nlc_vars.kol_x8_docs or 0)
  sak.relocate_item(second_speaker, "in", "x8_document", n)
  nlc_vars.kol_x8_docs = 0
end
function x8_docs_all_have()
  local n=(nlc_vars.kol_x8_docs or 0)
  local m=amk_vars.r_task_reward or 1
  return n>(19+m)
end
function x8_docs_not_all_have()
  return not x8_docs_all_have()
end
function add_memory_module()
  amk.spawn_item("memory_module",sak.v3f(45.0,-22.48,51.25),3710,12129)
  amk.spawn_item("memory_module",sak.v3f(45.9,-22.48,51.25),3710,12194)
end
function add_esc_repair()
  local obj=g_sim:story_object(story_ids.esc_soldier_repair)
  if not obj then
     misc.spawn_by_name("esc_soldier_repair")
  end
end
function add_x10_docs_botans()
local obj=g_sim:story_object(story_ids.pesh_inventory_box_0003)
  if obj then
    sobj = g_sim:create("x10_document2",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  end
end
function x10_document2_have()
  return sak.have_items_count("x10_document2",1)
end

function give_x10_document2()
  sak_inventory.release_actor_items("x10_document2",1)
end
function harddisc_wiew()
  --db.actor:give_talk_message("", "ui\\ui_icon_equipment",Frect():set(1700,600,100,50),"iconed_item")
  db.actor:give_talk_message("", "ui\\ui_icon_equipment",Frect():set(750,850,100,50),"iconed_item")  
end
function x10_harddisc_have()
  return sak.have_items_count("hard_disc",1)
end
function give_x10_harddisc(first_speaker, second_speaker)
  local kol=out_item_section_from_actor(first_speaker, second_speaker, "hard_disc", "all")
  local n=(nlc_vars.kol_harddisc or 0)
  nlc_vars.kol_harddisc = n+kol
end
function x10_harddisc_all_have()
  local n=(nlc_vars.kol_harddisc or 0)
  return n>9
end
function x10_harddisc_not_all_have()
  return not x10_harddisc_all_have()
end

function text_code_x10()
  local n=amk_vars.x18_iq_check or 1
  local text={
  "56326", "85695", "75962",
  "86596", "85369", "35692",
  "39258", "54962", "47852"
  }
  db.actor:give_talk_message("%c[255,216,186,140]"..text[n],"ui\\ui_iconsTotal",Frect():set(0,0,0,0),"simple_answer_item")
    local need = "labx10_physic_destroyable_object_000"
  local obj = registry.find_object(need, true, server_obj)
    if obj then
    if strpos(obj:name(), need,1,true) then
      local pk = get_netpk(obj,1)
      local data = pk:get()
      data.visual_name = "physics\\small_trash\\wood_board_br_01b"
      data.physic_type=3
      pk:set(data)
    end
  end
  nlc_vars.kol_harddisc = nil
end

function add_art_junkman()
   local n=amk_vars.r_task_reward or 1
   local m=amk_vars.r_treas_items or 2
   m=n+m-1
   local section = (table_cart[m] or '?') .."_dyn"..n.."d"
   wprintf("#DBG: add_art_junkman, m = %d, art_for_spawn =~C0A %s~C07 ", m, section)
   sak.create_items(db.actor, section, 1)
end
--документы в  ишке спавн€тс€ в колонне под мостом
function add_x18_docs()
  local rand=(amk_vars.r_task_reward or 1)*5
  local points={
    387.678253,-0.766031,363.181488,878433,4133,
    380.572052,-1.433104,360.417877,868026,4133,
    392.085449,-0.783644,328.054657,886020,4140,
    388.560181,-1.292860,315.809753,875804,4140,
    398.291473,-1.769724,309.335510,900671,4140
  }
  amk.spawn_item("dar_document3",sak.v3f(points[rand-4],points[rand-3],points[rand-2]),points[rand],points[rand-1])
  points={
    38.496116638184,-10.814287185669,-6.2668147087097,7333,1136,
    14.275232315063,-10.815458297729,-16.191423416138,4869,1139,
    39.742706298828,-6.1400866508484,-15.511281013489,7418,1141,
    36.299995422363,-5.6154961585999,-35.950675964355,7228,1142,
    5.0489687919617,-10.900365829468,12.071053504944,3555,1156
  }
  amk.spawn_item("dar_document5",sak.v3f(points[rand-4],points[rand-3],points[rand-2]),points[rand],points[rand-1])
end

function barman_nagrad_dar_document3()
    local rand=amk_vars.r_task_reward or 1
  if rand==1 then
  sak.create_items(db.actor,"af_vyvert_dyn5d",1)
  elseif rand==2 then
  sak.create_items(db.actor,"af_medusa_dyn5d",1)
  elseif rand==3 then
  sak.create_items(db.actor,"af_ameba_slime_dyn5d",1)
  elseif rand==4 then
  sak.create_items(db.actor,"af_blood_dyn5d",1)
  else
  sak.create_items(db.actor,"af_electra_sparkler_dyn5d",1)
  end
end
function barman_nagrad_dar_document5()
    local rand=amk_vars.r_task_reward or 1
  if rand==2 then
  sak.create_items(db.actor,"af_vyvert_dyn5d",1)
  elseif rand==3 then
  sak.create_items(db.actor,"af_medusa_dyn5d",1)
  elseif rand==4 then
  sak.create_items(db.actor,"af_ameba_slime_dyn5d",1)
  elseif rand==5 then
  sak.create_items(db.actor,"af_blood_dyn5d",1)
  else
  sak.create_items(db.actor,"af_electra_sparkler_dyn5d",1)
  end
end
function barman_nagrad_dar_document35()
    local rand=amk_vars.r_task_reward or 1
  if rand==2 then
  sak.create_items(db.actor,"af_ameba_slug_dyn5d",1)
  elseif rand==3 then
  sak.create_items(db.actor,"af_electra_flash_dyn5d",1)
  elseif rand==4 then
  sak.create_items(db.actor,"af_rusty_kristall_dyn5d",1)
  elseif rand==5 then
  sak.create_items(db.actor,"af_cristal_flower_dyn5d",1)
  else
  sak.create_items(db.actor,"af_mincer_meat_dyn5d",1)
  end
  sak.create_items(db.actor,"medkit",5)
  sak.create_items(db.actor,"antirad",5)
end

function add_price_arts(art_sect)
   local have_many=(nlc_vars.price_arts or 0)
   local sys_cost = system_ini():r_float(art_sect, "cost")
   have_many=have_many+sys_cost
   nlc_vars.price_arts = have_many
end

function sherstyk_shkura_time()
  local day=level.get_time_days()
  nlc_vars.sherstyk_shkura_time = day
end

function is_ready_time_sherstyk_shkura()
  local day=level.get_time_days()
  local old_day=(nlc_vars.sherstyk_shkura_time or 32)
  if day>old_day then return true else return false end
end
function not_ready_time_sherstyk_shkura()
  return not is_ready_time_sherstyk_shkura()
end

function blow_time()
  if ((amk_vars.blowout or -1) > -1 and (amk_vars.blowout or -1) < 5) then return true end
end
function no_blow_time()
  return not blow_time()
end

function prepare_dialogs()
 init_xvars()
end

function init_module()
 prepare_dialogs()
 sak_repair_dialog.init_module()
end

function late_init()
 --
end

function on_before_save()
 nlc_vars.repair = t_repair
end

if not _G.sak_repair_dialog then
 abort("cannot include sak_repair_dialog")
end

--спавним записку в туалете и немного барахлишка, подсластить пилюлю
function add_vil_wolf_letter()
  local obj1 = g_sim:story_object(story_ids.lost_inventory_box_02)
  if obj1 then
  local item = ""
  local count = lua_random(4,5)
    for i=1,count do
    item = nagrad.level_1[lua_random(table.getn(nagrad.level_1))]
    g_sim:create(item,obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    end
    g_sim:create("zapiska_volk",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
end
--спавним тайник ¬олка
function added_vil_ranger_treasure_old()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(-100.861191,6.424353,52.707348),3328,11904)--экскаватор
  --local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(27.699320,-3.165885,-6.374194),3329,7783)
  if obj1 then
  fill_vil_ranger_treasure(obj1.id)
  end
end

function added_vil_ranger_treasure()
local rand=(amk_vars.r_treas_items or 1)*5
local points={
-100.861191,6.424353,52.707348,11904,3328,
27.699320,-3.165885,-6.374194,7783,3329,
4.892434,6.171393,-88.685661,22057,3329
}
local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(points[rand-4],points[rand-3],points[rand-2]),points[rand],points[rand-1])
  if obj1 then
   fill_vil_ranger_treasure(obj1.id)
  end
end
--наполн€ем тайник ¬олка
function fill_vil_ranger_treasure(obj)
  local obj1=g_sim:object(tonumber(obj))
  for a=1,1 do
    g_sim:create("af_medusa_dyn1d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("af_drops_dyn5d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("af_blood_dyn5d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("af_rusty_thorn_dyn1d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("volk_pda",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--дл€ диалога с ¬олком
function have_volk_pda()
  return sak.have_items_count("volk_pda",1)
end
--спавним призовой тайник1 ¬олка на –адаре
function add_volk_prize_treasure1()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(536.490112,-54.553421,-72.432205),2041,183687)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Ќаграда ¬олка")
  if obj1 then
  fill_volk_prize_treasure1(obj1.id)
  end
  sak.send_tip("ѕолучена наводка на тайник.","Ќаграда ¬олка",5,15,"g_g","sak","green")
end
--наполн€ем призовой тайник1 ¬олка
function fill_volk_prize_treasure1(obj)
  local obj1=g_sim:object(tonumber(obj))
  for a=1,1 do
    g_sim:create("af_dummy_pellicle_capsule",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("monolit_scientific_outfit",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--спавним призовой тайник2 ¬олка в Ћиманске
function add_volk_prize_treasure2()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(-82.166389,-9.927167,58.757030),2988,5)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Ќаграда ¬олка")
  if obj1 then
  fill_volk_prize_treasure2(obj1.id)
  end
  sak.send_tip("ѕолучена наводка на тайник.","Ќаграда ¬олка",5,15,"g_g","sak","green")  
end
--наполн€ем призовой тайник2 ¬олка
function fill_volk_prize_treasure2(obj)
  local obj1=g_sim:object(tonumber(obj))
  for a=1,1 do
    g_sim:create("af_dummy_glassbeads_capsule",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("freedom_scientific_outfit",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--спавним призовой тайник3 ¬олка в –ыжем лесу
function add_volk_prize_treasure3()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(25.640947,17.338980,20.445881),3263,81206)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Ќаграда ¬олка")
  if obj1 then
  fill_volk_prize_treasure3(obj1.id)
  end
  sak.send_tip("ѕолучена наводка на тайник.","Ќаграда ¬олка",5,15,"g_g","sak","green")  
end
--наполн€ем призовой тайник3 ¬олка
function fill_volk_prize_treasure3(obj)
  local obj1=g_sim:object(tonumber(obj))
  for a=1,1 do
    g_sim:create("af_dummy_battery_capsule",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("merc_scientific_outfit",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end

--спавним из диалога тайник  Ёѕа на –адаре
function add_rad_zil_treasure()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(654.548645,-51.036823,-59.858109),1896,226836)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","“айник неизвестного сталкера")
  if obj1 then
  fill_rad_zil_treasure(obj1.id)
  end
  sak.send_tip("ѕолучена наводка на тайник.","“айник неизвестного сталкера",5,15,"g_g","sak","green")
end 
--наполн€ем тайник  Ёѕа
function fill_rad_zil_treasure(obj)
  local obj1=g_sim:object(tonumber(obj))
  for i=1,5 do
    g_sim:create("suhpay",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("medkit_army",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  for i=1,20 do
    g_sim:create("ammo_vog-25",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
    g_sim:create("wpn_pkm",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_7.62x54r",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_7.62x54r",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("svoboda_letter",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end	
end
--функции дл€ диалога с  Ёѕом
function pkm_have()
  return sak.have_items_count("wpn_pkm",1)~=false
end
function give_pkm()
  sak_inventory.release_actor_items("wpn_pkm",1)
end
function zil_mmz_no()
  db.actor:give_info_portion("mil_freedom_commander_zil_mmz_no")
end
function add_af_green()
  local rand=amk_vars.r_treas_items or 1
  local arts={"af_dummy_green_medusa","af_dummy_green_blood","af_dummy_green_vyvert"}
  sak.create_items(db.actor,arts[rand],1)
end
function add_freedom_commander_svu()
  sak.create_items(db.actor,"wpn_svu",1)
  --sak.create_items(db.actor,"wpn_addon_1pso",1)  
  sak.create_items(db.actor,"ammo_7.62x54_7h14",5)
end
--спавним тайник-1 ¬орона в подземке јгро
function add_voron_treasure1()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(-47.741657,-4.012072,-29.835609),718,4323)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Ќаграда ¬орона")
  if obj1 then
  fill_voron_treasure1(obj1.id)
  end
  sak.send_tip("ѕолучена наводка на тайник.","Ќаграда ¬орона",5,15,"g_g","sak","green")
end
--наполн€ем тайник-1 ¬орона
function fill_voron_treasure1(obj)
  local obj1=g_sim:object(tonumber(obj))
  for i=1,7 do
    g_sim:create("ammo_5.45x39_fmj",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_5.45x39_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  for i=1,5 do
    g_sim:create("ammo_7.62x39_fmj",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_7.62x39_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_vog-25",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  for i=1,6 do
    g_sim:create("ammo_vog-25",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("grenade_rgd5",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  for i=1,3 do
    g_sim:create("vodka",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_7.62x54_7h14",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("medkit_army",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("suhpay",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--спавним тайник-2 ¬орона в подземке јгро
function add_voron_treasure2()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(-39.182106,-4.590463,-0.931736),730,4691)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Ќаграда ¬орона")
  if obj1 then
  fill_voron_treasure2(obj1.id)
  end
  sak.send_tip("ѕолучена наводка на тайник.","Ќаграда ¬орона",5,15,"g_g","sak","green")
end
--наполн€ем тайник-2 ¬орона
function fill_voron_treasure2(obj)
  local obj1=g_sim:object(tonumber(obj))
  for i=1,7 do
    g_sim:create("ammo_5.45x39_fmj",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_5.45x39_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end 
  for i=1,5 do
    g_sim:create("ammo_7.62x39_fmj",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_7.62x39_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_vog-25",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  for i=1,6 do
    g_sim:create("grenade_f1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("grenade_rgd5",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  for i=1,3 do
    g_sim:create("vodka",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_7.62x54_7h14",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("medkit_army",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("suhpay",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--спавним тайник-3 ¬орона в подземке јгро
function add_voron_treasure3()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(-40.607185,-5.800885,-39.039883),735,4625)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Ќаграда ¬орона")
  if obj1 then
  fill_voron_treasure3(obj1.id)
  end
  sak.send_tip("ѕолучена наводка на тайник.","Ќаграда ¬орона",5,15,"g_g","sak","green")
end
--наполн€ем тайник-3 ¬орона
function fill_voron_treasure3(obj)
  local obj1=g_sim:object(tonumber(obj))
  for i=1,7 do
    g_sim:create("ammo_5.45x39_fmj",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_5.45x39_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end 
  for i=1,5 do
    g_sim:create("ammo_7.62x39_fmj",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_7.62x39_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_vog-25",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  for i=1,6 do
    g_sim:create("grenade_f1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("grenade_rgd5",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  for i=1,3 do
    g_sim:create("vodka",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_7.62x54_7h14",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("medkit_army",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("antirad",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("suhpay",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--спавним тайник ¬орона на Ѕолотах, награда за научник
function add_voron_marsh_treasure()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(-335.839478,0.198190,320.892792),3361,11101)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Ќаграда ¬орона")
  if obj1 then
  fill_voron_marsh_treasure(obj1.id)
  end
  sak.send_tip("ѕолучена наводка на тайник.","Ќаграда ¬орона",5,15,"g_g","sak","green")
end
--наполн€ем тайник ¬орона на Ѕолотах
function fill_voron_marsh_treasure(obj)
  local obj1=g_sim:object(tonumber(obj))
  for i=1,5 do
    g_sim:create("ammo_5.56x45_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_7.62x39_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_9x39_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_5.45x39_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_7.62x54_7h14",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_7.62x51_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_vog-25",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  for i=1,3 do
    g_sim:create("grenade_f1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("antirad",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
    g_sim:create("af_sul_new",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--спавним тайник ¬орона в  ишке, награда за Ѕерилл
function add_voron_darkscape_treasure()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(601.403137,5.441680,69.083466),4171,1081401)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Ќаграда ¬орона")
  if obj1 then
  fill_voron_darkscape_treasure(obj1.id)
  end
  sak.send_tip("ѕолучена наводка на тайник.","Ќаграда ¬орона",5,15,"g_g","sak","green")
end
--наполн€ем тайник ¬орона в  ишке
function fill_voron_darkscape_treasure(obj)
  local obj1=g_sim:object(tonumber(obj))
  for i=1,10 do
    g_sim:create("ammo_vog-25",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_vog-25p",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  for i=1,3 do
    g_sim:create("grenade_f1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("medkit_army",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
    g_sim:create("wpn_gm94",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--спавним тайник ¬орона на янтаре, награда за √равикостюм
function add_voron_jantar_treasure()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(-87.149131,-7.448457,-205.866088),1485,9023)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Ќаграда ¬орона")
  if obj1 then
  fill_voron_jantar_treasure(obj1.id)
  end
  sak.send_tip("ѕолучена наводка на тайник.","Ќаграда ¬орона",5,15,"g_g","sak","green")
end
--наполн€ем тайник ¬орона на янтаре
function fill_voron_jantar_treasure(obj)
  local obj1=g_sim:object(tonumber(obj))
  for i=1,5 do
    g_sim:create("ammo_5.56x45_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_7.62x39_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_7.62x51_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_5.45x39_ap",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("ammo_7.62x54_7h14",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  for i=1,3 do
    g_sim:create("grenade_f1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("medkit_scientic",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
    g_sim:create("af_baloon",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--дл€ новых диалогов с ¬ороном
function have_notebook_of_artist()
  return sak.have_items_count("notebook_of_artist",1)
end
function bandit_master_outfit_m1_have()
  return sak.have_items_count("bandit_master_outfit_m1",1)~=false
end
function give_bandit_master_outfit_m1()
  sak_inventory.release_actor_items("bandit_master_outfit_m1",1)
end
function outfit_specnaz_m1_have()
  return sak.have_items_count("outfit_specnaz_m1",1)~=false
end
function give_outfit_specnaz_m1()
  sak_inventory.release_actor_items("outfit_specnaz_m1",1)
end
function soldier_outfit_have()
  return sak.have_items_count("soldier_outfit",1)~=false
end
function give_soldier_outfit()
  sak_inventory.release_actor_items("soldier_outfit",1)
end
function have_klava_vergas()
  return sak.have_items_count("klava",1)~=false
end
function give_klava_vergas()
  sak_inventory.release_actor_items("klava",1)
end
function add_nagrada_voron()
  sak.create_items(db.actor, "af_unknown_4_new",1)
end
function outfit_stalker_m1_have()
  return sak.have_items_count("outfit_stalker_m1",1)~=false
end
function give_outfit_stalker_m1()
  sak_inventory.release_actor_items("outfit_stalker_m1",1)
end
--вскрываем капсулу ма€тника у —ахарова
table_mayat_capsule={
  "af_mayatnik_tuman_new_capsule",
  "af_mayatnik_les_new_capsule", 
  "af_mayatnik_radar_new_capsule", 
  "af_mayatnik_tesla_new_capsule", 
  "af_mayatnik_stadion_new_capsule", 
  "af_mayatnik_chaes_new_capsule"  
  } 
--таймеры —ахарова дл€ капсулы ма€тника
function sakharov_mayat_capsule_time()
  start_time("time_start_sakharov_mayat_capsule")
end
function is_ready_time_sakharov_mayat_capsule()
  return is_ready_time("time_start_sakharov_mayat_capsule",1400)==true
end
function not_ready_time_sakharov_mayat_capsule()
  return not_ready_time("time_start_sakharov_mayat_capsule",1400)==true
end
function clear_ready_time_sakharov_capsule()
  clear_ready_time("time_start_sakharov_mayat_capsule")
end
function timer_sakharov_mayat()
  local rnd = lua_random(8,12)
  timers.start_timer("timer_sakharov_mayat",rnd,2,30,"sak_dialog.sakharov_mayat_end()")
end
function sakharov_mayat_end()
  db.actor:give_info_portion("about_mayat_capsule")
end
--функции дл€ диалога
local table_mayat_capsule={
  "af_mayatnik_tuman_new_capsule",
  "af_mayatnik_les_new_capsule", 
  "af_mayatnik_radar_new_capsule", 
  "af_mayatnik_tesla_new_capsule", 
  "af_mayatnik_stadion_new_capsule", 
  "af_mayatnik_chaes_new_capsule"
  }
function gg_n_mayat_caps_have(n)
  local amount=0
  for a=1, #table_mayat_capsule do
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_mayat_capsule[a],1,true) then
        local kolvo = #k
        amount=amount+kolvo
      end
    end
  end
  if amount>=n then return true end
end
function give_n_mayat_caps(n)
  local amount
  local art_kol=n
  for a=1, #table_mayat_capsule do
  amount=0
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_mayat_capsule[a],1,true) then
        local kolvo = #k
        for m=1,kolvo do
          if art_kol>0 then
          local obj=g_sim:object(k[m])
          if obj then
          g_sim:release(obj, true)
          end
          amount=amount+1
          art_kol=art_kol-1
          end
        end
      end
    end
    if amount~=0 then
    sak.relocate_item(db.actor, "out", table_mayat_capsule[a], amount)
    nlc_vars.sahr_mayatnik = xrs_utils.trim(string.sub(table_mayat_capsule[a],1, -9))
  end
end
end


--провер€ем капсулу ма€тника
function gg_1_mayat_caps_have()
  return gg_n_mayat_caps_have(1)
end
--отдаЄм капсулу ма€тника
function give_1_mayat_caps()
  give_n_mayat_caps(1)
end
--получаем ма€тник
function add_ecolog_majatnik()
  if not nlc_vars.sahr_mayatnik then return end 
  sak.create_items(db.actor, nlc_vars.sahr_mayatnik, 1)
  nlc_vars.sahr_mayatnik = nil
end
--контейнеры с капсулами ма€тников
function take_mil_trader_ammo()
  local npc=db.actor
  local obj=alife():create("inventory_sakbox_mil_svoboda", npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
  local pk = get_netpk(obj,1)
  local data = pk:get()
  data.custom_data = table_mayat_capsule[lua_random(1,#table_mayat_capsule)]
  pk:set(data)
  sak.relocate_item(npc, "in", "inventory_sakbox_mil_svoboda", 1)
end

function take_bar_dolg_petrenko_exo()
  local npc=db.actor
  local obj=alife():create("inventory_sakbox_dolg_petrenko", npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
  local pk = get_netpk(obj,1)
  local data = pk:get()
  data.custom_data = table_mayat_capsule[lua_random(1,#table_mayat_capsule)]
  pk:set(data)
  sak.relocate_item(npc, "in", "inventory_sakbox_dolg_petrenko", 1)
end

function take_yan_kruglov_art()
  local npc=db.actor
  local obj=alife():create("inventory_sakbox_yan_kruglov", npc:position(), npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
  local pk = get_netpk(obj,1)
  local data = pk:get()
  data.custom_data = table_mayat_capsule[lua_random(1,#table_mayat_capsule)]
  pk:set(data)
  sak.relocate_item(npc, "in", "inventory_sakbox_yan_kruglov", 1)
end

function add_rad_kontainer()
  local obj=alife():create("inventory_sakbox_rad", sak.v3f(378,-51,-179.20),101537,2097)
  local pk = get_netpk(obj,1)
  local data = pk:get()
  data.custom_data = table_mayat_capsule[lua_random(1,#table_mayat_capsule)]
  pk:set(data)
end

function added_kont_leshyi()
  local obj=alife():create("inventory_sakbox_gar_flame", sak.v3f(57.41,6.4,405.93),344549,198)
  local pk = get_netpk(obj,1)
  local data = pk:get()
  data.custom_data = table_mayat_capsule[lua_random(1,#table_mayat_capsule)]
  pk:set(data)
end

function borov_kont()
  local obj=alife():create("inventory_sakbox_borov", sak.v3f(176.83,8.5,-375.96),377568,938)
  local pk = get_netpk(obj,1)
  local data = pk:get()
  data.custom_data = table_mayat_capsule[lua_random(1,#table_mayat_capsule)]
  pk:set(data)
end
--функции дл€ ƒоцента
local art_in_box=nil
function give_inventory_sakbox()
  for i=1, table.getn(table_sakboxes) do
    if sak.have_items_count(table_sakboxes[i],1) then
      local sobj=db.actor:object(table_sakboxes[i])
      local pk = get_netpk(sobj,1)
      local data = pk:get()
      if data.custom_data and data.custom_data~="" then
        art_in_box = data.custom_data
      else
        art_in_box = table_mayat_capsule[amk_vars.r_task_reward or 1]
      end
      sak_inventory.release_actor_items(table_sakboxes[i],1)
      nlc_vars.art_in_box = art_in_box
      break
    end
  end
end
function add_docent_majatnik()
  local art_in_box=(nlc_vars.art_in_box or art_in_box)
  sak.create_items(db.actor, art_in_box,1)
  sak.create_items(db.actor, "arc_art_box_1basic",1)
  nlc_vars.art_in_box = nil
end
--спавним рюкзак с гаусс-пистолетом в “ƒ
function add_gungauss()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(132.852386,3.822061,-180.043427),926,329638)
  if obj1 then
  fill_gungauss_treasure(obj1.id)
  end
end
--наполн€ем
function fill_gungauss_treasure(obj)
  local obj1=g_sim:object(tonumber(obj))
    g_sim:create("wpn_gungauss",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--мосинка и прицел
function add_mosinka()
  sak.create_items(db.actor,"wpn_mosin",1)
  sak.create_items(db.actor,"wpn_addon_pe",1)  
end
--приз от ЋЄхи
function timer_junkman()
  local rnd = lua_random(5,7)
  timers.start_timer("timer_junkman",rnd,0,30,"sak_dialog.timer_junkman_end()")
end
function timer_junkman_end()
  db.actor:give_info_portion("info_outfit_tourist_prize")
end
function take_outfit_tourist_prize(first_speaker, second_speaker)
  local obj = misc.spawn_to ("outfit_stalker_m2", db.actor)
  if obj then
      schedule.add ("t_m_p_t","sak_dialog.take_outfit_tourist("..obj.id..")",200)
      sak.relocate_item(second_speaker, "in", "outfit_stalker_m2", 1)
  end
end
function take_outfit_tourist(id)
  params.obj_condition (id, 0.45)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = 0.45
  pk:set(data)
end
--дл€ диалогов с ѕличко
function take_soul_plichko()
  sak.create_items(db.actor,"af_soul_dyn4d",1)
end
function plichko_rpk_have()
  return sak.have_items_count("wpn_rpk74",1)~=false
end
function rpk74_have(first_speaker, second_speaker)
for i,k in pairs(sak_inventory.rucksack) do
  if strpos(i, "wpn_rpk74",1,true) then
   local obj = client_obj(k[1])
   local ammo = obj:get_ammo_in_magazine()
   if ammo >= 45 then return true end
  end
end
return false
end
function rpk74_have_no(first_speaker, second_speaker)
for i,k in pairs(sak_inventory.rucksack) do
  if strpos(i, "wpn_rpk74",1,true) then
   local obj = client_obj(k[1])
   local ammo = obj:get_ammo_in_magazine()
   if ammo < 45 then return true end
  end
end
return false
end
function give_rpk74( first_speaker, second_speaker )
	local ids,cnt = registry.inv_objects( second_speaker:id(), true )
    for n = 1, cnt do
		local id   = ids[ n ]
		local sobj = client_obj( id )
		if sobj then
			if strpos( sobj:section(), "wpn_", 1, true ) then
				amk.remove_item( sobj )
			end
		end
	end
	dialogs.relocate_item_section( second_speaker, "wpn_rpk74", "out" )
	g_sim:create( "ammo_5.45x39_ap", second_speaker:position(), second_speaker:level_vertex_id(), second_speaker:game_vertex_id(), second_speaker:id() )
end
function take_outfit_dolg_prize(first_speaker, second_speaker)
  local obj = misc.spawn_to ("outfit_dolg_m1", db.actor)
  if obj then
      schedule.add ("t_m_p_t","sak_dialog.take_outfit_dolg("..obj.id..")",200)
      sak.relocate_item(second_speaker, "in", "outfit_dolg_m1", 1)
  end
end
function take_outfit_dolg(id)
  params.obj_condition (id, 0.61)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = 0.61
  pk:set(data)
end
--укорот от ¬олка
function take_sescape_lager_volk_ak(first_speaker, second_speaker)
  local obj = misc.spawn_to ("wpn_ak74u_old", db.actor)
  if obj then
      schedule.add ("t_m_p_t","sak_dialog.take_volk_ak("..obj.id..")",200)
      sak.relocate_item(second_speaker, "in", "wpn_ak74u_old", 1)
  end
end
function take_volk_ak(id)
  params.obj_condition (id, 0.85)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = 0.85
  pk:set(data)
end
--нож от »гната
function add_kabar_prize()
  sak.create_items(db.actor,"wpn_knife_m1",1)
  sak.create_items(db.actor,"af_flower_new",1) 
end
--спавним костюм ѕризрака в труп х16
--костюм не всегда ломаетс€.. нет времени битьс€ с ним.. при подн€тии сломаю
function prizrak_outfit_prize()
  local obj1 = g_sim:story_object(story_ids.x16_stalker_pseudo_ghost)
  g_sim:create("wpn_mp153_m1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
  g_sim:create("outfit_stalker_m1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end

--[[function fix_prizrak_outfit()
	if nlc_vars.prizrak_outfit_fix then return end
	if not nlc_vars.prizrak_outfit_id then return end
	local obj1 = g_sim:story_object(story_ids.x16_stalker_pseudo_ghost)
	if obj1 then
		if strpos(level.name(), "l08u_brainlab",1,true) then
			nlc_vars.prizrak_outfit_fix = 1
			params.obj_condition(nlc_vars.prizrak_outfit_id,0.65)
		end
	end
end]]
function fix_prizrak_outfit_take(obj)
 if not nlc_vars.ggwp_prizrak_outfit then
	if level.name() == "l08u_brainlab" then
		if obj:section() == "outfit_stalker_m1" then
			params.upd_condition(obj:id(), 0.65)
			nlc_vars.ggwp_prizrak_outfit = true
		end
	end
 end
end

--спавним тайник ќреха в райцентре по наводке  очерги
function take_treasure_dead_oreh()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(-84.221352,11.228296,40.612862),3838,226392)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","√де-то тут хабар ѕризрака")  
  if obj1 then
  fill_treasure_dead_oreh(obj1.id)
  end
end
--наполн€ем
function fill_treasure_dead_oreh(obj)
  local obj1=g_sim:object(tonumber(obj))
    g_sim:create("wpn_saiga12c_m1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	g_sim:create("af_spirit_4",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  for i=1,7 do
    g_sim:create("antirad",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
    g_sim:create("medkit_army",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_12x76_zhekan",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("ammo_12x76_dart",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  for i=1,5 do
    g_sim:create("conserva",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("energy_drink",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)		
  end  
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end 
--дл€ квестов —идоровича
function box_conserv_spawn()
  g_sim:create("box_conserv",sak.v3f(-17.883831,0.637770,296.710663),259213,187)
end
function have_box_conserv()
  return sak.have_items_count("box_conserv",1)~=false
end
function give_box_conserv()
  sak_inventory.release_actor_items("box_conserv",1)
end
function add_sidor_med()
  sak.create_items(db.actor,"medkit",1)
  sak.create_items(db.actor,"bandage",3)
  sak.create_items(db.actor,"antirad",1)
end	
function add_greens_kolbasa10()
  sak.create_items(db.actor,"green_kolbasa",10)
end
function add_sidor_small_gift()
  sak.create_items(db.actor,"medkit",2)
  sak.create_items(db.actor,"bandage",4)
  sak.create_items(db.actor,"antirad",1)
  sak.create_items(db.actor,"ammo_9x18_pmm",5)  
end	
function add_sidor_big_gift()
  sak.create_items(db.actor,"medkit",2)
  sak.create_items(db.actor,"bandage",4)
  sak.create_items(db.actor,"antirad",2)
  sak.create_items(db.actor,"ammo_5.45x39_fmj",5)  
end
function give_10green_kolbasa()
  sak_inventory.release_actor_items("green_kolbasa",10)
end
function green_kolbasa_10have()
  return sak.have_items_count("green_kolbasa",10)
end
function add_mutant_opt()
  sak.create_items(db.actor,"mutant_boar_leg",10)
  sak.create_items(db.actor,"mutant_zombie_hand",10)
  sak.create_items(db.actor,"mutant_flesh_eye",10)  
end
function give_mutant_opt()
  sak_inventory.release_actor_items("mutant_boar_leg",10)
  sak_inventory.release_actor_items("mutant_zombie_hand",10)
  sak_inventory.release_actor_items("mutant_flesh_eye",10)  
end
function have_mutant_opt()
    return sak.have_items_count("mutant_boar_leg",10)~=false and sak.have_items_count("mutant_zombie_hand",10)~=false and sak.have_items_count("mutant_flesh_eye",10)~=false
end
function add_sidor_nagrad()
  local item = ""
  local count = lua_random(3,4)
  for i=1,count do
  item = nagrad.level_1[lua_random(table.getn(nagrad.level_1))]
    sak.create_items(db.actor,item,1)
  end
  sak.create_items(db.actor, "stalker_guard_outfit",1)
end
function add_sid_nagrad()
  local item = ""
  local count = lua_random(3,4)
  for i=1,count do
  item = nagrad.level_1[lua_random(table.getn(nagrad.level_1))]
    sak.create_items(db.actor,item,1)
  end
  relocate_money(db.actor, 15000, "in")  
end
function have_100_ammo_buck()
  return vergas_lib.search_items("ammo_12x70_buck",100,1)~= false
end
function give_100_ammo_buck()
  vergas_lib.search_items("ammo_12x70_buck",100,2)
end
function have_40_ammo_zhekan()
  return vergas_lib.search_items("ammo_12x76_zhekan",40,1)~= false
end
function give_40_ammo_zhekan()
  vergas_lib.search_items("ammo_12x76_zhekan",40,2)
end
function timer_tm_kill_stalker_1()
  timers.start_timer("tm_kill_stalker_1",0,16,00,"sak_dialog.timer_tm_kill_stalker_1_end()")
end
function timer_tm_kill_stalker_1_end()
  sak.send_tip("«адание со звероловами отмен€етс€.","—ообщение от —идоровича",11,20,"trader","sak","red")
  db.actor:give_info_portion("tm_kill_stalker_1_end")
end
--чтобы ѕетруха вз€л или “ќ«, или Ѕћ
function wpn_toz_bm16_have()
  return sak.have_items_count("wpn_toz34",1)~=false or sak.have_items_count("wpn_bm16_full",1)~=false
end
function give_wpn_toz_bm16()
	if sak.have_items_count("wpn_toz34",1) then
		sak_inventory.release_actor_items("wpn_toz34",1)
	elseif sak.have_items_count("wpn_bm16_full",1) then
		sak_inventory.release_actor_items("wpn_bm16_full",1)
	end
end
--дробь у ƒэна
function add_som_ammo_140_buck()
  som_ammo_12x70_buck(140)
end
--вал и гроза у ѕетренко
function add_wpn_groza()
  sak.create_items(db.actor,"wpn_groza",1)
end
function add_wpn_val()
  sak.create_items(db.actor,"wpn_val",1)
end
--ѕ  и ѕќ—ѕ у ѕетренко
function add_pk()
  sak.create_items(db.actor,"wpn_addon_1pso",1)
end
function add_posp()
  sak.create_items(db.actor,"wpn_addon_1p78",1)
end
--ѕ  у Ўерстюка
function add_wpn_addon_pk()
  sak.create_items(db.actor,"wpn_addon_pk",1)
end
--вернули јре ћ16ј4
function add_ara_wpn_m16a4()
  local mod_wpn = "wpn_m16a4"
  local obj = g_sim:create(mod_wpn, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
  sak.relocate_item(db.actor, "in", mod_wpn, 1)
  schedule.add ("unload_weapon", "sak_dialog.weapon_unload("..obj.id..")", 250)
end
--помен€л у јры г36 на г36-укорот
function add_ara_g36c()
  local mod_wpn = "wpn_g36c"
  local obj = g_sim:create(mod_wpn, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
  sak.relocate_item(db.actor, "in", mod_wpn, 1)
  schedule.add ("unload_weapon", "sak_dialog.weapon_unload("..obj.id..")", 250)
end
--Ѕолотный выдаст ј 74 модернизированный.
function add_wpn_ak74m()
  sak.create_items(db.actor,"wpn_ak74m",1)
end
function add_10ammo_7_62_fmj()
  sak.create_items(db.actor,"ammo_7.62x39_fmj",10)
end
-- рот за спасение
function take_mincer_meat_dyn4()
  sak.create_items(db.actor,"af_mincer_meat_dyn4d",1)
end
--¬алера ≈герь
function have_20_ammo_dart()
  return vergas_lib.search_items("ammo_12x76_dart",20,1)~= false
end
function give_20_ammo_dart()
  vergas_lib.search_items("ammo_12x76_dart",20,2)
end
-- запчасти
function add_mutant_krovosos_jaw(first_speaker, second_speaker)   
  local obj = misc.spawn_to ("mutant_krovosos_jaw", db.actor)
  if obj then
      schedule.add ("t_m_p_t","sak_dialog.take_krovosos_jaw("..obj.id..")",200)
      sak.relocate_item(second_speaker, "in", "mutant_krovosos_jaw", 1)
  end
end
function take_krovosos_jaw(id)
local i=lua_random(35,45)
local j=i*0.01
  params.obj_condition (id, j)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = j
  pk:set(data)
end
function add_mutant_flesh_eye(first_speaker, second_speaker)   
  local obj = misc.spawn_to ("mutant_flesh_eye", db.actor)
  if obj then
      schedule.add ("t_m_p_t","sak_dialog.take_flesh_eye("..obj.id..")",200)
      sak.relocate_item(second_speaker, "in", "mutant_flesh_eye", 1)
  end
end
function take_flesh_eye(id)
local i=lua_random(35,45)
local j=i*0.01
  params.obj_condition (id, j)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = j
  pk:set(data)
end
-- спавним ѕƒј в труп учЄного в х6
function warlab_ecolog_body()
  local obj1 = g_sim:story_object(story_ids.war_ecolog_body_1)
  g_sim:create("war_ecolog_pda",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
function have_warlab_pda()
  return sak.have_items_count("war_ecolog_pda",1)~=false
end
function give_warlab_pda()
  sak_inventory.release_actor_items("war_ecolog_pda",1)
end
-- монолитовска€ экза и  омпас в танке в –Ћ
function fill_tank_inventory_box()
  local obj1 = g_sim:story_object(story_ids.red_q11_n)
  g_sim:create("monolit_exoskeleton",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("af_compass_dyn5d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
  g_sim:create("sak_document4",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
function timer_docent()
  timers.start_timer("timer_docent",0,12,30,"sak_dialog.timer_docent_end()")
end
function timer_docent_end()
  sak.send_tip("ћеченный, это ƒоцент. ѕодходи в Ѕар, дело сделано.","—ообщение от ƒоцента",11,20,"ecolog","sak", "green")
  db.actor:give_info_portion("docent_message")
end
-- trade_exo_trade
function timer_trade_exo()
  timers.start_timer("timer_trade_exo",0,12,30,"sak_dialog.timer_trade_exo_end()")
end
function timer_trade_exo_end()
  db.actor:give_info_portion("info_trade_exo_trade")
end
-- barman_exo_trade
function timer_barman_exo()
  local rnd = lua_random(2,3)
  timers.start_timer("timer_barman_exo",rnd,2,10,"sak_dialog.timer_barman_exo_end()")
end
function timer_barman_exo_end()
  sak.send_tip("ћеченный, это Ѕармен. ѕодходи в Ѕар, экзоскелет доставили.","—ообщение от Ѕармена",11,20,"barman","sak", "green")
  db.actor:give_info_portion("barman_exo_message")
end
function add_outfit_exo_m1()
  sak.create_items(db.actor, "outfit_exo_m1",1)
end
-- freedom_exo_dialog
function timer_freedom_exo()
  local rnd = lua_random(2,3)
  timers.start_timer("timer_freedom_exo",rnd,4,20,"sak_dialog.timer_freedom_exo_end()")
end
function timer_freedom_exo_end()
  sak.send_tip("ћеченный, это Ўинкарь. ѕодходи на склады, экзоскелет доставили.","—ообщение от Ўинкар€",11,20,"freedom","sak", "green")
  db.actor:give_info_portion("freedom_exo_message")
end
function add_svoboda_exoskeleton()
  sak.create_items(db.actor, "svoboda_exoskeleton",1)
end
-- dolg_exo_dialog
function timer_dolg_exo()
  local rnd = lua_random(2,3)
  timers.start_timer("timer_dolg_exo",rnd,6,30,"sak_dialog.timer_dolg_exo_end()")
end
function timer_dolg_exo_end()
  sak.send_tip("ћеченный, это ѕетренко. ѕодходи в Ѕар, экзоскелет доставили.","—ообщение от ѕетренко",11,20,"dolg","sak", "green")
  db.actor:give_info_portion("dolg_exo_message")
end
-- ara_exo_dialog
function timer_ara_exo()
  local rnd = lua_random(3,4)
  timers.start_timer("timer_ara_exo",rnd,2,30,"sak_dialog.timer_ara_exo_end()")
end
function timer_ara_exo_end()
  sak.send_tip("ћэчэный - отмэчэный, эта ¬ахтанг. «ахады дарагой, экза прибыл.","—ообщение от ¬ахтанга",11,20,"killer","sak", "green")
  db.actor:give_info_portion("ara_exo_message")
end
-- Ўустрый тайник
function add_kishka_rukzak()
local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(463.100861,23.854406,291.4556888),4159,991985)
  if obj1 then
  fill_shustriy_kishka_treasure(obj1.id)
  end
end
-- наполн€ем тайник
function fill_shustriy_kishka_treasure(obj)
  local obj1=g_sim:object(tonumber(obj))
  local arts={"af_mincer_meat","af_ameba_slug","af_fireball","af_rusty_kristall"}
  if not obj1 then return end
    local i=lua_random(1,4)
    local j=lua_random(2,3)  
	g_sim:create(arts[i].."_dyn"..j.."d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
-- drunk_quest
function add_boryan_kul()
  sak.create_items(db.actor,"boryan_kul",1)
end
function boryan_kul_have()
  return sak.have_items_count("boryan_kul",1)
end
function give_boryan_kul()
  sak_inventory.release_actor_items("boryan_kul",1)
end
-- semenov_green_art
function semenov_green_art_have()
  return sak.have_items_count("af_dummy_green_blood",1)~=false or sak.have_items_count("af_dummy_green_vyvert",1)~=false or sak.have_items_count("af_dummy_green_medusa",1)~=false
end
function give_semenov_green_art()
	if sak.have_items_count("af_dummy_green_blood",1) then
		sak_inventory.release_actor_items("af_dummy_green_blood",1)
	elseif sak.have_items_count("af_dummy_green_vyvert",1) then
		sak_inventory.release_actor_items("af_dummy_green_vyvert",1)
	elseif sak.have_items_count("af_dummy_green_medusa",1) then
		sak_inventory.release_actor_items("af_dummy_green_medusa",1)		
	end
end	
-- marsh_new_theme_final
function add_marsh_soul()
  sak.create_items(db.actor,"af_soul_dyn5d",1)
end
function marsh_soul_have(first_speaker, second_speaker)
	return first_speaker:object("af_soul_dyn5d")~=nil
end

function give_marsh_soul(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "af_soul_dyn5d", "out")
end
-- part_exchanger
function add_hand_kontroler(first_speaker, second_speaker)   
  local obj = misc.spawn_to ("mutant_hand_kontroler", db.actor)
  if obj then
      schedule.add ("t_m_p_t","sak_dialog.take_kontr_hand("..obj.id..")",200)
      sak.relocate_item(second_speaker, "in", "mutant_hand_kontroler", 1)
  end
end
function take_kontr_hand(id)
  params.obj_condition (id, 0.40)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = 0.40
  pk:set(data)
end

function add_poltergeist_glas(first_speaker, second_speaker)   
  local obj = misc.spawn_to ("mutant_poltergeist_glas", db.actor)
  if obj then
      schedule.add ("t_m_p_t","sak_dialog.take_polter_glas("..obj.id..")",200)
      sak.relocate_item(second_speaker, "in", "mutant_poltergeist_glas", 1)
  end
end
function take_polter_glas(id)
  params.obj_condition (id, 0.40)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = 0.40
  pk:set(data)
end
-- Ўинкарь за кейс из кровососовки
function take_cart_art()
  local m=amk_vars.r_task_reward or 1
  sak.create_items(db.actor,table_cart[m],1)
end
-- sakharov_mil_kurjer_nagrad_3
function take_sakharov_mil_kurjer_3nagrad()
  sak.create_items(db.actor, "ammo_12x70_buck",5)
end
-- mil_kurjer_pda
function add_mil_kurjer_treasure()
  local treases={5203,5208,5209,5210,5212}
  local sid=lua_random(1,#treases)
  local obj= g_sim:story_object(treases[sid])
  if obj then
     misc.spawn_to("af_dummy_simbion", obj)
     misc.spawn_to("af_armor_3", obj)
  end
end
function info_kurjer_treasure()
  sak.send_tip("ћожет действително стоит поискать на складах. „ем он там расплачиватьс€ собиралс€?..","Ќадо запомнить",5,15,"g_g","sak","yellow")
end
-- rygyi_habar
function have_af_spirit_3()
  return sak.have_items_count("af_spirit_3",1)
end
function give_af_spirit_3()
  sak_inventory.release_actor_items("af_spirit_3",1)
end
-- ecolog_outfit_m1 в труп на –адаре и пару кровососов дл€ куражу
function spawn_barmen_find_item()
local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(469.90,-53.74,-102.74),2051,154203)
  if obj1 then
  fill_rad_secret_treasure(obj1.id)
  end
  local obj = alife():create("bloodsucker_normal",sak.v3f(469.90,-53.74,-102.74),154203,2051)
  local obj = alife():create("bloodsucker_normal",sak.v3f(469.90,-53.74,-102.74),154203,2051)  
end
function fill_rad_secret_treasure(obj)
  local obj1=g_sim:object(tonumber(obj))
    g_sim:create("ecolog_outfit_m1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)	 
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
-- бартер —ида
function add_ammo_12x76_dart3()
  sak.create_items(db.actor,"ammo_12x76_dart",3)
end
function add_ammo_12x76_zhekan2()
  sak.create_items(db.actor,"ammo_12x76_zhekan",2)
end
-- бартер Ѕармена
function add_wpn_glock()
  sak.create_items(db.actor,"wpn_glock",1)
end
function add_ammo_12x70_buck9()
  sak.create_items(db.actor,"ammo_12x70_buck",9)
end
function add_ammo_12x76_dart6()
  sak.create_items(db.actor,"ammo_12x76_dart",6)
end
function add_ammo_12x76_zhekan4()
  sak.create_items(db.actor,"ammo_12x76_zhekan",4)
end
--  узнецов
function add_ammo_7_62_ap1()
  sak.create_items(db.actor,"ammo_7.62x39_ap",1)
end
--  руглов ecolog_apparat
function timer_kruglov_aver()
  local rnd = lua_random(8,12)
  timers.start_timer("timer_kruglov_aver",0,rnd,30,"sak_dialog.timer_kruglov_aver_end()")
end
function timer_kruglov_aver_end()
  sak.send_tip("ћеченный, это  руглов. ѕодходи на янтарь, есть работа.","—ообщение от  руглова",11,20,"ecolog","sak", "green")
  db.actor:give_info_portion("info_kruglov_message_aver")
end
function timer_kruglov_rf()
  local rnd = lua_random(8,12)
  timers.start_timer("timer_kruglov_rf",0,rnd,30,"sak_dialog.timer_kruglov_rf_end()")
end
function timer_kruglov_rf_end()
  sak.send_tip("ћеченный, это  руглов. ѕодходи на янтарь, есть работа.","—ообщение от  руглова",11,20,"ecolog","sak", "green")
  db.actor:give_info_portion("info_kruglov_message_rf")
end
function timer_kruglov_art()
  local rnd = lua_random(8,12)
  timers.start_timer("timer_kruglov_art",0,rnd,30,"sak_dialog.timer_kruglov_art_end()")
end
function timer_kruglov_art_end()
  sak.send_tip("ћеченный, это  руглов. ¬опрос с обменом решилс€.","—ообщение от  руглова",11,20,"ecolog","sak", "green")
  db.actor:give_info_portion("info_kruglov_art_chan_yes")
end
function have_4_marsh_cart()
  return sak.have_items_count("marsh_cart",4)~=false
end
function give_4_marsh_cart()
  sak_inventory.release_actor_items("marsh_cart",4)
end
function have_3_aver_cart()
  return sak.have_items_count("aver_cart",3)~=false
end
function give_3_aver_cart()
  sak_inventory.release_actor_items("aver_cart",3)
end
function have_2_red_cart()
  return sak.have_items_count("red_cart",2)~=false
end
function give_2_red_cart()
  sak_inventory.release_actor_items("red_cart",2)
end
function take_eye_kruglov()
  sak.create_items(db.actor,"af_eye_dyn5d",1)
end
-- Ѕармен
function gg_5_bart_have()
  return gg_n_bart_have(5)
end
function give_5_bart()
  give_n_bart(5)
end
function add_wpn_mp133()
  sak.create_items(db.actor,"wpn_wincheaster1300",1)
end
-- —ултан
function add_g36l()
  sak.create_items(db.actor,"wpn_addon_g36l",1)
end
-- —кр€га
function add_mt()
  sak.create_items(db.actor,"wpn_addon_mt",1)
end
-- –ашпиль
function wpn_val_have()
  return sak.have_items_count("wpn_val",1)~=false
end
function give_wpn_val()
  sak_inventory.release_actor_items("wpn_val",1)
end
-- јра
function add_sil_9mm()
  sak.create_items(db.actor,"wpn_addon_sil_9_p",1)
end
-- ѕетренко
function add_sil_54539()
  sak.create_items(db.actor,"wpn_addon_sil_545_ar",1)
end
function add_sil_76239()
  sak.create_items(db.actor,"wpn_addon_sil_762_ar",1)
end
-- Ўинкарь
function add_m203()
  sak.create_items(db.actor,"wpn_addon_grenade_launcher_m203",1)
end
function add_sil_55645()
  sak.create_items(db.actor,"wpn_addon_sil_556_ar",1)
end
function add_sil_76251()
  sak.create_items(db.actor,"wpn_addon_sil_762_sr2",1)
end
-- lim_fraer
function lim_fraer_outfit_have()
  return sak.have_items_count("ecolog_outfit",1)~=false or sak.have_items_count("protection_outfit",1)~=false
end
function give_lim_fraer_outfit()
	if sak.have_items_count("ecolog_outfit",1) then
		sak_inventory.release_actor_items("ecolog_outfit",1)
	elseif sak.have_items_count("protection_outfit",1) then
		sak_inventory.release_actor_items("protection_outfit",1)
	end
end
function klyk_pri_secret()
  treasure_manager.get_treasure_manager():give_treasure("pri_secret_0003")
end
--тайник в гостинице
function strelok_pri_secret()
local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(111.798965,3.999500,121.063812),2182,222835)
  if obj1 then
  fill_pri_secret_treasure(obj1.id)
  end
end
function fill_pri_secret_treasure(obj)
  local obj1=g_sim:object(tonumber(obj))
    g_sim:create("af_unknown_1_new",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id) --239
    g_sim:create("af_unknown_2_new",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id) --274    
    g_sim:create("af_unknown_12_new",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)--244
    g_sim:create("af_unknown_29_new",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)--237
    g_sim:create("af_unknown_20_new",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)--609--16.03kg	 
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--дл€ Ќебова
function have_nebov_ammo_762x39()
  return vergas_lib.search_items("ammo_7.62x39",300,1) ~= false
end
function give_nebov_ammo_762x39()
  vergas_lib.search_items("ammo_7.62x39",300,2)
end
-- ∆ила
function give_20conserva()
  sak_inventory.release_actor_items("conserva",20)
end
function conserva20_have()
  return sak.have_items_count("conserva",20)
end
function give_25green_kolbasa()
  sak_inventory.release_actor_items("green_kolbasa",25)
end
function green_kolbasa_25have()
  return sak.have_items_count("green_kolbasa",25)
end
function give_6conserva()
  sak_inventory.release_actor_items("conserva",6)
end
function conserva6_have()
  return sak.have_items_count("conserva",6)
end
function give_4kolbasa()
  sak_inventory.release_actor_items("kolbasa",4)
end
function kolbasa4_have()
  return sak.have_items_count("kolbasa",4)
end
function give_4green_kolbasa()
  sak_inventory.release_actor_items("green_kolbasa",4)
end
function green_kolbasa_4have()
  return sak.have_items_count("green_kolbasa",4)
 end
--ƒен и »гнат
function have_1_mutant_flesh_shkura()
  return sak.have_items_count("mutant_flesh_shkura",1)~=false
end
function give_1_mutant_flesh_shkura()
  sak_inventory.release_actor_items("mutant_flesh_shkura",1)
end 
function have_1_mutant_snork_leg()
  return sak.have_items_count("mutant_snork_leg",1)~=false
end
function give_1_mutant_snork_leg()
  sak_inventory.release_actor_items("mutant_snork_leg",1)
end 
function add_som_ammo_60_buck()
  som_ammo_12x70_buck(60)
end
-- borov_kill_stalker
function have_200_ammo_buck()
  return vergas_lib.search_items("ammo_12x70_buck",200,1)~= false
end
function give_200_ammo_buck()
  vergas_lib.search_items("ammo_12x70_buck",200,2)
end
function add_borov_kurjer_pda()
  sak.create_items(db.actor, "borov_kurjer_pda",1)
end
function have_borov_kurjer_pda()
  return sak.have_items_count("borov_kurjer_pda",1)~=false
end
function give_borov_kurjer_pda()
  sak_inventory.release_actor_items("borov_kurjer_pda",1)
end
function add_mutant_kulinar()
  sak.create_items(db.actor,"mutant_boar_leg",6)
  sak.create_items(db.actor,"mutant_dog_tail",8)  
end
function add_borov_1prize()
  sak.create_items(db.actor,"wpn_mp5",1)
  sak.create_items(db.actor,"ammo_9x19_pbp",10)
end
function add_borov_2prize()
  sak.create_items(db.actor,"wpn_bizon",1)
  sak.create_items(db.actor,"ammo_9x18_pmm",10)
  sak.create_items(db.actor,"killer_gaz_outfit_m1",1)  
end
--shustriy_find_item and artmod_13
function shustryi_outfit_have()
  return sak.have_items_count("killer_gaz_outfit_m1",1)~=false or sak.have_items_count("merc_scientific_outfit",1)~=false
end
function give_shustryi_outfit()
	if sak.have_items_count("killer_gaz_outfit_m1",1) then
		sak_inventory.release_actor_items("killer_gaz_outfit_m1",1)
	elseif sak.have_items_count("merc_scientific_outfit",1) then
		sak_inventory.release_actor_items("merc_scientific_outfit",1)
	end
end
--new_shustriy_artmod_13
function take_shustriy_artmod_13()
  sak.create_items(db.actor,"af_cristal_flower_dyn5d",1)
end
--new_gar_prapor_courier and artmod_31_32
function add_prapor_poshta()
  sak.create_items(db.actor,"af_unknown_5_new",1)
  sak.create_items(db.actor,"mutant_boar_leg",10)
  sak.create_items(db.actor,"mutant_dog_tail",20)  
end
function af_unknown_5_new_have()
  return sak.have_items_count("af_unknown_5_new",1)~=false
end
function give_af_unknown_5_new()
  sak_inventory.release_actor_items("af_unknown_5_new",1)
end
function have_20_mutant_dog_tail()
  return sak.have_items_count("mutant_dog_tail",20)~=false
end
function give_20_mutant_dog_tail()
  sak_inventory.release_actor_items("mutant_dog_tail",20)
end
function add_greens_2kolbasa()
  sak.create_items(db.actor,"green_kolbasa",2)
end
function take_prapor_artmod_31()
  sak.create_items(db.actor,"af_ameba_slug_dyn5d",1)
end
function add_3rad_cart()
  sak.create_items(db.actor,"rad_cart",3)
end
function take_prapor_artmod_32()
  sak.create_items(db.actor,"af_electra_flash_dyn5d",1)
end
-- ѕатроны Ќј“ќ у Ўинкар€
function add_4ammo_762x51_fmj()
  sak.create_items(db.actor,"ammo_7.62x51_fmj",5)
end
-- ∆ила
function add_ammo_9x19_fmj()
  sak.create_items(db.actor,"ammo_9x19_fmj",1)
end
-- Ѕром спас
function spawn_drunk_dolg_spas() -- спавним спас и пару кровососов
  local points={
  {-334.63,-22.05,217.47,16460,1839},
  {-329.84,-20.05,212.79,19859,1839},
  {-337.12,-23.07,251.70,14561,1835},
  {-332.74,-23.07,253.95,17972,1835},
  {-332.99,-23.02,263.95,17501,1834},
  }
  local rand=lua_random(#points)
  g_sim:create("wpn_spas12_m1",sak.v3f(points[rand][1],points[rand][2],points[rand][3]),points[rand][4],points[rand][5])
  local obj = alife():create("bloodsucker_normal",sak.v3f(-329.84,-20.05,212.79),19859,1839)
  local obj = alife():create("bloodsucker_normal",sak.v3f(-332.74,-23.07,253.95),17972,1835)
end
--mil_minigamer_food
function mil_minigamer_food_have()
  return sak.have_items_count("vodka",10)~=false and sak.have_items_count("conserva",10)~=false
end
function give_mil_minigamer_food()
  sak_inventory.release_actor_items("vodka",10)
  sak_inventory.release_actor_items("conserva",10)
end
--new_ak_strelok
function add_ak74_m1()
  sak.create_items(db.actor,"wpn_ak74_m1",1)
end
function take_bar_lisaped_ak(first_speaker, second_speaker)
  local obj = misc.spawn_to ("wpn_ak74_m1", db.actor)
  if obj then
      schedule.add ("t_m_p_t","sak_dialog.take_lisaped_ak("..obj.id..")",200)
      sak.relocate_item(second_speaker, "in", "wpn_ak74_m1", 1)
  end
end
function take_lisaped_ak(id)
  params.obj_condition (id, 0.39)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = 0.39
  pk:set(data)
end
function add_ak74_m2()
  sak.create_items(db.actor,"wpn_ak74_m2",1)
end
function have_lisaped_opt()
    return sak.have_items_count("wpn_ak74_m1",1)~=false and sak.have_items_count("wpn_fn2000",1)~=false and sak.have_items_count("wpn_aks47",1)~=false
end
function give_lisaped_opt()
  sak_inventory.release_actor_items("wpn_ak74_m1",1)
  sak_inventory.release_actor_items("wpn_fn2000",1)
  sak_inventory.release_actor_items("wpn_aks47",1)  
end
function lisaped_start_time()
  start_time("time_start_lisaped")
end
function is_ready_time_lisaped()
  return is_ready_time("time_start_lisaped",4200)==true
end
function not_ready_time_lisaped()
  return not_ready_time("time_start_lisaped",4200)==true
end
function clear_ready_time_lisaped()
  clear_ready_time("time_start_lisaped")
end
