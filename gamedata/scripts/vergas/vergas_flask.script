--[[
Динамический худ v 4
Фляжки для мытья стекол противогаза 
Vergas
© NLC-6.0
]]--

function take_flask_army(obj,id)
  local obj_id
  if id then
  obj_id=id
    local flask_custom = set_get_flask_custom(2,obj_id)
    if flask_custom == "" then
      flask_custom = lua_random(3)
      set_get_flask_custom(1,obj_id,tostring(flask_custom))
    end
    replace_flask_weight(obj_id,flask_custom)
    return
  else
  obj_id=obj:id()
  end
  local sect = obj:section()
  if sect == "flask_army" then
    local flask_custom = set_get_flask_custom(2,obj_id)
    if flask_custom == "" then
      flask_custom = lua_random(3)
      set_get_flask_custom(1,obj_id,tostring(flask_custom))
    end
    replace_flask_weight(obj_id,flask_custom)
    return
  elseif sect == "flask_army_trade"  then
    local sobj = alife():object(obj_id)
    if sobj then 
      alife():release(sobj, true) 
    end
    local npc=db.actor
    sobj = alife():create("flask_army",npc:position(),npc:level_vertex_id(), npc:game_vertex_id(), npc:id())
    vergas_flask.set_get_flask_custom(1,sobj.id,0)
  end
end

function set_get_flask_custom(mode,flask_id,flask_custom)
  local sobj = alife():object(flask_id)
  if mode == 2 then
    local custom="0"
    local pk = get_netpk(sobj,1)
    if pk:isOk() then
         local data = pk:get()
         custom = data.custom_data
    end
    return custom
  elseif mode == 1 then
    local pk = get_netpk(sobj,1)
    local data = pk:get()
    data.custom_data=flask_custom
    pk:set(data)
  end
end

function replace_flask_weight(flask_id,flask_custom)
  local add_weight = 0.2*tonumber(flask_custom) 
  local sys_weight = system_ini():r_float("flask_army", "inv_weight")
  local new_weight = sys_weight + add_weight
  params.set_inv_weight (flask_id, new_weight)
end

function data_collection(mode)
  local tbl_ch = {}    --фляжка в чехле
  local tbl_r = {}    --фляжки в рюкзаке
  local tbl_n ={}      --номера фляжек
  local i
  if db.actor then
    for i=0, db.actor:object_count()-1 do
      local obj = db.actor:object(i)
      if razgruzka.check_obj(obj) then
        if obj:section() == "flask_army" then
          table.insert(tbl_r,obj:id())
          local flask_custom = set_get_flask_custom(2,obj:id())
          if flask_custom == "" then
            take_flask_army(obj)
            flask_custom = set_get_flask_custom(2,obj:id())
          end
          table.insert(tbl_r, tonumber(flask_custom))
        elseif  obj:section() == "flask_army_on_belt" then
          table.insert(tbl_ch,obj:id())
          table.insert(tbl_ch, tonumber(set_get_flask_custom(2,obj:id())))
        end
      end
    end
  end
  
  --Если надо, добавляю в таблицы записи-пустышки
  if #tbl_r < 8 then
    tbl_r =  razgruzka.set_record_nil(tbl_r,8)
  end
  if #tbl_ch == 0 then
    table.insert(tbl_ch,"?")
    table.insert(tbl_ch,0)
  end
  --присваиваю фляжкам номера
  local n = 1
  for i = 1,#tbl_r,2 do
    if tbl_r ~= "?" then
      table.insert(tbl_n,tbl_r[i])
      table.insert(tbl_n,n)
      n = n+1
    end
  end
  if tbl_ch[1] ~= "?" then
    table.insert(tbl_n,tbl_ch[1])
    table.insert(tbl_n,n)
  end  
  
  if mode == 1 then
    return tbl_r, tbl_ch, tbl_n
  elseif mode == 2 then
    return tbl_ch
  end
end

function update_dirt()
  used_items.set_get_flag_use_gadget(1,false)
  if vergas_masks.get_flag_mask() then
    vergas_masks.set_flag_dirt(true)
    vergas_masks.replace_dirt_phase()
  else  
    vergas_lib.s_play("device\\masks\\water_flask",5)
    schedule.add("flask_end", "sak.restore_weap()", 9000)
    used_items.set_get_flag_use_gadget(1,true)
  end
end


function wash_glass(info_chhl)
  sak.actor_hide_weapon()
  if info_chhl[1] == "?" or info_chhl[2] == 0 then
    --sak.send_tip("Воды нет...", "Блин! Ну надо же!", 1, 10, "g_g", "sak", "red")
    vergas_lib.s_play("device\\masks\\water_no",5)
    schedule.add("chow_wash", "sak.restore_weap()", 4000)
  else
    info_chhl[2] = info_chhl[2] - 1
    vergas_flask.set_get_flask_custom(1,info_chhl[1],info_chhl[2])
    vergas_flask.replace_flask_weight(info_chhl[1],info_chhl[2])
    schedule.add("chow_wash", "vergas_flask.update_dirt()", 1000)
  end
  return  info_chhl
end
