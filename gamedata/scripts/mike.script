-- mikelik 

local arts={
  {"af_unknown_1_new","af_unknown_22_new","af_unknown_31_new"},
  {"af_unknown_2_new","af_unknown_16_new","af_unknown_28_new"},
  {"af_unknown_3_new","af_unknown_5_new","af_unknown_25_new"},
  {"af_unknown_4_new","af_unknown_14_new","af_unknown_20_new"},
  {"af_unknown_6_new","af_unknown_9_new","af_unknown_21_new"},
  {"af_unknown_8_new","af_unknown_18_new","af_unknown_26_new"},
  {"af_unknown_7_new","af_unknown_19_new","af_unknown_23_new"},
  {"af_unknown_12_new","af_unknown_24_new","af_unknown_29_new"},
  {"af_unknown_11_new","af_unknown_15_new","af_unknown_30_new"}
  }
local name_arts={
  {"A-239","O-477","S-753"},
  {"B-274","K-346","S-804"},
  {"C-247","D-396","P-702"},
  {"D-845","J-060","M-609"},
  {"D-654","G-024","N-766"},
  {"E-545","K-683","Q-317"},
  {"D-781","L-614","P-049"},
  {"J-244","P-877","S-237"},
  {"I-182","J-790","S-357"}
  }
local sborka = false

local mayat={
  "af_mayatnik_tuman_new_capsule",
  "af_mayatnik_les_new_capsule",
  "af_mayatnik_radar_new_capsule",
  "af_mayatnik_tesla_new_capsule",
  "af_mayatnik_stadion_new_capsule",
  "af_mayatnik_chaes_new_capsule"
  }

function give_semena()
  local i=lua_random(1,9)
  nlc_vars.set=i
  if i then 
	sak.create_items(db.actor,arts[i][1],1)
	sak.create_items(db.actor,arts[i][2],1)
	sak.create_items(db.actor,arts[i][3],1)
  end	
end

function doc_give_art()
	sak.create_items(db.actor,"af_red_dummy_pellicle",1)
end

function give_sheets()
	sak.create_items(db.actor,"strelok_sheets",1)
end

function memory_module_have()
  return sak.have_items_count("memory_module",2)~=false
end

function memory_module_no_have()
  return sak.have_items_count("memory_module",2)==false
end

function give_decoder()
	sak.create_items(db.actor,"self_made_decoder",1)
end

function gg_decoder_no_have()
	return sak.have_items_count("self_made_decoder",1)==false
end

function give_med()
  sak.create_items(db.actor,"antirad",2)
  sak.create_items(db.actor,"medkit_army",2)
end

function give_med_plus()
  sak.create_items(db.actor,"suhpay",1)
  sak.create_items(db.actor,"medkit_army",1)
end

function gg_sick()
  local healh=actor_params.cond_prop("health")
  return healh<0.4
end

function gg_very_sick()
  local healh=actor_params.cond_prop("health")
  return healh<0.15
end

function add_ivar_treasure()
  local obj1=amk.spawn_item("rukzak_inventory_box",vector():set(521.59063720703,-47.673824310303,-181.69540405273),2056,176701)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Somewhere around here is Ivar's hub.")
  if obj1 then
     fill_ivar_treasure(obj1.id)
  end
end

function fill_ivar_treasure(obj)
  local obj1=g_sim:object(tonumber(obj))
  g_sim:create("af_dummy_spring_capsule",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("af_full_akkum", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_5.56x45_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_5.56x45_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_5.56x45_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end

function bronik_have()
  return sak.have_items_count("ecolog_outfit_m1",1)~=false
end

function take_bronik()
  sak_inventory.release_actor_items("ecolog_outfit_m1", 1)
end

function box_have()
  return sak.have_items_count("arc_art_box_basic",1)~=false
end

function give_ivar_box()
  sak_inventory.release_actor_items("arc_art_box_basic",1)
end

function add_suhpay()
  sak.create_items(db.actor,"suhpay",5)
end

function give_ivar_weapon()
  sak_inventory.release_actor_items("wpn_colt1911", 1)
  sak_inventory.release_actor_items("wpn_spas12", 1)
  sak_inventory.release_actor_items("wpn_sig550", 1)
end

function take_ivar_weapon()
sak_inventory.release_actor_items("quest_manycase_01", 1)
  sak.create_items(db.actor,"wpn_colt1911",1)
  sak.create_items(db.actor,"wpn_spas12",1)
  sak.create_items(db.actor,"wpn_sig550",1)
end

function add_rygyi_habar()
  local obj1=amk.spawn_item("rukzak_inventory_box",vector():set(-29.826679229736,15.82318687439,72.517303466797),3810,221161)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Somewhere in here is Red's hub.")
  if obj1 then
     fill_rygyi_habar(obj1.id)
  end
end

function fill_rygyi_habar(obj)
  local obj1=g_sim:object(tonumber(obj))
  g_sim:create("af_spirit_3",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("af_dummy_dummy_capsule",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("af_full_akkum", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("conserva", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("conserva", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("conserva", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end

function timer_prizrak()
  timers.start_timer("timer_prizrak",0,0,20,"mike.timer_prizrak_end()")
end

function timer_prizrak_end()
  sak.send_tip("Marked One, it's a Ghost. Come to Yantar I'll wait at Sakharov's bunker. We need to talk.","Message from Ghost",11,20,"prizrak","sak", "green")
  db.actor:give_info_portion("prizrak_message")
end

function final_message()
	sak.send_tip("This concludes the storyline. You can continue with the freeplay if you want. Thank you for your patience.","Final message",11,20,nil,"news","sky_blue")
end

function talk_about_set()
  local i=nlc_vars.set
	db.actor:give_talk_message(name_arts[i][1],"ui\\ui_iconsTotal",Frect():set(0,0,0,0), "simple_answer_item")
	db.actor:give_talk_message(name_arts[i][2],"ui\\ui_iconsTotal",Frect():set(0,0,0,0), "simple_answer_item")
	db.actor:give_talk_message(name_arts[i][3],"ui\\ui_iconsTotal",Frect():set(0,0,0,0), "simple_answer_item")
end

function timer_sanek()
  timers.start_timer("timer_sanek",0,2,0,"mike.timer_sanek_end()")
end

function timer_sanek_end()
  db.actor:give_info_portion("timer_sanek_end")
end

function timer_voron()
  timers.start_timer("timer_voron",0,2,0,"mike.timer_voron_end()")
end

function timer_voron_end()
  db.actor:give_info_portion("timer_voron_end")
end

function timer_scarman()
  timers.start_timer("timer_scarman",0,12,0,"mike.timer_scarman_end()")
end

function timer_scarman_end()
  db.actor:give_info_portion("timer_scarman_end")
end


function gg_3_dart_have()
  return sak_dialog.gg_n_dart_have(3)
end

function give_3_dart()
  sak_dialog.give_n_dart(3)
end

function take_art1()
local i=nlc_vars.set
	sak.create_items(db.actor,arts[i][1],1)
end

function take_art2()
local i=nlc_vars.set
	sak.create_items(db.actor,arts[i][2],1)
end

function take_art3()
local i=nlc_vars.set
	sak.create_items(db.actor,arts[i][3],1)
end

function have_3_cheque2()
  return sak.have_items_count("2bearer_cheque",3)~=false
end

function give_3_cheque2()
  if sak.have_items_count("2bearer_cheque",3) then
	sak_inventory.release_actor_items("2bearer_cheque", 3)
  end
end

function af_transform(af, anom_sect)
  local af_sect = af:section()
  local pos     = af:position()
  local actor   = db.actor

  local set={
    {"af_unknown_1_new","af_unknown_22_new","af_unknown_31_new"},
    {"af_unknown_2_new","af_unknown_16_new","af_unknown_28_new"},
    {"af_unknown_3_new","af_unknown_5_new","af_unknown_25_new"},
    {"af_unknown_4_new","af_unknown_14_new","af_unknown_20_new"},
    {"af_unknown_6_new","af_unknown_9_new","af_unknown_21_new"},
    {"af_unknown_8_new","af_unknown_18_new","af_unknown_26_new"},
    {"af_unknown_7_new","af_unknown_19_new","af_unknown_23_new"},
    {"af_unknown_12_new","af_unknown_24_new","af_unknown_29_new"},
    {"af_unknown_11_new","af_unknown_15_new","af_unknown_30_new"}
   }
  local i=(nlc_vars.set or 1)
  local infop = false
  local lvl = level.name()
  local row = set[i]
  
-- семечки
  if strposx(anom_sect, "_psi_field") and actor:has_info("semena_start_info") then
    if lvl=="generators"  and af_sect==row[1] then infop = "sema_one_info"   end
    if lvl=="deadcity"    and af_sect==row[2] then infop = "sema_two_info"   end
    if lvl=="l11_pripyat" and af_sect==row[3] then infop = "sema_three_info" end
    if infop then
       amk_mod.af_flash(af)
       sak.send_tip("Оно благодарит тебя.", "Сообщение от Связующего", 11, 20, "teleport", "sak", "green")
       db.actor:give_info_portion(infop)
       local tt = amk_mod.af_start_transform(100, 0, af_sect, "af_dummy_buliz")
       return amk_mod.af_start_transform_timer(tt, pos, 6, 0, 0, "Нечто")
    end
  end
-- аккумулятор
  --[[if strposx(anom_sect, "_galant") and af_sect=="af_dummy_dummy_new" and actor:has_info("akk_is_ready") then
       amk_mod.af_flash(af)
       db.actor:give_info_portion("petrenko_tesla_job_done")
       local tt = amk_mod.af_start_transform(100, 0, af_sect, "af_dummy_buliz")
       return amk_mod.af_start_transform_timer(tt, pos, 0, 1, 0, "Булыжник")
   end--]]
  return false
end

function timer_lebedev()
  timers.start_timer("timer_lebedev",0,0,30,"mike.timer_lebedev_end()")
end

function timer_lebedev_end()
  sak.send_tip("Brother Marked One, the Binder calls you. Come and do what you have to do. He's waiting for you.","Message from the Binder Swan",11,20,"teleport","sak", "green")
  db.actor:give_info_portion("lebedev_message")
end

function last_sheet()
  sak.send_tip("The last passage of Strelok's notes.","",0,20,"g_g","news", "blue")
end

function add_scarman_habar()
  local obj1=amk.spawn_item("rukzak_inventory_box",vector():set(147.80940246582,-0.24155102670193,-187.4507598877),3304,106630)
  if obj1 then
     fill_scarman_habar(obj1.id)
  end
end

function fill_scarman_habar(obj)
  local obj1=g_sim:object(tonumber(obj))
  g_sim:create("af_kol_1",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("af_rusty_sea-urchin_capsule",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_5.56x45_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_5.56x45_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_5.56x45_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end

function spawn_in_x12()
 amk.spawn_item("af_dummy_dummy_new",vector():set(8.1679067611694,-22.772760391235,8.207935333252),2703,7794)
end

function spawn_on_st2()
	local obj1=amk.spawn_item("marsh_inventory_box",vector():set(705.16,-21.93,318.56),4543,401069)
	if obj1 then
		fill_strelok_box(obj1.id)
	end
	amk.spawn_item("af_unknown_1_new",vector():set(6.99,4.37,181.7),4299,35022)
	amk.spawn_item("af_unknown_2_new",vector():set(334.01,-0.0014,422.02),4390,189862)
	amk.spawn_item("af_unknown_3_new",vector():set(813.3,-0.0012,432.23),4506,461261)
	amk.spawn_item("af_unknown_4_new",vector():set(986.89,-0.0014,96.329),4533,569544)
	amk.spawn_item("af_unknown_5_new",vector():set(783.46,-0.0017,120.24),4487,444671)
	amk.spawn_item("af_unknown_6_new",vector():set(204.69,-0.002,295.69),4353,115451)
	amk.spawn_item("af_unknown_7_new",vector():set(208.82,-0.0004,200.47),4356,117314)
	amk.spawn_item("af_unknown_8_new",vector():set(265.43,-0.00035,84.41),4375,145278)
	amk.spawn_item("af_unknown_9_new",vector():set(738.37,0.0018,363.08),4482,418643)
	amk.spawn_item("af_unknown_10_new",vector():set(1032.57,-0.0011,177.91),4539,584846)
	amk.spawn_item("af_unknown_11_new",vector():set(820.58,-0.0054,243.81),4490,466788)
	amk.spawn_item("af_unknown_12_new",vector():set(357.5,-0.0004,223.25),4399,205023)
	amk.spawn_item("af_unknown_13_new",vector():set(-55.102,-0.002,120.5),4291,8365)
	amk.spawn_item("af_unknown_14_new",vector():set(280.5,-0.00115,284.8),4373,155817)
	amk.spawn_item("af_unknown_15_new",vector():set(938.23,-0.0027,348.45),4521,546693)
	amk.spawn_item("af_unknown_16_new",vector():set(929.37,-0.0006,203.43),4518,539174)
	amk.spawn_item("af_unknown_17_new",vector():set(407.91,-0.0007,170.15),4408,241905)
	amk.spawn_item("af_unknown_18_new",vector():set(-56.108,-0.001,212.55),4292,8212)
	amk.spawn_item("af_unknown_19_new",vector():set(419.77,-0.0075,373.81),4410,249749)
	amk.spawn_item("af_unknown_20_new",vector():set(930.46,-0.0007,442.62),4516,540407)
	amk.spawn_item("af_unknown_21_new",vector():set(988.84,-0.002,167.38),4528,569961)
	amk.spawn_item("af_unknown_22_new",vector():set(620.925,-0.014,165.71),4457,360030)
	amk.spawn_item("af_unknown_23_new",vector():set(48.068,4.999,98.382),4312,53447)
	amk.spawn_item("af_unknown_24_new",vector():set(509.33,-0.0017,162.37),4424,299283)
	amk.spawn_item("af_unknown_25_new",vector():set(1035.82,-0.0013,343.56),4542,586406)
	amk.spawn_item("af_unknown_26_new",vector():set(831.5,-0.026,173.61),4502,472872)
	amk.spawn_item("af_unknown_27_new",vector():set(273.05,-0.0013,318.06),4373,150633)
	amk.spawn_item("af_unknown_28_new",vector():set(933.74,-0.0045,289.28),4520,543195)
	amk.spawn_item("af_unknown_29_new",vector():set(618.53,-0.0022,359.61),4456,357082)
	amk.spawn_item("af_unknown_30_new",vector():set(1023.23,-0.0003,255.96),4534,581978)
	amk.spawn_item("af_unknown_31_new",vector():set(618.73,-0.0012,160.66),4457,358056)
	amk.spawn_item("strelok_book1",vector():set(701.13,-21.13,319.51),4543,398864)
	amk.spawn_item("strelok_book2",vector():set(704.85,-20.95,325.18),4543,401081)
end
	
function fill_strelok_box(obj)
  local obj1=g_sim:object(tonumber(obj))
  g_sim:create("af_full_akkum", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("belt_6_art", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("flask_army", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("flask_army", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("conserva", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("conserva", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("conserva", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("medkit_scientic", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
  g_sim:create("medkit_scientic", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
  g_sim:create("antirad", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
  g_sim:create("antirad", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
  g_sim:create("ammo_5.56x45_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_5.56x45_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_5.45x39_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_5.45x39_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_7.62x54_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("ammo_7.62x54_ap", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("repair_item_weapon_feik", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("repair_item_weapon_feik", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("repair_item_weapon_feik", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("repair_itemoutfit_feik", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("repair_itemoutfit_feik", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("repair_itemoutfit_feik", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("repair_itemoutfit_feik", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("matches", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("matches", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end

function info_strelok1()
	sak.send_tip("Written pages look like hastily torn out manuscript sheets from the notes of some lectures or calculations.","Torn notes",0,10,"g_g","pda_news", "sky_blue")
	local obj1 = g_sim:story_object(9803)
	local obj2 = g_sim:story_object(9804)
	local obj3 = g_sim:story_object(9805)
	local obj4 = g_sim:story_object(9806)
	local obj5 = g_sim:story_object(9807)
	local obj6 = g_sim:story_object(9808)
	if obj1 then
		amk.add_spot_on_map(obj1.id, "crlc_very_big", "...")
	end
	if obj2 then
		amk.add_spot_on_map(obj2.id, "crlc_very_big", "...")
	end
	if obj3 then
		amk.add_spot_on_map(obj3.id, "crlc_very_big", "...")
	end
	if obj4 then
		amk.add_spot_on_map(obj4.id, "crlc_very_big", "...")
	end
	if obj5 then
		amk.add_spot_on_map(obj5.id, "crlc_very_big", "...")
	end
	if obj6 then
		amk.add_spot_on_map(obj6.id, "crlc_very_big", "...")
	end	
end

function info_strelok2()
	sak.send_tip("A book with notes... Strelok's?","Notebook",0,10,"g_g","pda_news", "sky_blue")
end

local randi=lua_random(1,6)
function gg_on_spot()
	-- рандомный перенос в нужное место из рестриктора при наличии артов
	local z={101,396,411,340,104,252}
	local pos=db.actor:position()
	if (math.abs(math.floor(pos.z)-z[randi])<=1 and sborka==true) then
		level.add_pp_effector("teleport.ppe", 1527, false)
		db.actor:set_actor_position(vector():set(5.0570355,5.1950564,65.282631))
	end
end

local mem=false
function gg_last_memory()
	-- последние воспоминания при пропадании в рестриктор
	if mem==false then
		local count=nlc_vars.rem_count or 0
		if count<=9 then
		  sak.send_tip("I remembered when I got into the Zone.","Memory",1,20,"g_g","rememb","yellow")
		  local character=math.floor(((amk_vars.r_task_reward or 1)+(amk_vars.x18_iq_check or 1))/2)
		  repeat
			local info="rem_"..tostring(character).."_"..tostring(count)
			db.actor:give_info_portion(info)
			count = count+1
		  until count==10
		end
		mem=true
		nlc_vars.rem_count = 10
	end
end

function art_new_collection()
  -- проверка нужных артов на поясе
  if db.actor:has_info("strelok_book") then
    if not sak.arts_operate then return end
    local sum = 0
    local delta = 10
    local arts_new = { 
    {"af_unknown_1_new",239},
    {"af_unknown_2_new",274},
    {"af_unknown_3_new",247},
    {"af_unknown_4_new",845},
    {"af_unknown_5_new",396},
    {"af_unknown_6_new",654},
    {"af_unknown_7_new",781},
    {"af_unknown_8_new",545},
    {"af_unknown_9_new",24},
    {"af_unknown_10_new",121},
    {"af_unknown_11_new",182},
    {"af_unknown_12_new",244},
    {"af_unknown_13_new",142},
    {"af_unknown_14_new",60},
    {"af_unknown_15_new",790},
    {"af_unknown_16_new",346},
    {"af_unknown_17_new",162},
    {"af_unknown_18_new",683},
    {"af_unknown_19_new",614},
    {"af_unknown_20_new",609},
    {"af_unknown_21_new",766},
    {"af_unknown_22_new",477},
    {"af_unknown_23_new",49},
    {"af_unknown_24_new",877},
    {"af_unknown_25_new",702},
    {"af_unknown_26_new",317},
    {"af_unknown_27_new",51},
    {"af_unknown_28_new",804},
    {"af_unknown_29_new",237},
    {"af_unknown_30_new",357},
    {"af_unknown_31_new",753}
    }
    for i=1,31 do
      if sak_inventory.belt_items[arts_new[i][1]] then
	    sum=sum+arts_new[i][2]
	  end
    end
    if (sum>(1600+delta) or sum<(1600-delta)) then
	  sborka = false 
    else
	  sak.send_tip("Вроде набран нужный вес, в допустимых пределах.","Неужели сборка!",0,10,"artmod","rememb","green")
	  sborka = true
    end
  end
end

local table_aart={
  "af_medusa",
  "af_vyvert",
  "af_blood",
  "af_electra_sparkler",
  "af_drops",
  "af_ameba_slime",
  "af_rusty_thorn"}
local table_bart={
  "af_cristal_flower",
  "af_gravi",
  "af_mincer_meat",
  "af_electra_flash",
  "af_fireball",
  "af_ameba_slug",
  "af_rusty_kristall"}
local table_cart={
  "af_rusty_sea-urchin",
  "af_night_star",
  "af_gold_fish",
  "af_soul",
  "af_electra_moonlight",
  "af_cristall",
  "af_ameba_mica",
  "af_crist_new",
  "af_flower_new",
  "af_star_new",
  "af_glass_new",
  "af_dummy_green_medusa",
  "af_dummy_green_vyvert",
  "af_dummy_green_blood"}
local table_capsule={
  "af_night_star_capsule",
  "af_gold_fish_capsule",
  "af_cristall_capsule",
  "af_soul_capsule",
  "af_electra_moonlight_capsule",
  "af_rusty_sea-urchin_capsule",
  "af_ameba_mica_capsule",
  "af_dummy_spring_capsule",
  "af_dummy_dummy_capsule",
  "af_dummy_battery_capsule",
  "af_dummy_pellicle_capsule",
  "af_dummy_kolobok_capsule",
  "af_dummy_glassbeads_capsule",
  "af_mayatnik_tuman_new_capsule",
  "af_mayatnik_les_new_capsule",
  "af_mayatnik_radar_new_capsule",
  "af_mayatnik_tesla_new_capsule",
  "af_mayatnik_stadion_new_capsule",
  "af_mayatnik_chaes_new_capsule"
  }
  
function fill_red_treasure()
  local obj1 = g_sim:story_object(story_ids.red_inventory_box_01)
  local rand = lua_random(1,3)
  for a=1,rand do
    local section=table_bart[lua_random(1,#table_bart)]
    local b=lua_random(3,5)
    if not strpos(section, "_new",1,true) and not strpos(section, "_dummy_",1,true) then
      section=section.."_dyn"..b.."d"
    end
    g_sim:create(section,obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
    local sectionb=table_cart[lua_random(1,#table_cart)]
    if not strpos(sectionb, "_new",1,true) and not strpos(sectionb, "_dummy_",1,true) then
      sectionb=sectionb.."_dyn5d"
    end  
    g_sim:create(sectionb,obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  local i=lua_random(1,31)
  g_sim:create("af_unknown_"..i.."_new",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("red_shtreck_letter",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("monolit_scientific_outfit",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("af_pudd_2",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
end

function timer_lim_scaner()
  timers.start_timer("timer_lim_scaner",3,0,0,"mike.timer_lim_scaner_end()")
end

function timer_lim_scaner_end()
  db.actor:give_info_portion("scaner_artefact_done")
end

function lim_botan_add_prize()
  sak.create_items(db.actor, "bandage",10)
  sak.create_items(db.actor, "antirad",2)
  sak.create_items(db.actor, "medkit_army",3)
  sak.create_items(db.actor, "ammo_5.45x39_ap",5)
end

function fill_food_prip()
  local rand = lua_random(3,5)
  for a=1,rand do
    g_sim:create("bread",vector():set(-2.82+(a*0.03),-4.05,192.28+(a*0.03)),97081,2195)
  end
  rand = lua_random(3,6)
  for a=1,rand do
    g_sim:create("kolbasa",vector():set(-2.82+(a*0.05),-4.05,193.12+(a*0.03)),97951,2195)
  end
end

function scarman_pda_have()
  return sak.have_items_count("scarman_pda",1)~=false
end

function scarman_pda_give()
  sak_inventory.release_actor_items("scarman_pda", 1)
end

function manometr_vodka_have()
  return sak.have_items_count("vodka",10)~=false
end

function manometr_vodka_no_have()
  return sak.have_items_count("vodka",10)==false
end

function manometr_vodka_give()
  sak_inventory.release_actor_items("vodka", 10)
end

function manometr_take()
  sak.create_items(db.actor,"manometr",1)
end

function timer_tesla_free()
  timers.start_timer("timer_tesla_free",3,0,0,"mike.timer_tesla_free_end()")
  db.actor:give_info_portion("tesla_free")
end

function timer_tesla_free_end()
  db.actor:disable_info_portion("tesla_free")
end

function fill_aes_treasure()
  local obj1 = g_sim:story_object(story_ids.aes_inventory_box_0001)
  if obj1 then
	  amk.add_spot_on_map(obj1.id, "crlc_big_treasure3", "Стрелок зачем-то отметил и это место")
	  g_sim:create("af_dummy_buliz",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  g_sim:create("af_dummy_simbion",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  g_sim:create("wpn_svd",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  g_sim:create("ammo_7.62x54_7h14", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  g_sim:create("ammo_7.62x54_7h14", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  g_sim:create("ammo_7.62x54_7h14", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  g_sim:create("repair_item_weapon_feik", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  g_sim:create("repair_itemoutfit_feik", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  g_sim:create("repair_itemoutfit_feik", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  g_sim:create("flask_army", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  g_sim:create("conserva", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  g_sim:create("conserva", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  g_sim:create("medkit_scientic", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
	  g_sim:create("medkit_scientic", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
	  g_sim:create("antirad", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
	  --g_sim:create("repair_boxoutfit", obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)  
  end  
  local obj2 = g_sim:story_object(story_ids.strelok_spot)
  if obj2 then
	  amk.add_spot_on_map(obj2.id, "crlc_very_big", "Что-то тут есть в этой части карты")
  end  
end

function add_rjaboi_kontainer()
  local sobj=amk.spawn_item("arc_art_box_1basic",vector():set(179.959,-0.19,-187.105),3309,119951)
  if sobj then
	  local pk = get_netpk(sobj)
	  local data = pk:get()
	  data.custom_data = "af_compass_dyn5d_50"
	  pk:set(data)
  end
  local obj=g_sim:story_object(story_ids.mil_rjaboi)
  if obj then
      local pk = get_netpk(obj)
      local data = pk:get()
      data.health     = 0
      data.upd.health = 0
      pk:set(data)
  end
end

function have_many_arts()
	for i,k in pairs(sak_inventory.rucksack) do
		if strpos(i, "af_",1,true) and not strpos(i, "af_full_akkum",1,true) and not strpos(i, "af_dummy_black_tip",1,true)  then
			local kolvo = #k
			for m=1,kolvo do
				sak.add_price_arts(i)
			end
		end
	end
local have_many=sak.load_variable("price_arts",0)
	if have_many>=45000 then sak.del_variable("price_arts") return true end
end

function rjaboi_letter_give()
  sak.create_items(db.actor,"mil_rjaboi_letter",1)
end

function add_1_pda_npc()
  add_device_pda_npc()
  sak.send_tip("1 шт.","Получен ПДА",0,5,"g_g","","green")
end

function add_5_pda_npc()
  for i=1,5 do 
	  local a = lua_random()
	  if a<=0.0 then 
		sak.create_items(db.actor, "device_pda_npc")
	  else	
		add_device_pda_npc()
	  end
  end
  sak.send_tip("5 шт.","Получены ПДА",0,5,"g_g","","green")
end

function add_12_pda_npc()
  for i=1,12 do 
	  local a = lua_random()
	  if a<=0.0 then 
		sak.create_items(db.actor, "device_pda_npc")
	  else	
		add_device_pda_npc()
	  end
  end
  sak.send_tip("12 шт.","Получены ПДА",0,5,"g_g","","green")
end

function add_25_pda_npc()
  for i=1,25 do 
	  local a = lua_random()
	  if a<=0.0 then 
		sak.create_items(db.actor, "device_pda_npc")
	  else	
		add_device_pda_npc()
	  end
  end
  sak.send_tip("25 шт.","Получены ПДА",0,5,"g_g","","green")
end

function add_device_pda_npc()
  local npc=db.actor
  local obj=alife():create("device_pda_npc",npc:position(),npc:level_vertex_id(),npc:game_vertex_id(),npc:id())
  if obj then
     vergas_pda.add_tbl_pda(npc:id(),obj.id,2)
  end
end

function PDA_3_have()
   return sak.have_items_count("device_pda_npc",3)~=false
end

function give_3PDA()
   sak_inventory.release_actor_items("device_pda_npc",3)
end

function u_agr_tele()
  local start_tele=false
  local obj_id,obj=-1,nil
  local bo = false
  local komp = false
  for i,k in pairs(sak_inventory.belt_items) do
    local kolvo=table.getn(k)
	if strpos(i,"af_compass",1,true) and not strpos(i,"_dyn6d",1,true) then
	  komp = true
	  obj_id=k[1]
      obj= g_sim:object(obj_id)
    elseif strpos(i,"af_electra_sparkler",1,true) and not strpos(i,"_dyn6d",1,true) then 
	  bo = true
	  obj_id=k[1]
      obj= g_sim:object(obj_id)
	end
    start_tele=true
	if bo and komp then
	  komp = false
	end
  end
  if obj==nil then return end
  if sak.arts_operate and start_tele then
    local pk = get_netpk(obj,1)
    local data = pk:get()
    local cond=data.condition+0.0004
    if cond>=1 then cond=0.9999 end
    if cond>0.25 then
      local new_cond=(cond-0.20)
      params.obj_condition(obj_id, new_cond)
      data.condition = new_cond
      pk:set(data)
      level.add_pp_effector("blink.ppe", 234, false)
      level.add_pp_effector("teleport.ppe", 2006, false)
      sak.eff_vodka()
      if new_cond<0.25 then
        coord_params.set_obj_section(obj_id, "af_electra_sparkler_dyn6d")
      end
	  if bo then
		db.actor:set_actor_position(patrol("klyk_teleport"):point(0))
		local dir=patrol("klyk_teleport"):point(0):sub(patrol("klyk_teleport"):point(0))
		db.actor:set_actor_direction(-dir:getH())
	  elseif komp then
	    db.actor:set_actor_position(patrol("agru_tele_aver"):point(0))
	  end
      return
    end
  end
end

-- Добавлено в 2017 --
function info_mon_tupik()
  sak.send_tip("Всё зря!.. \\nРазве что попытаться через затопленный туннель, про который Ивар что-то говорил... \\nТолько бы выбраться отсюда.","Так тут же тупик везде!!",5,15,"g_g","sak","yellow")
end

function mon_no_flame()
    misc.release_by_name("mon_big_fire_zone_0001")
	misc.release_by_name("mon_big_fire_zone_0002")
	misc.release_by_name("mon_big_fire_zone_0003")
end

function timer_esc_lamp()
  timers.start_timer("timer_esc_lamp",3,12,0,"mike.timer_esc_lamp_end()")
end

function timer_esc_lamp_end()
  db.actor:give_info_portion("time_lampa_order_info")
end

function timer_lim_zub()
  timers.start_timer("timer_lim_zub",0,2,0,"mike.timer_lim_zub_end()")
end

function timer_lim_zub_end()
  db.actor:give_info_portion("lim_zub_tunnel")
end

function gg_1_caps_have()
  return gg_n_caps_have(1)
end
function give_1_caps()
  give_n_caps(1)
end
function gg_2_caps_have()
  return gg_n_caps_have(2)
end
function give_2_caps()
  give_n_caps(2)
end
function gg_4_caps_have()
  return gg_n_caps_have(4)
end
function give_4_caps()
  give_n_caps(4)
end

function gg_n_caps_have(n)
  local amount=0
  for a=1, #table_capsule do
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_capsule[a],1,true) then
        local kolvo = #k
        amount=amount+kolvo
      end
    end
  end
  if amount>=n then return true end
end
function give_n_caps(n)
  local amount
  local art_kol=n
  for a=1, #table_capsule do
  amount=0
    for i,k in pairs(sak_inventory.rucksack) do
      if strpos(i, table_capsule[a],1,true) then
        local kolvo = #k
        for m=1,kolvo do
          if art_kol>0 then
          local obj=g_sim:object(k[m])
          if obj then
          g_sim:release(obj, true)
          end
          amount=amount+1
          art_kol=art_kol-1
          end
        end
      end
    end
    if amount~=0 then
    sak.relocate_item(db.actor, "out", table_capsule[a], amount)
    end
  end
end

function take_notebook()
	sak.create_items(db.actor,"note-book",1)
end

function give_fanat_gun(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "wpn_spas12", "out")
end

function have_fanat_gun()
  return sak.have_items_count("wpn_spas12",1)~=false
end

function timer_zub()
  timers.start_timer("timer_zub",0,0,30,"mike.timer_zub_end()")
end

function timer_zub_end()
  sak.send_tip("Не забудь закрыть воду! \\nЧё там по нашему делу? Если есть уже что-то - подваливай.","Адресат неизвестен",11,20,"prizrak","sak", "green")
end

function spawn_in_sarcofag()
local table_skelets={
"physics\\dead_body\\skelet_combine_pose_00.ogf",
"physics\\dead_body\\skelet_combine_pose_01.ogf",
"physics\\dead_body\\skelet_combine_pose_02.ogf",
"physics\\dead_body\\skelet_combine_pose_03.ogf"
}
   local obj1 = amk.spawn_item("sak_skelet", vector():set(14.52,-0.1,35.53),2411,4219)
   local obj2 = amk.spawn_item("sak_skelet", vector():set(10.56,-0.43,8.12),2424,3592)
   local obj3 = amk.spawn_item("sak_skelet", vector():set(21.13,16.84,30.6),2459,4984)
   local obj4 = amk.spawn_item("sak_skelet", vector():set(51.46,12.23,-10.43),2456,8805)
   local obj5 = amk.spawn_item("sak_skelet", vector():set(-4.51,11.8,28.64),2443,898)
    if obj1 then
        local pk = get_netpk(obj1,1)
        local data = pk:get()
        data.object_flags = -197
        data.visual_name=table_skelets[1]
        data.physic_type=3
        data.mass=10
        pk:set(data)
    end
	if obj2 then
	    local pk = get_netpk(obj2,1)
        local data = pk:get()
        data.object_flags = -197
        data.visual_name=table_skelets[2]
        data.physic_type=3
        data.mass=10
        pk:set(data)
	end
	if obj3 then
	    local pk = get_netpk(obj3,1)
        local data = pk:get()
        data.object_flags = -197
        data.visual_name=table_skelets[3]
        data.physic_type=3
        data.mass=10
        pk:set(data)
	end
	if obj4 then
	    local pk = get_netpk(obj4,1)
        local data = pk:get()
        data.object_flags = -197
        data.visual_name=table_skelets[2]
        data.physic_type=3
        data.mass=10
        pk:set(data)
	end
	if obj5 then
	    local pk = get_netpk(obj5,1)
        local data = pk:get()
        data.object_flags = -197
        data.visual_name=table_skelets[1]
        data.physic_type=3
        data.mass=10
        pk:set(data)
	end

	amk.spawn_item("antirad",vector():set(14.93,-0.09,35.02),2411,4219)
	amk.spawn_item("antirad",vector():set(14.95,-0.09,35.05),2411,4219)
	amk.spawn_item("flask_army",vector():set(10.6,-0.43,8.2),2424,3592)
	amk.spawn_item("antirad",vector():set(10.6,-0.43,8.2),2424,3592)
	amk.spawn_item("antirad",vector():set(21.25,16.84,31.01),2459,4984)
	amk.spawn_item("medkit_army",vector():set(21.27,16.84,31.08),2459,4984)
	amk.spawn_item("flask_army",vector():set(51.6,12.23,-10.0),2456,8805)
	amk.spawn_item("medkit_army",vector():set(51.6,12.23,-10.0),2456,8805)
	amk.spawn_item("antirad",vector():set(-4.3,11.8,28.9),2443,898)
	amk.spawn_item("medkit_army",vector():set(-4.2,11.8,28.4),2443,898)
end

function spawn_gross_merc()
  alife():create("gross_merc", vector():set(-351.54,-13.72,399.51), 6400, 1848)
end

function spawn_radar_mercs()
  alife():create("new_killer_leader", vector():set(636.83,-43.82,190.43), 225906, 1911)
  alife():create("new_killer_general1", vector():set(636.83,-43.82,190.43), 225906, 1911)
  alife():create("new_killer_general2", vector():set(636.83,-43.82,190.43), 225906, 1911)
--  alife():create("new_killer_veteran1", vector():set(636.83,-43.82,190.43), 225906, 1911)
  alife():create("new_killer_veteran2", vector():set(636.83,-43.82,190.43), 225906, 1911)
  alife():create("new_killer_exo", vector():set(636.83,-43.82,190.43), 225906, 1911)
  alife():create("new_killer_general3", vector():set(662.84,-43.88,173.26), 227150, 1914)
end

function spawn_after_x12()
  timers.start_timer("timer_merc_after",0,0,5,"mike.timer_merc_after_end()")
  alife():create("new_killer_general4", vector():set(533.82,-41.32,115.9), 182672, 1903)
  alife():create("new_killer_veteran3", vector():set(533.82,-41.32,115.9), 182672, 1903)
  alife():create("new_killer_general5", vector():set(543.81,-39.64,144.7), 187917, 1904)
  alife():create("new_killer_veteran4", vector():set(543.81,-39.64,144.7), 187917, 1904)
  misc.release_by_name("new_killer_x12") 
  db.actor:disable_info_portion("red_scaut_pass_on")
  db.actor:give_info_portion("red_scaut_pass_fire")
end

function timer_merc_after_end()
  alife():create("new_killer_veteran5", vector():set(661.4,-43.9,178.0), 227126, 1914)
  alife():create("new_killer_veteran6", vector():set(661.4,-43.9,178.0), 227126, 1914)
end

function timer_merc()
  timers.start_timer("timer_merc",0,0,30,"mike.timer_merc_end()")
end

function timer_merc_end()
  sak.send_tip("Меченный, ждём на Радаре. \\nСоветую не затягивать, в твоих же интересах.","Адресат неизвестен",11,20,"killer","sak", "red")
  db.actor:give_info_portion("mercs_call")
  --db.actor:disable_info_portion("lx8_door_unlocked")
end

function timer_merc_enemy()
  timers.start_timer("timer_merc_enemy",0,0,15,"mike.timer_merc_enemy_end()")
end

function timer_merc_enemy_end()
  db.actor:give_info_portion("mil_mercs_fire")
end

function spawn_x12_mercs()
  alife():create("new_killer_x12", vector():set(3.38,-7.45,-80.06),6844,2790)
end

function take_quest_tools()
	sak.create_items(db.actor,"quest_tools",1)
end

function give_quest_tools()
	sak_inventory.release_actor_items("quest_tools", 1)
end

function zub_add_prize()
  sak.create_items(db.actor, "ammo_7.62x54_ap",10)
end

function tools_have()
  if sak_inventory.rucksack["quest_tools"] then
	if lua_random()<0.028 then
		level.add_pp_effector("black_tip_eff.ppe", 1031, false)
	end
  end
end  

function agru_add_pusirek()
  local obj1 = g_sim:story_object(story_ids.u_agr_inventory_box_klyk)
  if obj1 then
	  g_sim:create("af_dummy_fire",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
end

function assistant_marker()
  if db.actor:has_info("ass_marker_done") then return end
  if db.actor:has_info("sakharov_matveev") and not db.actor:has_info("assistant_out") then 
    db.actor:give_info_portion("ass_marker_done")
  end	
end

function repa()
--просто так, за красивые глаза, чтобы уже в начале игры не попадать в глупые ситуации
--db.actor:change_character_reputation(300)
--db.actor:set_character_rank(db.actor:character_rank() +100)
end

function have_pusirek()
	return sak.have_items_count("af_dummy_fire",1)~=false
end

function give_pusirek()
	sak_inventory.release_actor_items("af_dummy_fire",1)
end

function saharov_teleport_start()
   timers.start_timer("saharov_teleport_start",0,4,15,"mike.saharov_teleport_start_end()")
end 

function saharov_teleport_start_end()
  db.actor:give_info_portion("saharov_teleport_info")
end

function clear_time_saharov_teleport()
  db.actor:disable_info_portion("saharov_teleport_info")
end

function take_mutant_psevdodog_tail(first_speaker, second_speaker)   
  local obj = misc.spawn_to ("mutant_psevdodog_tail", db.actor)
  if obj then
      schedule.add ("t_m_p_t","mike.take_psev_tail("..obj.id..")",200)
      sak.relocate_item(second_speaker, "in", "mutant_psevdodog_tail", 1)
  end
end

function take_psev_tail(id)
  params.obj_condition (id, 0.51)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = 0.51
  pk:set(data)
end

function add_nagrad_saharov()
  local nagrad_sah={
  "medkit_army",
  "medkit_scientic",
  "antirad"
  }
  local item = ""
  local count = lua_random(3,5)
  for i=1,count do
  item = nagrad_sah[lua_random(table.getn(nagrad_sah))]
    sak.create_items(db.actor,item,1)
  end
end

function not_bad_job()
  db.actor:change_character_reputation(10)
end

function good_job()
  db.actor:change_character_reputation(20)
  db.actor:set_character_rank(db.actor:character_rank() +5)
end

function very_good_job()
  db.actor:change_character_reputation(30)
  db.actor:set_character_rank(db.actor:character_rank() +10)
end

function mercs_no_enemy()
   db.actor:disable_info_portion("mil_mercs_fire")
end

function timer_assistant()
  timers.start_timer("timer_assistant",2,5,0,"mike.timer_assistant_end()")
end

function timer_assistant_end()
  db.actor:give_info_portion("assistant_timer_end")
end

function add_bm()
    sak.create_items(db.actor,"wpn_bm16_full",1)
end

function timer_docent_borov()
  timers.start_timer("timer_docent_borov",0,3,10,"mike.timer_docent_borov_end()")
end

function timer_docent_borov_end()
  db.actor:give_info_portion("docent_borov_end")
end

function give_spring(first_speaker, second_speaker)   
  local obj = misc.spawn_to ("af_dummy_spring", db.actor)
  if obj then
      schedule.add ("t_m_p_t","mike.give_spring_bad("..obj.id..")",100)
      sak.relocate_item(second_speaker, "in", "af_dummy_spring", 1)
  end
end

function give_spring_bad(id)
local i=lua_random(40,65)
local j=i*0.01
  params.obj_condition (id, j)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = j
  pk:set(data)
end

function add_rad_pda()
   amk.spawn_item("rad_pda",vector():set(530.7,-49.41,-241.61),2061,180657)
end

function add_100_12x76_dart()
  sak.create_items(db.actor,"ammo_12x76_dart",10)
end

function vlad_rand()
  local i=lua_random(1,3)
  if i==1 then
	db.actor:give_info_portion("vlad_rand_1_info")
  elseif i==2 then
	db.actor:give_info_portion("vlad_rand_2_info")
  elseif i==3 then
	db.actor:give_info_portion("vlad_rand_3_info")	
  end
end

function give_dsc_gigant(first_speaker, second_speaker)   
  local obj = misc.spawn_to ("mutant_psevdogigant_hand", db.actor)
  if obj then
      schedule.add ("t_m_p_t","mike.take_dsc_gigant("..obj.id..")",200)
      sak.relocate_item(second_speaker, "in", "mutant_psevdogigant_hand", 1)
  end
end

function take_dsc_gigant(id)
local i=lua_random(30,45)
local j=i*0.01
  params.obj_condition (id, j)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = j
  pk:set(data)
end

function timer_petrov()
  timers.start_timer("timer_petrov",0,0,50,"mike.timer_petrov_end()")
end

function timer_petrov_end()
  db.actor:give_info_portion("petrov_end_info")
end

function have_marsh_flash()
  return sak.have_items_count("marsh_flash",1)
end

function give_marsh_flash()
  sak_inventory.release_actor_items("marsh_flash",1)
end

function add_marsh_flash()
  sak.create_items(db.actor, "marsh_flash",1)
end

function upgrade_outfit_precond(trader, actor)
  local item_in_slot_6 = db.actor:item_in_slot(6)
  if item_in_slot_6~=nil and (strpos(item_in_slot_6:section(),"bandit_veteran_",1,true) or strpos(item_in_slot_6:section(),"bandit_master_",1,true)) then 
  return true
  else return false
  end  
end

function add_20green_kolbasa()
    sak.create_items(db.actor,"green_kolbasa",20)
end

function give_e_chimera_kidney(first_speaker, second_speaker)   
  local obj = misc.spawn_to ("mutant_e_chimera_kidney", db.actor)
  if obj then
      schedule.add ("t_m_p_t","mike.take_e_chimera_kidney("..obj.id..")",200)
      sak.relocate_item(second_speaker, "in", "mutant_e_chimera_kidney", 1)
  end
end

function take_e_chimera_kidney(id)
local i=lua_random(45,65)
local j=i*0.01
  params.obj_condition (id, j)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = j
  pk:set(data)
end

function give_flesh_eye(first_speaker, second_speaker)   
  local obj = misc.spawn_to ("mutant_flesh_eye", db.actor)
  if obj then
      schedule.add ("t_m_p_t","mike.take_flesh_eye("..obj.id..")",200)
      sak.relocate_item(second_speaker, "in", "mutant_flesh_eye", 1)
  end
end

function take_flesh_eye(id)
local i=lua_random(30,45)
local j=i*0.01
  params.obj_condition (id, j)
  local objd=g_sim:object(id)
  local pk = get_netpk(objd,1)
  local data = pk:get()
  data.condition = j
  pk:set(data)
end

function marsh_pribor_on(obj_id)
  schedule.add("check_drop", "mike.marsh_pribor_start("..obj_id..")", 200) 
end

function marsh_pribor_start(obj_id)
  local i=lua_random(16,25)
  local obj=client_obj(obj_id)
  if obj==nil or obj:parent()~=nil then return end
  timers.start_timer("marsh_pribor",0,i,10,"mike.marsh_pribor_end()")
  sak.send_tip("Начата работа регистратора. До завершения прибор не поднимать. \\nПо завершении придёт сообщение. Продолжительность работы приблизительно сутки.","Статус прибора",2,10,"pribor","pda_news", "green")
end

function marsh_pribor_end()
  sak.send_tip("Работа регистратора завершена.","Статус прибора",2,10,"pribor","pda_news", "green")
  db.actor:give_info_portion("marsh_pribor_done")
  db.actor:give_info_portion("remove_marsh_pribor_spot")
end

function marsh_pribor_aver_on(obj_id)
  schedule.add("check_drop", "mike.marsh_pribor_aver_start("..obj_id..")", 200) 
end

function marsh_pribor_aver_start(obj_id)
  local obj=client_obj(obj_id)
  if obj==nil or obj:parent()~=nil then return end
  sak.send_tip("Начата работа регистратора. По завершении придёт сообщение.","Статус прибора",2,10,"pribor","pda_news", "green")
  db.actor:give_info_portion("marsh_pribor_aver_start")
end

function marsh_pribor_aver_end()
	if has_alife_info("marsh_pribor_aver_done") then return
	else
	  sak.send_tip("Работа регистратора завершена.","Статус прибора",2,10,"pribor","pda_news", "green")
	  db.actor:give_info_portion("marsh_pribor_aver_done")
	  db.actor:disable_info_portion("marsh_pribor_aver_start")
	end  
end

function add_marsh_pribor()
    sak.create_items(db.actor,"marsh_pribor",1)
end

function give_marsh_pribor()
    sak_inventory.release_actor_items("marsh_pribor",1)
end

function have_marsh_pribor()
    return sak.have_items_count("marsh_pribor",1)
end

function add_marsh_pribor_spot()
  local obj=g_sim:story_object(9810)
  if obj then
  amk.add_spot_on_map(obj.id, "crlc_small", "Место обитания гигантов. Тут нужно расположить регистратор событий.")
  end
end

function remove_marsh_pribor_spot()
  local obj=g_sim:story_object(9810)
  if obj then
     amk.remove_spot_from_map(obj.id, "crlc_small")
  end
end

function timer_new_theme()
  timers.start_timer("timer_new_theme",1,12,00,"mike.timer_new_theme_end()")
end

function timer_new_theme_end()
  db.actor:give_info_portion("new_theme_info")
end

function add_soul()
    sak.create_items(db.actor,"af_soul_dyn4d",1)
end

function add_antitush()
    sak.create_items(db.actor,"af_full_antitush",1)
end

function antitush_sound()
	local snd_obj = xr_sound.get_safe_sound_object([[detectors\antitush]])
--	if sak.arts_operate==true and sak_inventory.sash["af_full_antitush"] then
	snd_obj:play_no_feedback(db.actor, sound_object.s2d + sound_object.looping, 0, vector(), 1.0)
--	end
end

function spawn_in_generators()
   local rand = lua_random(1,3)
   local table_gift={"antirad","medkit_scientic","vodka"}  
   local obj = amk.spawn_item("sak_skelet", vector():set(170.7,30.6,-488.5),3152,533798)
    if obj then
        local pk = get_netpk(obj,1)
        local data = pk:get()
        data.object_flags = -197
        data.visual_name="physics\\dead_body\\skelet_combine_pose_01.ogf"
        data.physic_type=3
        data.mass=10
        pk:set(data)
    end
	amk.spawn_item("flask_army",vector():set(170.7,30.6,-490),3152,533798)
	amk.spawn_item("matches",vector():set(170.7,30.6,-490),3152,533798)
	amk.spawn_item("vodka",vector():set(170.7,30.6,-490),3152,533798)
	amk.spawn_item("medkit_army",vector():set(170.7,30.6,-490),3152,533798)
	amk.spawn_item(table_gift[rand],vector():set(170.7,30.6,-490),3152,533798)
end

function spawn_in_deadcity()
   local rand = lua_random(1,3)
   local table_gift={"antirad","medkit_scientic","conserva"}  
   local obj = amk.spawn_item("sak_skelet", vector():set(-172.7,0.13,40.6),3844,245514)
    if obj then
        local pk = get_netpk(obj,1)
        local data = pk:get()
        data.object_flags = -197
        data.visual_name="physics\\dead_body\\skelet_combine_pose_01.ogf"
        data.physic_type=3
        data.mass=10
        pk:set(data)
    end
	amk.spawn_item("conserva",vector():set(-172.7,0.13,41.34),3791,153228)
	amk.spawn_item("matches",vector():set(-172.7,0.13,41.34),3791,153228)
	amk.spawn_item("conserva",vector():set(-172.7,0.13,41.34),3791,153228)
	amk.spawn_item("medkit_army",vector():set(-172.7,0.13,41.34),3791,153228)
	amk.spawn_item(table_gift[rand],vector():set(-172.7,0.13,41.34),3791,153228)
end

function have_repair_item()
  if sak.have_items_count("repair_itemoutfit_feik",1)~=false or sak.have_items_count("repair_item_weapon_feik",1)~=false then
  return true
  else
  return false
  end
end

function give_repair_item()
  if sak.have_items_count("repair_itemoutfit_feik",1)~=false then
    sak_inventory.release_actor_items("repair_itemoutfit_feik",1) 
	return end
  if sak.have_items_count("repair_item_weapon_feik",1)~=false then
    sak_inventory.release_actor_items("repair_item_weapon_feik",1)
  end
end

function add_3ammo_762x54_7h1()
  sak.create_items(db.actor,"ammo_7.62x54_7h1",3)
end

function add_akk_plus()
  sak.create_items(db.actor,"af_full_akkum",2)
  sak.create_items(db.actor,"matches",1)
end

function add_medkit_plus()
  sak.create_items(db.actor,"medkit_scientic",4)
  sak.create_items(db.actor,"bandage",10)
end

function add_antirad_plus()
  sak.create_items(db.actor,"antirad",8)
  sak.create_items(db.actor,"bandage",10)
end

function add_1_set()
  sak.create_items(db.actor,"medkit_scientic",1)
  sak.create_items(db.actor,"bandage",5)
  sak.create_items(db.actor,"conserva",2)
  sak.create_items(db.actor,"ammo_5.45x39_fmj",1)
  sak.create_items(db.actor,"matches",1)
end

function add_2_set()
  sak.create_items(db.actor,"medkit_scientic",1)
  sak.create_items(db.actor,"bandage",5)
  sak.create_items(db.actor,"antirad",2)
  sak.create_items(db.actor,"ammo_7.62x54_7h1",1)
  sak.create_items(db.actor,"matches",1)
end

function add_3_set()
  sak.create_items(db.actor,"conserva",1)
  sak.create_items(db.actor,"ammo_5.45x39_fmj",1)
  sak.create_items(db.actor,"ammo_7.62x54_7h1",1)
  sak.create_items(db.actor,"matches",1)
end

function add_matches()
  sak.create_items(db.actor,"matches",1)
end

function add_ammo_556()
  sak.create_items(db.actor,"ammo_5.56x45_ss190",1)
end

function add_radar_habar()
  local obj=amk.spawn_item("rukzak_inventory_box",vector():set(529.9,-49.5,-240.5),2061,180304)
  if obj then
     fill_radar_habar(obj.id)
  end
end

function fill_radar_habar(obj)
  local rand = lua_random(1,5)
  local table_gift={"antirad","ammo_7.62x54_ap","medkit_scientic","ammo_5.45x39_ap","matches"}
  local i=rand-1
  if i<1 then i=5 end
  local obj=g_sim:object(tonumber(obj))
  g_sim:create("medkit_scientic",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("antirad",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("ammo_5.56x45_ap", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create("ammo_7.62x54_ap", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create(table_gift[rand], obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  g_sim:create(table_gift[i], obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
  if obj.online then
    g_sim:set_switch_online(obj.id, false)
    g_sim:set_switch_offline(obj.id, true)
    amk.convert_npc[obj.id]=1
  end
end

function spawn_new_val_glavn()
 alife():create("new_val_glavn", vector():set(-92.2,-0.8,-190.6), 13495, 3241)
end

-- Добавка для 7.53 --
function timer_petrenko_mdata()
  timers.start_timer("timer_petrenko_mdata",1,12,00,"mike.timer_petrenko_mdata_end()")
end

function timer_petrenko_mdata_end()
  db.actor:give_info_portion("petrenko_mdata_timer_end")
end

function timer_petrenko_tesla()
  timers.start_timer("timer_petrenko_tesla",2,1,00,"mike.timer_petrenko_tesla_end()")
end

function timer_petrenko_tesla_end()
  db.actor:give_info_portion("petrenko_tesla_timer_end")
end

function take_gauss_akk()
    sak.create_items(db.actor,"ammo_super_gauss",1)
end

function give_gauss_akk()
    vergas_lib.search_items("ammo_super_gauss",1,2)
end

function gauss_akk_have()
  return vergas_lib.search_items("ammo_super_gauss",1,1)~= false
end

function gauss_akk_no_have()
  return vergas_lib.search_items("ammo_super_gauss",1,1)== false
end

function timer_marsh_ecolog_akk()
  timers.start_timer("timer_marsh_ecolog_akk",1,12,00,"mike.timer_marsh_ecolog_akk_end()")
end

function timer_marsh_ecolog_akk_end()
  db.actor:give_info_portion("marsh_ecolog_akk_finish_info")
end

function add_kamaz_accum()
  sak.create_items(db.actor,"item_kamaz_accum",1)
end

function have_kamaz_accum()
  return sak.have_items_count("item_kamaz_accum",1)~=false
end

function have_no_kamaz_accum()
  return sak.have_items_count("item_kamaz_accum",1)==false
end

function give_kamaz_accum()
  sak_inventory.release_actor_items("item_kamaz_accum", 1)
  amk.spawn_item("item_kamaz_accum",vector():set(-280.11,1.4,36.2),3351,7090)
end

function give_kamaz_accum_pet()
  sak_inventory.release_actor_items("item_kamaz_accum", 1)
end

function add_aver_akk_spot()
-- временно болт, пока не сделано sid для монолита
  local obj=amk.spawn_item("testsak",vector():set(-343.35,-24.13,167.6),2891,299077)
  if obj then
  level.map_add_object_spot(obj.id, "crlc_very_big", "Место концентрации потоков энергии. Где-то тут нужно расположить аккумулятор поближе к какой-то массе.")
  end
end

function remove_aver_akk_spot()
--  local obj=g_sim:story_object(9810)
--  if obj then
--     amk.remove_spot_from_map(obj.id, "crlc_small")
--  end
end

function akk_aver_on()
	if has_alife_info("akk_aver_done") then return
	else
	  sak.send_tip("","Вроде тут сгодится.",2,10,"pribor","pda_news", "green")
	  db.actor:give_info_portion("akk_aver_start")
	end  
end

function akk_aver_end()
	if has_alife_info("akk_aver_done") then return
	else
	  sak.send_tip("","Не забыть бы аккумулятор забрать из Туманной чащи.",2,12,"g_g","rememb","yellow")
	  db.actor:give_info_portion("akk_aver_done")
	end  
end

function timer_full_akk()
  timers.start_timer("timer_full_akk",0,1,05,"mike.timer_full_akk_end()")
end

function timer_full_akk_end()
  db.actor:give_info_portion("marsh_ecolog_second_part")
end

function add_theory()
  sak.create_items(db.actor,"mar_ecolog_theory",1)
end

function have_theory()
  return sak.have_items_count("mar_ecolog_theory",1)~=false
end

function give_theory()
  sak_inventory.release_actor_items("mar_ecolog_theory", 1)
end

function pet_small_gift()
  sak.create_items(db.actor,"vodka",1)
  sak.create_items(db.actor, "ammo_7.62x39_fmj",2)
end

function pet_big_gift()
  sak.create_items(db.actor,"vodka",2)
  sak.create_items(db.actor, "ammo_7.62x39_ap",2)
  sak.create_items(db.actor, "ammo_7.62x54_ap",3)
  sak.create_items(db.actor, "medkit_army",3)
end

function mayatnik_aver_will_be(obj_id)
  schedule.add("check_drop", "mike.mayatnik_aver_start("..obj_id..")", 200) 
end

function mayatnik_aver_start(obj_id)
  local obj=client_obj(obj_id)
  if obj==nil or obj:parent()~=nil then return end
  local a=obj:name()
  amk_mod.af_flash(af)
  misc.release_by_name(a)
  db.actor:give_info_portion("mayatnik_aver_start_info")
end

function mayatnik_aver_ready()
	if has_alife_info("mayatnik_aver_ready_info") then return
	else
	  sak.send_tip("","Надо бы проверить мой маятник.",2,12,"g_g","rememb","yellow")
	  db.actor:give_info_portion("mayatnik_aver_ready_info")
	  db.actor:disable_info_portion("mayatnik_aver_start_info")
	end  
end

function add_mayatnik_aver()
  local a=lua_random(1,6)
  local caps=mayat[a]
  misc.spawn_obj(caps, vector():set(350.91,-6.01,-21.23))
end

function mayatnik_prip_will_be(obj_id)
  schedule.add("check_drop", "mike.mayatnik_prip_start("..obj_id..")", 200) 
end

function mayatnik_prip_start(obj_id)
  local obj=client_obj(obj_id)
  if obj==nil or obj:parent()~=nil then return end
  local a=obj:name()
  amk_mod.af_flash(af)
  misc.release_by_name(a)
  db.actor:give_info_portion("mayatnik_prip_start_info")
end

function mayatnik_prip_ready()
	if has_alife_info("mayatnik_prip_ready_info") then return
	else
	  sak.send_tip("","Надо бы проверить мой маятник.",2,12,"g_g","rememb","yellow")
	  db.actor:give_info_portion("mayatnik_prip_ready_info")
	  db.actor:disable_info_portion("mayatnik_prip_start_info")
	end  
end

function add_mayatnik_prip()
  local a=lua_random(1,6)
  local caps=mayat[a]
  misc.spawn_obj(caps, vector():set(29.7,1.8,355.8))
end

function timer_takeup()
  timers.start_timer("timer_takeup",0,0,15,"mike.timer_takeup_end()")
end

function timer_takeup_end()
	sleep_manager.slip_mayat()
end

function takeup_mayatnik()
	if level.name()=="aver" and db.actor:has_info("mayatnik_aver_ready_info") then
	local pos=db.actor:position()
		if (pos.x>320 and pos.x<361) and (pos.z>-41 and pos.z<-10) then
		db.actor:disable_info_portion("mayatnik_aver_ready_info")
		db.actor:disable_info_portion("mayatnik_aver_info")
		timer_takeup()
		end
	end  
	if level.name()=="l11_pripyat" and db.actor:has_info("mayatnik_prip_ready_info") then
	local pos=db.actor:position()
		if (pos.x>15 and pos.x<45) and (pos.z>340 and pos.z<370) then
		db.actor:disable_info_portion("mayatnik_prip_ready_info")
		db.actor:disable_info_portion("mayatnik_prip_info")
		timer_takeup()
		end
	end
end

function add_sanat_dinamit()
  g_sim:create("dynamite",vector():set(-103.876633,34.247833,615.258545),162,3028)
end

function timer_new_theme_last()
  timers.start_timer("timer_new_theme_last",2,1,00,"mike.timer_new_theme_last_end()")
end

function timer_new_theme_last_end()
  db.actor:give_info_portion("last_new_theme_info")
end

function add_stalker_treasure()
  local obj1 = g_sim:story_object(story_ids.red_treasure_4)
  if obj1 then
    g_sim:create("af_soul_capsule_dyn2d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("af_cristall_capsule_dyn2d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("af_gold_fish_capsule_dyn3d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("af_night_star_capsule_dyn3d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    g_sim:create("af_electra_flash_dyn4d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
end

function charge_akk_in_tesla()
  if db.actor:has_info("petrenko_tesla_job_done") then return end
  if sak.have_items_count("item_kamaz_accum",1)==false then return end
	db.actor:give_info_portion("akk_is_ready")
end

function pet_1_gift()
	sak.create_items(db.actor, "ammo_7.62x54_7h1",15)
end

function pet_2_gift()
	sak.create_items(db.actor, "medkit_army",10)
	sak.create_items(db.actor, "antirad",5)
end

function pet_3_gift()
	sak.create_items(db.actor, "bearer_cheque",1)
end

function pet_4_gift()
	sak.create_items(db.actor, "ammo_7.62x54_ap",20)
	sak.create_items(db.actor, "medkit_army",6)
	sak.create_items(db.actor, "antirad",3)
end

function pet_5_gift()
	--sak.create_items(db.actor, "dolg_black_exoskeleton",1)
	sak.create_items(db.actor, "medkit_army",4)
	sak.create_items(db.actor, "antirad",6)
end

function pet_6_gift()
	--sak.create_items(db.actor, "monolit_scientific_outfit",1)
	sak.create_items(db.actor, "medkit_army",5)
	sak.create_items(db.actor, "antirad",4)
end

function pet_7_gift()
	sak.create_items(db.actor, "ammo_7.62x54_7h14",10)
	sak.create_items(db.actor, "medkit_army",3)
	sak.create_items(db.actor, "antirad",5)
end

function pet_8_gift()
	sak.create_items(db.actor, "2bearer_cheque",1)
	sak.create_items(db.actor, "medkit_army",3)
	sak.create_items(db.actor, "antirad",4)
end

function marsh_gift()
	sak.create_items(db.actor, "medkit_scientic",4)
	sak.create_items(db.actor, "antirad",4)
end

function compass(obj_id)
  schedule.add("check_drop", "mike.compass_start("..obj_id..")", 200) 
end

function compass_start(obj_id)
  local obj=client_obj(obj_id)
  if obj==nil or obj:parent()~=nil then return end
  local a=obj:name()
  amk_mod.af_flash(af)
  misc.release_by_name(a)
  mike.timer_compass()
end

function timer_compass()
  timers.start_timer("timer_compass",0,0,55,"mike.timer_compass_end()")
end

function timer_compass_end()
  amk.spawn_item("af_compass_dyn5d",vector():set(220.36,-11.27,-101.76),3315,138426)
end

local soldier_rs=lua_random(3,4)
function soldier_rep_have()
  local soldier_rems=nlc_vars.soldier_rem or 0
  if soldier_rems<=soldier_rs then return true
  else
  return false
  end
end
function soldier_rep_not_have()
  return not soldier_rep_have()
end
function soldier_rep_add()
  local soldier_rems=nlc_vars.soldier_rem or 0
  nlc_vars.soldier_rem = (soldier_rems+1)
end

function add_gauss()
 amk.spawn_item("wpn_gungauss",vector():set(25.208681,-19.467064,-153.252975),2897,909203)
end

function gen_tele()
  local obj_id,obj=-1,nil
  for i,k in pairs(sak_inventory.belt_items) do
    local kolvo=table.getn(k)
	if strpos(i,"af_compass",1,true) and not strpos(i,"_dyn6d",1,true) then
	  obj_id=k[1]
      obj= g_sim:object(obj_id)
	end
  end
  if obj==nil then return end
  if sak.arts_operate then
    local pk = get_netpk(obj,1)
    local data = pk:get()
    local cond=data.condition+0.0004
    if cond>=1 then cond=0.9999 end
    if cond>0.25 then
      local new_cond=(cond-0.20)
      params.obj_condition(obj_id, new_cond)
      data.condition = new_cond
      pk:set(data)
      level.add_pp_effector("blink.ppe", 234, false)
      level.add_pp_effector("teleport.ppe", 2006, false)
      sak.eff_vodka()
      if new_cond<0.25 then
        coord_params.set_obj_section(obj_id, "af_compass_dyn6d")
      end
      db.actor:set_actor_position(vector():set(-232.14703369141,43.340000152588,-41.621490478516))
      return
    end
  end
end

function add_saharov_gift()
  sak.create_items(db.actor, "super_scientific_outfit",1)
end

function klyk_is_ready()
  sak_inventory.release_actor_items("item_psi_helmet_02",1)
  sak_inventory.release_actor_items("af_compass",1)
end

function timer_mar_factory()
  timers.start_timer("timer_mar_factory",9,30,0,"mike.timer_mar_factory_end()")
end

function timer_mar_factory_end()
  db.actor:give_info_portion("start_find_soldiers")
end
---------------
function test()
xr_effects.game_credits()
get_console():hide()
end
---------------
function test()
  local a=nlc_vars.artmod_goods
  sak.send_tip("Сколько наварил.",a,0,12,"g_g","sak","red")
--g_sim:create("amk_zone_sphere",vector():set(29.7,10,355.8), 139177, 2260)
end
			

--- igor.doc ------- Volk and Simbion ------
--спавним записку в туалете и немного барахлишка, подсластить пилюлю
function add_vil_wolf_letter()
  local obj1 = g_sim:story_object(story_ids.lost_inventory_box_02)
  if obj1 then
  local item = {"medkit","vodka","energy_drink","bandage","antirad"}
  local count = lua_random(2,3)
    for i=1,count do
		local count2 = lua_random(1,5)
		g_sim:create(item[count2],obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
    end
		g_sim:create("zapiska_volk",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
end
--спавним тайник Волка 
function added_vil_ranger_treasure()
  --local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(-100.861191,6.424353,52.707348),3328,11904)
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(27.699320,-3.165885,-6.374194),3329,7783)
  if obj1 then
  fill_vil_ranger_treasure(obj1.id)
  end
end
--наполняем тайник Волка
function fill_vil_ranger_treasure(obj)
  local obj1=g_sim:object(tonumber(obj))
  for a=1,1 do
  g_sim:create("af_medusa_dyn1d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("af_drops_dyn5d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("af_blood_dyn5d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("af_rusty_thorn_dyn1d",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  g_sim:create("volk_pda",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  end
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--проверяем пда Волка
function have_volk_pda()
  return sak.have_items_count("volk_pda",1)~=false
end
function give_volk_pda()
   sak_inventory.release_actor_items("volk_pda", 1)
end
--получаем приз от Волка
function volk_gift()
  sak.create_items(db.actor,"wpn_akm_unical",1)
  sak.create_items(db.actor,"ammo_7.62x39_fmj",5)
end
--спавним призовой тайник1 Волка на Радаре
function add_volk_prize_treasure1()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(654.548645,-51.036823,-59.858109),1896,226836)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Награда Волка")
  if obj1 then
  fill_volk_prize_treasure1(obj1.id)
  end
  sak.send_tip("Получена наводка на тайник.","Награда Волка",5,15,"g_g","sak","green")
end
--наполняем призовой тайник1 Волка
function fill_volk_prize_treasure1(obj)
  local obj1=g_sim:object(tonumber(obj))
  local item = {"ammo_7.62x54_ap","vodka","medkit_army","medkit_scientic","suhpay"}
  local i,j
  if db.actor:has_info("volk_small_gift") then
	i=lua_random(4,6)
	  for a=1,i do
	  j=lua_random(1,3)
		  g_sim:create(item[j],obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  end
	g_sim:create("af_dummy_battery_capsule",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  else
	i=lua_random(8,12)
	  for a=1,j do
	  j=lua_random(1,5)
		  g_sim:create(item[j],obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  end
  end   
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--спавним призовой тайник2 Волка в Лиманске
function add_volk_prize_treasure2()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(-82.166389,-9.927167,58.757030),2988,5)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Награда Волка")
  if obj1 then
  fill_volk_prize_treasure2(obj1.id)
  end
  sak.send_tip("Получена наводка на тайник.","Награда Волка",5,15,"g_g","sak","green")  
end
--наполняем призовой тайник2 Волка
function fill_volk_prize_treasure2(obj)
  local obj1=g_sim:object(tonumber(obj))
  local item = {"ammo_7.62x54_ap","vodka","medkit_army","medkit_scientic","suhpay"}
  local i,j
  if db.actor:has_info("volk_small_gift") then
	i=lua_random(4,6)
	  for a=1,i do
	  j=lua_random(1,3)
		  g_sim:create(item[j],obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  end
	g_sim:create("af_dummy_pellicle_capsule",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  else
	i=lua_random(8,12)
	  for a=1,j do
	  j=lua_random(1,5)
		  g_sim:create(item[j],obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  end
  end   
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--спавним призовой тайник3 Волка в Рыжем лесу
function add_volk_prize_treasure3()
  local obj1=amk.spawn_item("rukzak_inventory_box",sak.v3f(25.640947,17.338980,20.445881),3263,81206)
  level.map_add_object_spot(obj1.id, "crlc_big_treasure3","Награда Волка")
  if obj1 then
  fill_volk_prize_treasure3(obj1.id)
  end
  sak.send_tip("Получена наводка на тайник.","Награда Волка",5,15,"g_g","sak","green")  
end
--наполняем призовой тайник3 Волка
function fill_volk_prize_treasure3(obj)
  local obj1=g_sim:object(tonumber(obj))
  local item = {"ammo_7.62x54_ap","vodka","medkit_army","medkit_scientic","suhpay"}
  local i,j
  if db.actor:has_info("volk_small_gift") then
	i=lua_random(4,6)
	  for a=1,i do
	  j=lua_random(1,3)
		  g_sim:create(item[j],obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  end
	g_sim:create("af_dummy_glassbeads_capsule",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
  else
	i=lua_random(8,12)
	  for a=1,j do
	  j=lua_random(1,5)
		  g_sim:create(item[j],obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
	  end
  end   
  if obj1.online then
    g_sim:set_switch_online(obj1.id, false)
    g_sim:set_switch_offline(obj1.id, true)
    amk.convert_npc[obj1.id]=1
  end
end
--функция для спавна тайника Волка 
function add_vil_ranger_treasure()
  if not has_alife_info("petruha_info_treasure") then 
   added_vil_ranger_treasure()
   sak.send_tip("Вроде настоящий тайник должен быть где-то, а не это.","Может, поискать всё же стоит?",5,12,"g_g","sak","yellow")
   db.actor:give_info_portion("petruha_info_treasure") 
  end 
end
--при взятии содержимого тайника Волка получим смс
function info_volk_pda()
  sak.send_tip("Странный набор, может, для сборки... Надо бы поговорить с Волком.","Надо запомнить",5,12,"g_g","sak","yellow")
end

-- проверяем арты и отдаём вместе с ПДА
function have_volk_set()
  if sak.have_items_count("af_medusa_dyn1d", 1)~=false and sak.have_items_count("af_drops_dyn5d", 1)~=false and sak.have_items_count("af_blood_dyn5d", 1)~=false and sak.have_items_count("af_rusty_thorn_dyn1d", 1)~=false then return true
  else return false end
end

function give_volk_set()
  sak_inventory.release_actor_items("af_medusa", 1)
  sak_inventory.release_actor_items("af_drops", 1)
  sak_inventory.release_actor_items("af_blood", 1)
  sak_inventory.release_actor_items("af_rusty_thorn", 1)
  sak_inventory.release_actor_items("volk_pda", 1)
end

-- ПСО-3 от Петренко
function gg_3_caps_have()
  return gg_n_caps_have(3)
end
function give_3_caps()
  give_n_caps(3)
end
--смотреть в sak.script
function add_strelok_spots_info()
  if db.actor:has_info("agr_klyk_04_info") and db.actor:has_info("marsh_zapiska_1") and not db.actor:has_info("strelok_spots_info") then
    db.actor:give_info_portion("strelok_spots_info")
  end
end
--переходы
function add_spots_esc_gar()
	db.actor:give_info_portion("info_way300a")
    local obj1 = g_sim:story_object(story_ids.exit_esc_to_garbage_01)
	local obj2 = g_sim:story_object(story_ids.exit_to_escape_01)
    if obj1 then
	  level.map_add_object_spot_ser(obj1.id, "level_changer_self", "to_garbage")
	end
    if obj2 then
	  level.map_add_object_spot_ser(obj2.id, "level_changer_self", "to_escape")
	end
	sak.info_received()
end

function add_spots_gar_bar()
    db.actor:give_info_portion("info_way302a")
    local obj1 = g_sim:story_object(story_ids.exit_gar_to_bar_01)
	local obj2 = g_sim:story_object(story_ids.exit_bar_to_garbage_01)
    if obj1 then
	  level.map_add_object_spot_ser(obj1.id, "level_changer_self", "to_bar")
	end
    if obj2 then
	  level.map_add_object_spot_ser(obj2.id, "level_changer_self", "to_garbage")
	end
	sak.info_received()
end

function add_spots_gar_agr()
    db.actor:give_info_portion("info_way301a")
    local obj1 = g_sim:story_object(story_ids.exit_to_agroprom_01)
	local obj2 = g_sim:story_object(story_ids.exit_to_garbage_02)
    if obj1 then
	  level.map_add_object_spot_ser(obj1.id, "level_changer_self", "to_agroprom")
	end
    if obj2 then
	  level.map_add_object_spot_ser(obj2.id, "level_changer_self", "to_garbage")
	end
	sak.info_received()
end

function add_spots_gar_dar()
	db.actor:give_info_portion("info_way303a")
    local obj1 = g_sim:story_object(story_ids.exit_gar_to_darkvalley_01)
	local obj2 = g_sim:story_object(story_ids.exit_dark_to_garbage_02)
    if obj1 then
	  level.map_add_object_spot_ser(obj1.id, "level_changer_self", "to_darkvalley")
	end
    if obj2 then
	  level.map_add_object_spot_ser(obj2.id, "level_changer_self", "to_garbage")
	end
	sak.info_received()
end

function add_spots_mil_rad()
	db.actor:give_info_portion("info_way306a")
    local obj1 = g_sim:story_object(story_ids.exit_mil_to_radar_01)
	local obj2 = g_sim:story_object(story_ids.rad_exit_to_military_01)
    if obj1 then
	  level.map_add_object_spot_ser(obj1.id, "level_changer_self", "to_radar")
	end
    if obj2 then
	  level.map_add_object_spot_ser(obj2.id, "level_changer_self", "to_military")
	end
	sak.info_received()
end

function add_spots_dead_pri()
	db.actor:give_info_portion("info_way307a")
    local obj1 = g_sim:story_object(story_ids.dead_exit_to_prip_193)
	local obj2 = g_sim:story_object(story_ids.prip_exit_to_deadcity_195)
    if obj1 then
	  level.map_add_object_spot_ser(obj1.id, "level_changer_self", "to_pripyat")
	end
    if obj2 then
	  level.map_add_object_spot_ser(obj2.id, "level_changer_self", "to_deadcity")
	end
	sak.info_received()
end

function add_spots_hospital()
	db.actor:give_info_portion("info_way159a")
	db.actor:give_info_portion("info_way304a")
    local obj1 = g_sim:story_object(story_ids.exit_to_for)
	local obj2 = g_sim:story_object(story_ids.gar_exit_to_hospital_177)
	local obj3 = g_sim:story_object(story_ids.dsc_exit_to_hospital_255)
	local obj4 = g_sim:story_object(story_ids.hos_lev_chang_door)
    if obj1 then
	  level.map_add_object_spot_ser(obj1.id, "level_changer_self", "to_garbage")
	end
    if obj2 then
	  level.map_add_object_spot_ser(obj2.id, "level_changer_self", "to_hospital")
	end
    if obj3 then
	  level.map_add_object_spot_ser(obj3.id, "level_changer_self", "to_hospital")
	end
    if obj4 then
	  level.map_add_object_spot_ser(obj4.id, "level_changer_self", "to_darkscape")
	end
	sak.info_received()
end

function add_spots_av_pes()
	db.actor:give_info_portion("berloga_code_info")
	db.actor:give_info_portion("info_way138a")
    local obj1 = g_sim:story_object(story_ids.aver_level_changer_to_av_peshera)
    if obj1 then
	  level.map_add_object_spot_ser(obj1.id, "level_changer_self", "to_av_peshera")
	end
	sak.info_received()
end

function add_spots_dv_k()
    local obj1 = g_sim:story_object(story_ids.exit_to_escape)
    if obj1 then
	  level.map_add_object_spot_ser(obj1.id, "level_changer_self", "to_darkscape")
	end
end

function add_spots_x18()
    local obj1 = g_sim:story_object(story_ids.exit_to_labx18_01)
    if obj1 then
	  level.map_add_object_spot_ser(obj1.id, "level_changer_self", "to_x18")
	end
end

function add_spots_bar_mil()
    db.actor:give_info_portion("info_way113a")
	local obj1 = g_sim:story_object(story_ids.bar_space_restrictor)
	--local obj1 = g_sim:story_object(story_ids.bar_exit_to_military_01)
	local obj2 = g_sim:story_object(story_ids.exit_mil_to_bar_01)
    if obj1 then
	  level.map_add_object_spot_ser(obj1.id, "level_changer_self", "to_military")
	end
    if obj2 then
	  level.map_add_object_spot_ser(obj2.id, "level_changer_self", "to_bar")
	end	
end

function add_spots_ros_yan()
    db.actor:give_info_portion("info_way305a")
    local obj1 = g_sim:story_object(story_ids.exit_to_yantar_01)
	local obj2 = g_sim:story_object(story_ids.exit_to_rostok_01)
    if obj1 then
	  level.map_add_object_spot_ser(obj1.id, "level_changer_self", "to_yantar")
	end
    if obj2 then
	  level.map_add_object_spot_ser(obj2.id, "level_changer_self", "to_rostok")
	end	
end